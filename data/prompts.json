{
 "prompts": [
  "f function_run_prompt",
  "n function_run_line",
  "a pr prompt_previous",
  "n list_reverse",
  "n list_copy_reverse",
  "i list_copy_reverse",
  "n list_unique_reverse",
  "i list_unique_reverse",
  "n function_current_set",
  "i function_open",
  "a fcs function_current_set",
  "mc function_transform",
  "n function_identifier_replace",
  "c js_identifiers_names js_identifiers",
  "fcs function_identifier_replace",
  "mc js_identifiers",
  "mc each",
  "f function_identifier_replace",
  "n js_identifiers_named",
  "i js_identifiers_named",
  "n object_replace",
  "n object_properties_delete",
  "i object_properties_delete",
  "i object_replace",
  "c",
  "import {assert} from 'console';",
  "i import {assert} from 'console';",
  "i function_identifier_replace",
  "fcs function_param_new",
  "function_identifier_replace lambda ast=>{}",
  "f function_param_new",
  "ac f fm",
  "ac fc f",
  "ac fcs fs",
  "mc js_declaration",
  "o pr",
  "n object_invert",
  "c object_invert each_object",
  "i each_object",
  "i object_invert",
  "n function_aliases_inverted",
  "i function_aliases_inverted",
  "a ai function_aliases_inverted",
  "prompt_previous",
  "ppr",
  "ac p np",
  "pr prompt_previous",
  "f prompt_previous",
  "fm prompt_previous",
  "o fm",
  "i file_js_unparse",
  "pr",
  "n data_prompts",
  "i data_prompts",
  "a ps data_prompts",
  "ac pr p",
  "fs function_param_new",
  "mc js_declaration_single",
  "function_param_new function_dependencies",
  "a pn function_param_new",
  "fs function_dependencies",
  "a fd function_dependencies",
  "fd fd",
  "n function_imports",
  "i function_imports",
  "i fd",
  "c visit visit_async",
  "c visit_filter visit_filter_async",
  "c visit_filter_recursive visit_filter_recursive_async",
  "i visit_filter_recursive_async",
  "i visit_filter_async",
  "n visit_unique_async",
  "u p",
  "i visit_async",
  "i visit_unique_async",
  "i function_dependencies",
  "function_dependencies function_dependencies",
  "n function_dependencies_code",
  "n list_wait",
  "i functions_format",
  "o function_dependencies_code",
  "i function_dependencies_code",
  "function_dependencies_code",
  "i function_dependencies_code ",
  "function_dependencies_code function_dependencies_code",
  "ni clipboardy",
  "n clipboard_copy",
  "n function_dependencies_code_copy",
  "s clipboard",
  "i function_dependencies_code_copy",
  "u ac",
  "a ad function_alias_delete",
  "c function_alias_change function_alias_replace",
  "a ar function_alias_replace",
  "a fd function_dependencies_code_copy",
  "ar fd function_dependencies_code_copy",
  "c noop noop2",
  "fd function_copy",
  "ifunction_name_to_path",
  "function_name_to_path",
  "c np noop2",
  "c file_overwrite file_delete",
  "c function_new function_delete",
  "i function_delete",
  "a de function_delete",
  "o i",
  "n function_auto",
  "a ir function_identifier_replace",
  "fs function_auto ",
  "ir lambda ast=>{}",
  "n js_outside_move",
  "i function_auto",
  "a au function_auto",
  "fm js_outside_move",
  "f js_outside_move",
  "mc each_async",
  "ir lambda fd=>{}",
  "n js_code_export",
  "n js_declaration_name",
  "i js_declaration_name",
  "i js_imports_missing",
  "n function_new_declaration",
  "js_code_export a",
  "i function_new_declaration",
  "function_auto function_auto",
  "c list_map_property list_filter_property",
  "i list_filter_property",
  "s function_auto_test",
  "au au",
  "de function_auto_test",
  "n string_split",
  "n list_all",
  "i list_all",
  "i functions_search",
  "s ht,n",
  "n function_new_js",
  "i function_new",
  "i function_new_js",
  "c string_slice list_slice",
  "d param",
  "au function_param_new",
  "i mc",
  "ir name f_name",
  "o ir",
  "n function_wrap",
  "pn f_name",
  "pn f_name_wrapped",
  "au function_new_js",
  "n function_name_combine",
  "a fw function_wrap",
  "i function_wrap",
  "de function_params_new",
  "fw function_param_new function_params_new",
  "i sandbox",
  "a sb sandbox",
  "au sb",
  "fw file_exists function_exists",
  "i function_exists",
  "au function_run_git",
  "au function_run_line",
  "c function_run_line function_run_line_git",
  "s prompt",
  "i function_run_prompt",
  "i function_delete_if_exists",
  "function_exists function_params_new",
  "o function_params_new",
  "i function_param_new",
  "i function_params_new",
  "a psn function_params_new",
  "fs function_name_combine",
  "psn left,right",
  "fm function_name_combine",
  "au function_name_combine",
  "u ir",
  "fw function_identifier_replace function_identifier_replace_suffix",
  "de function_identifier_replace_suffix",
  "fw function_identifier_replace function_identifier_replace_suffix_add",
  "i function_identifier_replace_suffix_add",
  "a irs function_identifier_replace_suffix_add",
  "irs f_name unprefixed",
  "au data_prompts",
  "i ps",
  "fm js_stack_declaration_asyncify",
  "o ps",
  "n js_return_name",
  "au function_wrap",
  "au mc",
  "au ast",
  "au js_return_name",
  "fw function_transform function_transform_command",
  "i function_transform_command",
  "a ftc function_transform_command",
  "fs js_return_name",
  "i js_return_name",
  "ftc js_return_name js_return_name",
  "i marker_call",
  "mc function_name_combine",
  "ir right f_name_unprefixed",
  "ir left \"js\"",
  "c marker_assign_replace marker_call_replace",
  "tf AwaitExpression",
  "marker_call_replace",
  "marker_call_replace 1",
  "a mr marker_call_replace",
  "a mcr marker_call_replace",
  "mcr 0",
  "mcr 0 combined",
  "c mcr marker_next_delete",
  "ir body2 body",
  "au list_remove",
  "i marker_next_delete",
  "a md marker_next_delete",
  "u mr",
  "a mnd marker_next_delete",
  "mc ft",
  "ir f_name combined",
  "o irs",
  "c function_identifier_replace_suffix_add",
  "c function_identifier_replace_suffix_add function_identifier_replace_suffix_remove",
  "de function_identifier_replace_suffix_remove",
  "c function_identifier_replace_suffix_add function_identifier_replace_ending_remove",
  "ir suffix_to_add ending_to_remove",
  "n js_atomize",
  "pn as",
  "o pn",
  "pn ast",
  "ir ast2 ast",
  "fw object_merge object_copy",
  "au js_stack_declaration_asyncify",
  "i function_run_line",
  "au marker_next_index",
  "au marker_call",
  "i list_index_of",
  "ftc js_atomize js_atomize",
  "au marker_assign_replace",
  "u ftc",
  "fw function_transform_command function_transform_command_self",
  "a fts function_transform_command_self",
  "fts js_atomize",
  "i au",
  "ts CallExpression",
  "tf CallExpression",
  "au function_identifier_replace_ending_remove",
  "integer_to a",
  "fs function_identifier_replace_ending_remove",
  "mcr c string_suffix_without",
  "ir combined removed",
  "a ire function_identifier_replace_ending_remove",
  "ire lambda2 2",
  "marker_down 0",
  "fs function_new_js",
  "cd 0",
  "au marker_down",
  "i md",
  "s list,next",
  "i marker_down",
  "s g",
  "o function_new_js",
  "mc js_declaration_single_params_add",
  "mcr 1 ['ast']",
  "i js_atomize",
  "au md",
  "mc js_type",
  "ir node_type 'Identifier'",
  "md 4",
  "ac mn mx",
  "c marker_next marker_new",
  "s call,ex",
  "a mn marker_new",
  "s delim",
  "c function_current_set marker_current_set",
  "fs js_atomize",
  "s arg",
  "c marker_call_replace marker_call_atomize",
  "i marker_call_replace",
  "au marker_call_replace",
  "o js_node_atomize",
  "de js_node_tomize",
  "au js_atomize",
  "fm js_node_atomize",
  "s marker,next",
  "au marker_call_atomize",
  "i marker_call_atomize",
  "a mca marker_call_atomize",
  "mca 1",
  "c mx marker_expand",
  "i js_node_atomize",
  "de js_statement_call_get",
  "au marker_call_replace_generic",
  "au js_declaration_single_block_blody",
  "au js_declaration_params_names",
  "fw js_node_type_is js_identifier_is",
  "i js_identifiers_to_names",
  "fw each each_index",
  "i each_pair",
  "s identifier",
  "o marker_expand",
  "au marker_expand",
  "a x marker_expand",
  "i marker_expand",
  "ni astring",
  "i prompt_previous",
  "au marker_new",
  "i marker_top",
  "i marker_new",
  "a ms marker_current_set",
  "au marker_top",
  "au data_function_current_get",
  "mc",
  "ms",
  "o ms",
  "o f",
  "c data_function_current_get data_marker_get",
  "de data_marker_get",
  "c data_function_current_get data_marker_current_get",
  "o data_marker_current_get",
  "ali",
  "ai",
  "u al",
  "fw function_aliases function_aliases_search",
  "al",
  "au function_aliases_search",
  "au functions_search",
  "au search_generic",
  "i function_aliases_search",
  "a as function_aliases_search",
  "a mg data_marker_current_get",
  "c function_transform_marker marker_move",
  "a mm marker_move",
  "o mx",
  "i function_transform_marker",
  "au function_transform_marker",
  "i marker_move",
  "mm 2 1",
  "c marker_move marker_functionize",
  "au marker_move",
  "o list_index_of_",
  "o list_index_of_next",
  "au list_index_of_next",
  "c list_index_of_next list_index_of_previous",
  "i marker_previous_index",
  "c marker_next_index marker_previous_index",
  "fw list_slice list_range",
  "mf marker_functionize",
  "a mf marker_functionize",
  "s js,node,type",
  "au function_types",
  "fw js_node_types js_node_types_includes",
  "i js_node_types_includes",
  "s any",
  "c list_all list_any",
  "i list_any",
  "fs marker_functionize",
  "s declarat",
  "c list_add list_add_multiple",
  "mf 1 2",
  "au export function js_stack_last(stack, type) {",
  "au js_stack_last",
  "n range",
  "fm range",
  "fw each each_range",
  "i each_range",
  "i list_next_index",
  "o list_adder",
  "au list_adder",
  "c list_adder list_adder_multiple",
  "fs html_new ",
  "au marker_functionize",
  "s declaration",
  "i marker_functionize",
  "fs html_new4",
  "i function_current_set",
  "c function_transform_marker function_transform_marker_all",
  "i function_transform_marker_all",
  "i marker_remove",
  "au function_transform_marker_all",
  "i function_transform",
  "i html_new",
  "i js_outside_move",
  "de export async function html_overwrite(name, body, file_path) {",
  "de html_overwrite",
  "c function_params_new function_param_move",
  "au function_params_new",
  "i function_param_move",
  "fw list_map list_map_index",
  "fw list_filter list_find",
  "fw list_find list_find_property",
  "au list_filter_property",
  "i list_find_property",
  "au function_param_swap",
  "n list_swap",
  "s insert",
  "au list_insert",
  "c list_insert list_replace",
  "i list_swap",
  "i js_declaration_param_named",
  "function_param_swap body file_path",
  "i function_param_swap",
  "function_param_swap html_overwrite body file_path",
  "au html_new",
  "i html_overwrite",
  "ni chokidar",
  "n watch",
  "n import_install",
  "import_install chokidar",
  "import_install chokdiar",
  "i import_install",
  "a w watch",
  "fw fw function_wrap_suffix_add",
  "fw fws function_wrap_suffix_add",
  "a fws function_wrap_suffix_add",
  "fw au path",
  "de path",
  "de au_path",
  "o fws",
  "i function_wrap_suffix_add",
  "fws au path",
  "s path,name",
  "s path",
  "i folder_read",
  "i function_import",
  "i function_name_to_path",
  "n path_name",
  "i function_auto_path",
  "function_auto_path src/noop.mjs",
  "au function_auto_path",
  "i watch",
  "n string_to",
  "s push",
  "au git_push",
  "s ex",
  "au marker_first",
  "u nj",
  "s js",
  "s js,new",
  "a nj function_new_js",
  "nj return_atomize",
  "c js_return_on js_return_on_async",
  "ftc marker_first js_return_atomize",
  "s expa",
  "de js_declarator_init_set",
  "s uniqu",
  "fs marker_top",
  "c md marker_bottom",
  "a mb marker_bottom",
  "n list_last_is",
  "mb",
  "c log log_keep",
  "o log",
  "nj if_else_if_combine",
  "o function_run",
  "s swap",
  "c json_to json_format_to",
  "s run,log",
  "s s",
  "nj calls_to_each",
  "nj call_fill",
  "o mf",
  "nj dollar",
  "tf ExpressionStatement",
  "n equal_by",
  "c assert assert_message",
  "w",
  "c catch_log catch_log_async",
  "s eq",
  "c string_suffix_without string_prefix_without",
  "si git_acp_call",
  "fd git_acp_call",
  "n identity",
  "i catch_only_async",
  "fd git_commit",
  "fs marker_call",
  "mf 1 2 js_call_new",
  "sgit",
  "fd git_acp",
  "fd js_call_fill",
  "s ignore",
  "i js_unparse",
  "s visit,async",
  "n js_visit_type_each_async",
  "s dec,name",
  "nj declare_assign_null",
  "nj await_add",
  "fd js_unparse",
  "nj import_inside",
  "o ftc",
  "ftc js_imports js_import_inside",
  "js_visit_filter n",
  "ftd js_await_add",
  "s function,trans",
  "fts js_await_add",
  "ftc js_await_add js_unparse_inner",
  "n task_new",
  "s funct,new",
  "n function_new_aliased",
  "u a",
  "a na function_new_aliased",
  "na functions_search_open so",
  "o so",
  "so fill",
  "as v",
  "as task_new",
  "a t task_new",
  "de js_call_fill_test",
  "f_name_task",
  "t test",
  "de js_call_fill_test_test",
  "de js_call_fill_test_test_test",
  "de js_call_fill_test_test_test_test",
  "de js_call_fill_test_test_test_test_test",
  "n function_name_combine_multiple",
  "na tasks_run tr",
  "s task_",
  "a op object_properties",
  "a ea each_async",
  "s function",
  "s _task_",
  "fts js_declare_assign_null",
  "fs function_param_swap",
  "t simple",
  "tr",
  "nj let_add",
  "u",
  "fw t task_new_simple",
  "fs js_let_add",
  "a tns task_new_simple",
  "tns",
  "a nti js_node_type_is",
  "a sei string_empty_is",
  "a lf list_first",
  "s seco",
  "c list_first list_second",
  "a ls list_second",
  "de list_skip",
  "c string_skip list_skip",
  "so dollar",
  "a or object_replace",
  "s define",
  "fs js_identifier_defineds",
  "tf ArrowFunctionExpression",
  "nj arrow_to_function",
  "a st object_property_set",
  "c js_arrow_to_function js_arrow_blockify",
  "s js_node_type",
  "a ntn js_node_type_not_is",
  "u g",
  "s get",
  "s identi",
  "a oc object_copy",
  "o ts",
  "ft FunctionDeclaration",
  "c js_arrow_to_function js_function_id_add",
  "fs js_function_id_add",
  "s atomi",
  "c js_atomize js_atomize_function",
  "s id,name",
  "fs function_run_log",
  "t duplicate_lines_to_each",
  "a jpe js_parse_expression",
  "fts js_atomize_function",
  "de js_dollar_task_each_code_own_fn_task_if_else_to_generic",
  "fs js_dollar",
  "t each_code_own_fn",
  "t if_else_to_generic",
  "s current,set",
  "nj params_consolidate",
  "n function_params_consolidate",
  "de js_params_consolidate",
  "as exist",
  "s before",
  "s previous",
  "a lg list_get",
  "fs js_declaration_param_add",
  "mf 1 2 js_declaration_params_get",
  "s js_dollar_g",
  "ts js_dollar_g",
  "fs js_dollar_g",
  "tf FunctionDeclaration",
  "tf Property",
  "fs function_params_consolidate",
  "s list,clear",
  "n list_empty",
  "function_params_consolidate js_dollar_g",
  "a fns function_names",
  "a fns functions_names",
  "ac fns functions_names",
  "o ac",
  "ac functions_names fns",
  "ar fns functions_names",
  "s functions_names",
  "a e each",
  "a l1 list_get_end_1",
  "c js_stack_filtered js_stack_filtered_multiple",
  "a la list_adder",
  "a lal list_all",
  "s atomize",
  "fw string_is",
  "fw string_is string_is_assert",
  "c js_stack_last js_stack_last_multiple",
  "a l2 list_get_end_2",
  "u l2",
  "ftc js_declare_assign_null e",
  "c data_function_current_get data_watch_get",
  "c function_current_set data_watch_set",
  "fs au",
  "t arrow_to_function_should_add_return",
  "de au_task_arrow_to_function_should_add_return",
  "a fnu function_name_unalias",
  "fs data_watch_set",
  "t add_return",
  "a li list_is",
  "ac li lin",
  "a li list_includes",
  "ar li list_is",
  "a log l",
  "as alias",
  "ad log",
  "a l log",
  "fw list_sort_string list_sort_string_mapper",
  "de list_sort_string_mapper",
  "c list_sort_string list_sort_number_mapper",
  "o list_sort_string",
  "a test t",
  "a test ttt",
  "ttt",
  "ad ttt",
  "fd list_sort_string_size",
  "a test tt",
  "tt",
  "ad tt",
  "a at assert",
  "s nodes",
  "ftc js_dollar export function js_identifier_defineds(v) {",
  "ftc js_dollar js_identifier_defineds",
  "ac la ld",
  "a la list_add",
  "s invo",
  "s lamb",
  "n lambda_invoke",
  "s stack",
  "s function,type",
  "fts js_let_add",
  "n functions_combine",
  "a ss string_split",
  "a ssc string_split_comma",
  "s fun,new",
  "sa function_new_transform ",
  "as function_new_transform",
  "a fnt function_new_transform",
  "u jsp",
  "a jps js_parse_statement",
  "a fc functions_combine",
  "fc fs t",
  "lm",
  "a lm list_map",
  "a lmu list_map_unordered_async",
  "u fnu",
  "de function_current_set_task_new",
  "fc fs,t",
  "de fs_t",
  "s fil",
  "lmp",
  "a lmp list_map_property",
  "s unalias",
  "fst function_alias_add_generic unalias_from_acronyms",
  "a fst function_current_set_task_new",
  "n function_name_to_acronym",
  "s separ",
  "a fsp function_name_separator",
  "s part",
  "function_name_to_acronym function_name_to_acronym",
  "n function_names_to_acronyms",
  "s lookup",
  "s object",
  "n list_to_dictionary",
  "so doll",
  "s ac",
  "function_names_to_acronyms",
  "n git_push_schedule",
  "n path_resolve",
  "jis",
  "n function_acronym_to_names",
  "a atn function_acronym_to_names",
  "atn ii",
  "atn jis",
  "path_resolve .",
  "git_push_schedule",
  "fw c function_copy_suffix_add",
  "u cs",
  "a cs function_copy_suffix_add",
  "cs git_push_schedule check",
  "f ",
  "fs git_push_schedule_check",
  "git_push_schedule_check",
  "schtasks_query t",
  "s schedule",
  "as err",
  "git_push_schedule_command",
  "fd git_push_schedule_command",
  "cs list_adder_unique async",
  "fd git_push_schedule",
  "o command_line_schtasks ",
  "s end",
  "n js_declaration_params_names",
  "n js_declaration_params_names_node",
  "nj dollar_s",
  "s size,assert",
  "n list_squash",
  "a er error",
  "s statement",
  "nj dollar_f",
  "s parent",
  "s code,fn",
  "s code,fun",
  "s function,ke",
  "fst function_params_consolidate simple",
  "fw fst",
  "s wrap",
  "as wrap",
  "fws fst simple",
  "a fsts function_current_set_task_new_simple",
  "fsts js_await_add",
  "fsts function_param_swap",
  "fsts js_import_inside",
  "fsts js_calls_to_each",
  "s else",
  "s visit",
  "as replace",
  "o ire",
  "fs js_if_else_if_combine",
  "ir type 'IfStatement'",
  "fws nti if",
  "u nt",
  "ac nti nt",
  "u t",
  "a nti js_node_type_is_if",
  "c js_node_type_is_if js_node_type_is_if_async ",
  "u eb",
  "o cs",
  "de eb_async",
  "cs eb async",
  "o eb",
  "s left",
  "ftc js_if_else_if_combine marker_down_generic",
  "i js_auto",
  "mf html_overwrite",
  "mf 1 2 html_overwrite",
  "o html_overwrite",
  "fs html_new",
  "mf 1 2 html_update",
  "i function_imports_add",
  "au function_imports_add",
  "ftc js_outside_move function_imports_add",
  "i folder_current_join",
  "u mt",
  "o data_all",
  "da",
  "u ds",
  "o ds",
  "a function_read fr",
  "o fr",
  "s unal",
  "fr fr",
  "s dec",
  "fr fpd",
  "add jesus christ",
  "string_to jesus",
  "js_parse 'a'",
  "de data_property_new",
  "n data_property_new",
  "fr o",
  "fs file_open",
  "fr file_open",
  "js_parse 1",
  "o file_open",
  "fc function_parse_declaration,ju",
  "cs function_open editor",
  "s function_open_editor",
  "a oe   await function_current_set(f_name);",
  "ar oe function_open_editor",
  "a oe function_open_editor",
  "a fp function_parse_declaration_js_unparse",
  "oe js_await_add",
  "u fn",
  "u fns",
  "oe function_parse_declaration_js_unparse",
  "oe mc",
  "oe list_single",
  "mc jvt",
  "fr jaa",
  "sa declar",
  "as declar",
  "s watch",
  "oe dwg",
  "c dwg data_editor_get",
  "s ext",
  "de data_editor_get",
  "c dwg data_terminal_get",
  "u dws",
  "oe dws",
  "oe fws",
  "oe c",
  "s run",
  " fd ii",
  "fd ii",
  "fp dts",
  "ma \"terminal\"",
  "fw ar marker_assign_replace_string",
  "u ar",
  "de marker_assign_replace_string",
  " u u",
  "fw mar marker_assign_replace_string",
  "o fw",
  "fe fw",
  "oe fw",
  "oe mars",
  "s code,str",
  "oe u",
  "u jcs",
  "oe marker_assign_replace_string",
  "fp data_terminal_get",
  "fw fp function_current_declaration_code",
  "fw oe function_open_editor_current",
  "oe function_open_editor_current",
  "s current,get",
  "a oc function_open_editor_current",
  "a oec function_open_editor_current",
  "oe function_current_declaration_code",
  "a cd function_current_declaration_code",
  "fs data_terminal_get",
  "a ars marker_assign_replace_string",
  "o m",
  "fs dtg",
  "oe m",
  "fs m",
  "fp data_watch_set",
  "c dws data_terminal_set",
  "fs dts",
  "ars terminal",
  "oe ft",
  "s function_run",
  "fp jaa",
  "ir type \"CallExpression\"",
  "oe ir",
  "c marker_down_generic marker_down_choices",
  "a mdc marker_down_choices",
  "dts 1",
  "dtg",
  "o o",
  "oe o",
  "o p",
  "c marker_down_choices function_transform_marker_empty",
  "function_transform_marker_empty",
  "m",
  "oe md",
  "oe fc",
  "1p",
  "fc mr m",
  "fcn mr,m",
  "de marker_remove_marker_top",
  "a lz list_size",
  "md -2",
  "n list_to",
  "fc mr,m",
  "a mrt marker_remove_marker_top",
  "jaa",
  "me 1",
  "oe mdc",
  "fs marker_down_choices_lambda",
  "md 3",
  "o mb",
  "oe mb",
  "md c",
  "as mark",
  "oe mrt",
  "cs list_size_1_assert message",
  "s size,1",
  "oe ms",
  "oe fs",
  "n list_map_property_to",
  "oe list_map_property_to",
  "mdc",
  "md 0",
  "oe marker_down_choices_lambda",
  "nj marker_enter",
  "fws function_transform_marker current",
  "u fts",
  "s function,types",
  "u ft",
  "a fy function_types",
  "a lk list_skip",
  "s index,next",
  "a ll list_filter",
  "u jnt",
  "a jnt js_node_type",
  "s marker,ne",
  "s type,js",
  "c js_visit_type js_visit_types",
  "ftc js_marker_enter js_marker_enter",
  "s types",
  "fts jme",
  "fw jv js_visitors",
  "dts 0",
  "nj block_child_graph",
  "cs string_is_assert message",
  "ftc jbcg",
  "s string,assert",
  "oe opg",
  "s mult",
  "i list_first_second",
  "n list_last_or_null",
  "oe ftc",
  "oe fts",
  "n null_not_is",
  "u lio",
  "a lx list_index_of",
  "s list,index",
  "n list_index_is",
  "s doll",
  "c js_dollar_r js_dollar_rt",
  "c js_dollar_rt js_dollar_rf",
  "s equ",
  "fws equal not",
  "n exit",
  "ac x me",
  "a x exit",
  "s assert,inte",
  "s asser,num",
  "n integer_is",
  "a ini integer_is",
  "o au",
  "nj if_blockify",
  "s visit,type",
  "u lu",
  "a lu log_unparse",
  "s function,js",
  "u jnti",
  "a ntsi js_node_types_is",
  "cs js_block_child_graph unparse",
  "u ju",
  "u lmua",
  "fs sb",
  "ftc jbcgu sb",
  "ob",
  "f_name",
  "nj bang_to_not",
  "u jv",
  "a jv js_visit",
  "a jvt js_visit_type",
  "nj js_dollar_ie",
  "de js_js_dollar_ie",
  "nj dollar_ie",
  "fs js_call_new",
  "mf 1 2 js_call_new_code",
  "s js_visit_type",
  "n not",
  "s js_keyword_arguments",
  "fts jbtn",
  "s au",
  "s js_block_child_graph",
  "s atom",
  "o ",
  "o js_atomize_function",
  "s visit,each",
  "s js,visit",
  "c js_visit_each_async js_visit_each",
  "fts js_block_child_graph_unparse",
  "fw list_is list_not_is",
  "fts jbcg",
  "o jbcgu",
  "ftc jbcgu",
  "fts jbcgu",
  "      }",
  "s me",
  "u me",
  "s enter",
  "n function_rename",
  "u fc",
  "a fcp function_copy",
  "a r function_rename",
  "r js_marker_enter marker_enter",
  "ac me mx",
  "a me marker_enter",
  "a lr list_remove",
  "n marker_above",
  "s marker,index",
  "c marker_previous_index marker_index",
  "as insert",
  "u li",
  "u lis",
  "a lis list_insert",
  "a ma marker_above",
  "a mab marker_above",
  "c mab marker_delete_above",
  "s prev",
  "a mda marker_delete_above",
  "mda",
  "a ja js_auto",
  "mab $g$v$stack",
  "s function,write",
  "s file_js_unparse",
  "fw data_transform data_identifiers_file",
  "s list,if,not",
  "a lax list_add_if_not_includes",
  "s file_js",
  "s path_To",
  "s path_to",
  "data_property_get identifiers",
  "u lj",
  "a lj list_join",
  "n data_file_update",
  "de data_identifiers_file",
  "dpg dfu",
  "data_property_get data_file_update",
  "dpg functions",
  "a opd object_property_delete",
  "  let x = null;",
  "dpg identifiers",
  "c chalk_green chalk_red",
  "s data,udpate",
  "c fws function_watch_suffix_change",
  "r function_watch_suffix_change function_watch_ending_change",
  "s suffix",
  "a fwc function_watch_ending_change",
  "fwc error_attention_set set clear",
  "s update",
  "de functions_paths",
  "de fs",
  "o fs",
  "function_imports_missing folder_read",
  "fws data_file_update all",
  "r data_file_update_all data_files_update",
  "u fntp",
  "a fntp function_name_to_path",
  "u d",
  "a d data_files_update",
  "fw dpg data_identifiers_search",
  "s list_To",
  "s task",
  "a is data_identifiers_search",
  "is v",
  "is value",
  "is null_is",
  "s unali",
  "nj imports_unused",
  "n counter",
  "ftc js_imports_unused",
  "is js_imports",
  "c js_imports js_imports_declarations",
  "s remaining",
  "c list_first_second list_first_remaining",
  "s assert,size",
  "s reve",
  "s filter",
  "u lfp",
  "a lfp list_filter_property",
  "fts js_imports_unused",
  "fws js_imports_unused remove",
  "fts js_imports_unused_remove",
  "c function_imports_missing_add function_imports_fix",
  "ar i function_imports_fix",
  "o auto",
  "fwc js_imports_missing_add missing_add fix",
  "gp",
  "data_get git_push_when",
  "dpg git_push_when",
  "x",
  "fs gp",
  "s decl",
  "s red",
  "s error_attention",
  "dpg error_attention",
  "o gp",
  "s call,name",
  "mc js_call_function_if",
  "mab $g$v$node",
  "o mm",
  "o mn",
  "md -1",
  "n marker_leave",
  "a ml marker_leave",
  "s assert,list",
  "o md",
  "c md marker_up",
  "a mu marker_up",
  "o mc",
  "o jaa",
  "o mab",
  "c marker_above marker_below",
  "n add",
  "fws add 1",
  "s data,get",
  "mc dpg",
  "s ident,repl",
  "irs functions",
  "ir 'functions'",
  "ir property_name 'functions'",
  "s name",
  "mc js_declaration_single_name",
  "ire ast2 2",
  "ir object value",
  "ir value functions",
  "ir value2 f",
  "u mb",
  "ar mb marker_below",
  "mb $g$f$async",
  "irs async is",
  "s data_files",
  "si mda",
  "is mda",
  "is marker_delete_above",
  "r marker_delete_above marker_above_delete",
  "n function_alias_rename",
  "function_alias_rename",
  "u ope",
  "de object_property_exists_not",
  "s data_tr",
  "c function_alias_rename function_aliases_restor",
  "c function_alias_rename function_aliases_restore",
  "function_aliases_restore",
  "function_alias_rename marker_delete_above marker_above_delete",
  "u mad",
  "u mda",
  "s js_visit",
  "mcr c jvtea",
  "mcr c js_visit_type_each_async",
  "s next,marker",
  "c mn marker_next_await",
  "marker_next_await",
  "a mna marker_next_await",
  "mna",
  "c mc marker_param_add",
  "a mpa marker_param_add",
  "u ox",
  "a ox object_property_exists",
  "mc ox",
  "ir object functions",
  "ir result exists",
  "ir property_name name",
  "s exist",
  "mcr c object_property_exists_not",
  "ir exists en",
  "o ml",
  "c ml marker_if_test_replace",
  "s stack,last",
  "a mi marker_if_test_replace",
  "mi en",
  "mc opg",
  "mcr 0 functions",
  "mcr 1 name",
  "ir value f",
  "mu 2",
  "s async",
  "ms 2",
  "mc js_function_last_asyncify",
  "ire async_is2 2",
  "ms 1",
  "mu",
  "o me",
  "mx",
  "s bottom",
  "a mbt marker_bottom",
  "mg",
  "mm 1 2",
  "mrt",
  "fw mnd marker_next_delete_multiple",
  "a rg range",
  "a mdm marker_next_delete_multiple",
  "eac",
  "fs js_await_add",
  "mdm 2",
  "mbt",
  "mc l1",
  "ir stack2 2",
  "ire stack2 2",
  "mc l",
  "mcr 0 e1",
  "ir e1 stack1",
  "as nti",
  "as node,type",
  "mb nti",
  "ire node2 2",
  "ir type 'AwaitExpression'",
  "o js_node_type_is_if",
  "s not",
  "c js_node_type_is_if js_node_type_not_is_if",
  "mc c js_node_type_not_is_if",
  "mcr c js_node_type_not_is_if",
  "mu 1",
  "mc oc",
  "ir from mode",
  "ir mode node",
  "fw md marker_down_1",
  "ir delta 1",
  "a mdd marker_down_1",
  "u la",
  "c function_parse_declaration function_parse_strict_declaration",
  "c function_exists function_exists_strict",
  "s log",
  "nj log_remove",
  "o js_type",
  "s functions",
  "c functions_format functions_log_remove",
  "flr",
  "as format",
  "fm",
  "fa",
  "s decl,name",
  "md 1",
  "mcr 0 stack1",
  "fw mu marker_up_1",
  "a muu marker_up_1",
  "muu",
  "u ja",
  "mc js_await",
  "mcr 0 copy",
  "mc or",
  "ir to node",
  "ir from awaited",
  "fs js_auto",
  "fs jaa",
  "ml",
  "mu 3",
  "mc not",
  "ir a async_is",
  "mb $i",
  "me",
  "mb $r",
  "mi n",
  "n apps_get",
  "s files",
  "mc fr",
  "u fr",
  "a for folder_read",
  "mc for",
  "a fop folder_public",
  "mc fop",
  "ir v fop",
  "ir dirPath fop",
  "ir v2 fr",
  "md 2",
  "mb $r,fr",
  "ag",
  "n app_html_open",
  "s param,new",
  "s param,add",
  "mpa a_name",
  "cd",
  "mc fnh",
  "ir name a_name",
  "s public",
  "u fpb",
  "u fpc",
  "a fpc folder_public_combine",
  "mc fpc",
  "ir second file_name",
  "mc file_open",
  "ir f_path combined",
  "a oh app_html_open",
  "oh code",
  "is js_code_call_statement",
  "is js_code_import_single",
  "s src",
  "u hu",
  "hu code",
  "n app_code",
  "mc alert",
  "mb alert()",
  "s server",
  "u v",
  "n app_new",
  "u hn",
  "mc hn",
  "s param,marker",
  "mpa name",
  "mc n",
  "mc anp",
  "ire name2 2",
  "ir v a_name",
  "ir f_name a_name",
  "u an",
  "u na",
  "a an app_new",
  "an replace",
  "n html_document_body",
  "mb $r,document.body",
  "ir v body",
  "oce",
  "mnd",
  "fs app_replace",
  "mc hdb",
  "mdd",
  "s ident",
  "s data,f",
  "r html_button html_button_element",
  "nj imports_paths_fix",
  "fts js_imports_paths_fix",
  "ftc js_imports_paths_fix app_replace",
  "o oe",
  "fws o app",
  "as html",
  "a oa function_open_app",
  "de storage_local_set",
  "c storage_local_get storage_local_set",
  "de storage_local_get",
  "c storage_local_set storage_local_get",
  "fw storage_local_get storage_local_get_or",
  "u ni",
  "a nli null_is",
  "s data,set",
  "fws n app_screen",
  "oa oa",
  "as combine",
  "fw mb marker_screen_add",
  "oec",
  "o mna",
  "s set,current",
  "s restore",
  "s assert,null",
  "fw r function_rename_suffix_add",
  "r function_transform_marker function_transform_marker_current",
  "o function_transform_marker",
  "o function_transform_marker_current",
  "s single",
  "marker_screen_add t",
  "o marker_screen_add",
  "marker_screen_add rule_set",
  "de app_replace_refresh",
  "oa replace",
  "s invoke",
  "n lambda_value",
  "s rule_set",
  "unlias s",
  "u s",
  "function_name_unalias s",
  "u ss",
  "fw list_slice list_take",
  "a lsk list_skip",
  "s get_or",
  "r storage_local_get_or storage_local_initialize",
  "function_rename_identifiers storage_local_get_or storage_local_initialize",
  "s storage_local_initialize",
  "c storage_local_get_context storage_local_initialize_context",
  "u sse",
  "c html_disable html_enable",
  "c list_map list_map_index",
  "u lmi",
  "c html_style_set html_style_remove",
  "n html_enable_if",
  "s list,sli",
  "a lsl list_slice",
  "u lcm",
  "s concat",
  "n list_concat_multiple",
  "s fire",
  "n firebase_deploy",
  "a f firebase_deploy",
  "a fd firebase_deploy",
  "a fb firebase_deploy",
  "o app_replace",
  "s html,update",
  "s app_replace",
  "o fd",
  "function_dependencies_code app_replace_main",
  "oh replace",
  "o html_update",
  "ni firebase-admin",
  "n firebase_deploy_function",
  "u for",
  "ac for flr",
  "u ssw",
  "a ssw string_starts_with",
  "firebase_deploy_function",
  "s date",
  "date_now_iso",
  "fd date_now_iso",
  "fw date_now_iso date_now_file",
  "date_now_file",
  "a ff firebase_deploy_function",
  "fd firebase_deploy_function",
  "n global_get",
  "n global_function",
  "c object_property_initialize object_property_lambda",
  "c object_property_lambda object_property_lambda_async",
  "r global_function global_function_async",
  "r global_function_async global_function_property_async",
  "c global_function_property_async global_function_async",
  "n http",
  "fw http http_json",
  "u jf",
  "a jf json_from",
  "a rs function_rename_suffix_add",
  "rs firebase_storage_url project",
  "n string_replace",
  "is firebase_deploy_function_destination_version",
  "ff app_replace_main",
  "u ff",
  "fws firebase_deploy_function app_current",
  "a ffc firebase_deploy_function_app_current",
  "c html_document_body html_document_head",
  "s element",
  "u he",
  "a he html_element",
  "s att",
  "c html_document_body html_document_root",
  "is html_update",
  "cs html_name_to_path dev",
  "cs html_update dev",
  "html_name_to_path_dev replace",
  "html_update_dev replace",
  "rs html_update public",
  "html_update replace",
  "s button",
  "o app_replace_screens",
  "s roo",
  "as marker_screen_add",
  "as marker",
  "a msa marker_screen_add",
  "msa settings",
  "s app,repla",
  "s setting",
  "s rule,set",
  "s list_any",
  "a lan list_any",
  "o list_any",
  "c object_property_exists_assert object_property_exists_not_assert",
  "ffc",
  "is app_name_prefixed",
  "is app_name_main",
  "o oa",
  "is function_transform_marker",
  "n marker_rename",
  "s expand",
  "mn",
  "fs js_dollar_choices",
  "mt",
  "n js_dollar_new",
  "s scren",
  "js_dollar_new",
  "o nj",
  "s blody",
  "r js_declaration_single_block_blody js_declaration_single_block_body",
  "o js_dollar_a",
  "u ls1",
  "a lz1 list_size_1",
  "s integ",
  "as range",
  "a erg each_range",
  "u nd",
  "a nd js_dollar_new",
  "de js_dollar_choices_x",
  "nd x",
  "r js_dollar_choices_x js_dollar_x",
  "o nd",
  "a mk marker",
  "n js_dollar_new_args",
  "js_dollar_new_args",
  "s para,",
  "s func,code",
  "s code,dec",
  "is js_keyword_function",
  "js_dollar_choice_arguments",
  "  return;",
  "js_dollar_new_args x",
  "cs js_dollar_choice_arguments_name",
  "cs js_dollar_choice_arguments name",
  "de js_dollar_choice_arguments_name",
  "cs js_dollar_choice_arguments names",
  "js_dollar_choice_arguments_names",
  "fws o dollar_choice",
  "a od function_open_dollar_choice",
  "od a",
  "u lc",
  "a lc list_concat",
  "s names",
  "s remove,if",
  "cs list_remove_multiple if_exists",
  "de list_remove_multiple_if_exists",
  "r list_remove_multiple list_remove_all_multiple",
  "is list_remove_all_multiple",
  "c list_remove_all_multiple list_remove_multiple",
  "o js_auto",
  "s format",
  "n js_auto_transform_new",
  "js_auto_transform_new",
  "is marker_next_declare_single_init",
  "js_auto_transform_new assign_combine",
  "s imports",
  "js_auto_transform_new_inner assign_combine",
  "a atn js_auto_transform_new",
  "a at js_auto_transform_new",
  "ar atn js_auto_transform_new",
  "s init",
  "as js,node,type,is",
  "fts js_assign_combine",
  "cs list_next_try",
  "cs list_next try",
  "s index,list",
  "s marker",
  "fs",
  "as list",
  "a lsg list_single",
  "f",
  "fs marker_rename",
  "s js,string",
  "marker_rename a b",
  "atn calls_to_each",
  "ts",
  "ftc js_calls_to_each app_new",
  "s null",
  "s ;et",
  "s let",
  "cs list_index_of_next outside",
  "is list_next_try",
  "s if",
  "s _if",
  "as dollar",
  "nd ir",
  "od I",
  "s body,get",
  "s block",
  "s object,la",
  "s brack",
  "c js_code_wrap_braces js_code_wrap_brackets",
  "fw js_code_wrap_brackets js_code_brackets_empty",
  "nd l",
  "fts js_calls_to_each",
  "as app",
  "an reply",
  "s hash",
  "n browser_is",
  "cs list_join_newline 2",
  "s html,hide",
  "s html,hid",
  "s vis",
  "c html_style_remove html_remove",
  "r prayer_ending prayer_end",
  "c html_style_font_size html_display_none",
  "c html_display_none html_display_block",
  "s dove",
  "n kjv",
  "s propert",
  "n list_random_item",
  "s click",
  "c html_on_click html_on_keydown",
  "s display",
  "s letter",
  "n string_letters_only",
  "n string_lower_to",
  "s web",
  "s client",
  "s bro",
  "u ii",
  "a ii import_install",
  "http https://google.com",
  "s storage",
  "o function_dependencies_code_copy",
  "is function_dependencies",
  "is function_dependencies_code",
  "fws http firebase",
  "n file_path_safe_to",
  "n firebase_storage_exists",
  "http_firebase https://wwww.google.com",
  "http https://www.google.com",
  "file_path_safe_to http://www.google.com",
  "firebase_storage_exists http/http%3A%2F%2Fwww.google.com",
  "firebase_storage_exists http\\http%3A%2F%2Fwww.google.com",
  "http_firebase http://www.google.com",
  "s roudn",
  "s round",
  "n round",
  "s 64",
  "s string_base64_to",
  "n string_base64_to",
  "fd firebase_storage_download_property",
  "firebase_storage_download_path test.json",
  "s file,json",
  "u jt",
  "a jt json_to",
  "c http_firebase http_local",
  "n http_local_file_name",
  "r http_firebase_file_name http_firebase_file_path",
  "c file_overwrite_json file_write_json",
  "is http",
  "is http_json",
  "o buffer_string_to",
  "fd firebase_upload_string",
  "c firebase_upload_string firebase_upload_buffer",
  "fd firebase_storage_download",
  "http_firebase https://www.google.com",
  "c file_read file_read_buffer",
  "fd file_write",
  "cs file_overwrite buffer",
  "s write",
  "cs file_write buffer",
  "http_local https://www.google.com",
  "fws http_local text",
  "s property",
  "http_local_text https://www.google.com",
  "s sle",
  "s rand",
  "n integer_random",
  "n ebible_version_download",
  "n unzip",
  "s app",
  "s js,dec",
  "n js_code_dot",
  "s bible",
  "n ebible_version_verses",
  "ebible_version_download engbsb",
  "ebible_version_verses engbsb",
  "a fir file_read",
  "fd ebible_version_verses",
  "n html_parse_list_text_to",
  "de html_parse_list_text_to",
  "c html_parse_text html_parse_href",
  "c ebible_version_books_testament_old ebible_version_books_testament_new",
  "s string",
  "n html_parse_read",
  "n html_parse_href_text_map",
  "s list_filter_property",
  "s start",
  "as filter",
  "c list_filter_starts_with list_filter_starts_with_not",
  "cs list_filter_starts_with_not multiple",
  "s http",
  "s prefix",
  "as uni",
  "as unique",
  "s unique",
  "a lun list_unique",
  "ebible",
  "s try",
  "fd ebible_versions_download",
  "n catch_call",
  "fd http",
  "ebible_version_download khm-h",
  "ebible_versions_download",
  "n ebible_verses",
  "ebible_chapters engbsb GEN",
  "s href",
  "s list_to",
  "fd ebible_verses",
  "s dict",
  "c ebible_verses ebible_chapter_classes",
  "ebible_chapter_classes engbsb GEN01",
  "s class",
  "s sort",
  "s classes",
  "s list_",
  "cs list_adder_multiple_async",
  "cs list_adder_multiple async",
  "cs list_adder_generic async",
  "r ebible_version_verses ebible_chapter_codes",
  "ebible_chapter_codes engbsb",
  "s suff",
  "s hpt",
  "ebible_verses engbsb GEN02",
  "r ebible_verses ebible_chapter_text",
  "de ebible_verses",
  "fw ebible_chapter_text ebible_verses",
  "r html_parse_find_list_text html_parse_find_list_href_text",
  "s filter,empty",
  "n whitespace_normalize",
  "s reverse",
  "s slice",
  "s take",
  "ebible_verses engbsb GEN01",
  "c list_index_of list_index_of_last",
  "is firebase_upload_object",
  "s join",
  "sandbox",
  "fd firebase_admin",
  "c ebible_verses_upload ebible_index_upload",
  "is data_save",
  "as data",
  "r ebible_chapter_code_to_chapter ebible_chapter_code_to_book",
  "s skip",
  "ebible_index_upload engbsb",
  "s firebase,folde",
  "s fireba,path",
  "is ebible_firebase_folder",
  "de ebible_firebase_folder",
  "is firebase_storage_download",
  "o firebase_storage_download",
  "s buffer",
  "is folder_find_starts_with",
  "n folder_read_async",
  "s path,join",
  "cs ebible_index flat",
  "ebible_index_flat engbsb",
  "c ebible_index_upload ebible_index_flat_upload",
  "s upload,ver",
  "s list,add",
  "s new,join",
  "n html_loading",
  "o html_document_body",
  "s div",
  "c html_style_set html_style_merge",
  "s merge",
  "s object_",
  "n object_assign",
  "r html_style_merge html_style_assign ",
  "s remo",
  "s size",
  "s inter",
  "ebible_verses_upload swhonen",
  "n urdu_allah_to_god",
  "ebible_verses urdgvu JHN07",
  "ebible_verses_upload urdgvu",
  "s roc",
  "s ston",
  "ebible_verses_upload yor",
  "ebible_version_books_testament_new engbsb",
  "s version",
  "s eng",
  "s newline",
  "n string_split_comma",
  "c string_split_comma string_split_newline",
  "ac flr fdr",
  "a flr file_read",
  "s read",
  "as any",
  "c list_any_starts_with list_find_starts_with",
  "r list_find_starts_withis list_map_prefix_without",
  "is list_map_prefix_without",
  "cs list_map_prefix_without any",
  "s list_map_prefix_without",
  "r list_map_string_empty_not_is list_map_filter_string_empty_not_is",
  "c list_map_prefix_without_any list_map_prefix_any",
  "s colon",
  "s first",
  "s multi",
  "a lmi list_multiple_is",
  "fws range from",
  "s add",
  "range_from 10 20",
  "cs each_range from",
  "o e",
  "o r",
  "o rg",
  "s range",
  "cs each_range_from async",
  "sp ad",
  "n number_pad",
  "cs each_pair async",
  "cs each_multiple async",
  "s verses,up",
  "s ret",
  "n retry",
  "s erro",
  "ebible_verses_upload hin2017",
  "s each_pair",
  "s multiple",
  "cs each_index async",
  "ebible_verses_upload lug",
  "s inte",
  "s find",
  "s urdu",
  "s map",
  "u lw",
  "s clip",
  "evu benirv",
  "evu tel2017",
  "s test",
  "is ebible_version_books_testament_new",
  "is ebible_class_old",
  "ebible_version_books_testament engwebu aa",
  "ebible_version_books_testament engwebu .aa",
  "is ebible_chapter_text",
  "s chapter",
  "ebible_chapters_each_verses_check engwebu",
  "ect engwebu SIR01",
  "u evu",
  "o evu",
  "s code",
  "s codes",
  "fws ebible_version_books_testament apocrypha",
  "s apoc",
  "evu cebulb",
  "evu tglulb",
  "u u",
  "u e",
  "u st",
  "is ebible_chapters_each_verses_list",
  "is ebible_version_books_testament_apocrypha",
  "a s2 sandbox_2",
  "s uuid",
  "s id",
  "n uuid",
  "uuid",
  "s fina",
  "s if,exists",
  "s file,ex",
  "s del,fil",
  "fws file_delete if_exists",
  "as write",
  "a flw file_write",
  "s ebible,te",
  "n sandbox_3",
  "sandbox_3",
  "a s3 sandbox_3",
  "u l",
  "o s2",
  "o command_line",
  "s2",
  "s text",
  "ebible_chapter_text engbsb EZR08",
  "o verses",
  "ebible_verses engbsb EZR08",
  "ebible_chapter_text EZR08",
  "ect engbsb EZR08",
  "ev",
  "a ev ebible_verses",
  "ev engbsb EZR08",
  "s upload",
  "is ebible_verses_upload",
  "s new",
  "fw ebv ebible_verse",
  "o ebible_verse",
  "as rename",
  "rs ebible_verse new",
  "fw ev ebible_verse",
  "s upper",
  "s case",
  "n string_upper_to",
  "u ev",
  "ac ev evs",
  "a ev ebible_verse",
  "ev ur MAT01 1",
  "u lma",
  "s ps",
  "ev ur,en MAT01 1",
  "s books",
  "ebible_version_books engbsb",
  "fws ebible_version_books upload",
  "ev en,lug EZK16:36",
  "o ev",
  "s second",
  "s open",
  "ev tel,en EZK18:31",
  "ev tel,en NUM32:19",
  "ebible_version_books_upload engbsb",
  "u lt",
  "s is list_take",
  "is string_take",
  "s ebible,to",
  "s integer",
  "is string_skip",
  "is ebible_chapter_code_to_name",
  "ev Hebrew 11:6",
  "ev swh,en Hebrew 11:6",
  "as file",
  "a flo file_open",
  "s newl",
  "s list,map",
  "c list_map_split_space list_map_split_comma",
  "s split",
  "c string_split_semicolon_space string_split_semicolon",
  "a lst list_set",
  "c object_property_set list_set",
  "s choice",
  "evu arbnav",
  "an message",
  "app_name_main t",
  "app_new_assign t",
  "s wait",
  "app_new_step_2 message",
  "rs sandbox_4",
  "rs sandbox _4",
  "s rename",
  "function_name_to_acronym a_b_C",
  "rs sandbox_4 a",
  "o rs",
  "n sandbox",
  "o s4",
  "s digit",
  "string_starts_with_digit tt",
  "string_starts_with_digit 5t",
  "as skip",
  "a ssk string_skip",
  "s dot",
  "s const",
  "c string_starts_with_dot string_starts_with_space",
  "s white",
  "c string_skip_while string_trim_right",
  "as z",
  "a sz string_size",
  "c string_starts_with_space string_ends_with_space",
  "s z",
  "s book",
  "is ebible_version_books",
  "v",
  "s starts,any",
  "is list_any_starts_with",
  "is list_filter_starts_with_any",
  "is ebible_references_parse",
  "ebible_references_parse_god_created_man_why",
  "s function,ex",
  "u fe",
  "a fe function_exists",
  "s clear",
  "as ope",
  "s return",
  "is js_statement_return_empty",
  "bible_verses_encouragement",
  "o sb",
  "s god",
  "ebible_index_flat_upload_name",
  "s verses",
  "is ebible_verse",
  "as doll",
  "nd ib",
  "sb",
  "o ebible_version_books",
  "s squa",
  "s message",
  "de app_message",
  "de app_message_main",
  "s ebible",
  "n roman_to_integer",
  "s list,not",
  "u lni",
  "ebible_chapter_text guz GEN01",
  "evu guz",
  "roman_to_integer adsf",
  "rti 9a",
  "o app_reply",
  "s deply",
  "s deploy",
  "as deploy",
  "firebase_deploy_function app_reply_main",
  "messenger_reply_user_data_path",
  "pp",
  "fd",
  "s random",
  "s string,list",
  "n string_list_to",
  "keyboard_typing_delay",
  "s finally",
  "c catch_only_async catch_only_run_async",
  "u cl",
  "a cl command_line",
  "s retry",
  "s messenger_reply",
  "s readline",
  "s line",
  "command_line_read",
  "n messenger_reply",
  "n messenger_reply_login",
  "messenger_reply_login",
  "fd messenger_reply",
  "n bind",
  "n bind_property",
  "s doc",
  "ar mr messenger_reply",
  "s messenger",
  "messenger_reply",
  "s equal",
  "messenger_reply_puppeteer",
  "ar mr messenger_reply_puppeteer",
  "as adder",
  "rs messenger_reply playwright",
  "r messenger_reply_puppeteer messenger_reply",
  "r messenger_reply_puppeteer_unread_click messenger_reply_unread_click",
  "o mr",
  "c messenger_reply messenger_reply_messages",
  "s initial",
  "s starts",
  "s without",
  "s remove",
  "s puppeteer_hrefs_starts_with",
  "s empty,read",
  "s list_add",
  "s prop,obj",
  "s collect",
  "s ends",
  "c list_filter_ends_with_any list_filter_ends_with_not_any",
  "export async function messenger_reply_messages(page, url) {",
  "ac ll lfl",
  "a ll list_last",
  "s last",
  "s reply",
  "n reply",
  "s normal",
  "a str string_trim",
  "u sss",
  "a sss string_split_space",
  "a sss ",
  "o s",
  "s a",
  "a sss",
  "o a",
  "s def",
  "fw undefined_not_is_assert_lambda undefined_not_is_assert",
  "c messenger_reply_messages_urls_transform messenger_reply_messages_transform",
  "n reply_test",
  "reply_test",
  "s lower",
  "n reply_sequence",
  "u ei",
  "a ei each_index",
  "s refer",
  "reply",
  "mr",
  "s language",
  "as find",
  "a lfdp list_find_property",
  "n reply_on_match",
  "rt",
  "s add,mult",
  "n git_history_delete",
  "a s5 sandbox_5",
  "ad s5",
  "de sandbox_5",
  "n sandbox_5",
  "u n",
  "u clg",
  "a clg",
  "a clg command_line_git",
  "a td todo",
  "fd git_history_delete",
  "n folder_delete",
  "s git,rename",
  "n git_repo_rename",
  "fws git_repo_rename normalize",
  "s replace",
  "git_repo_rename_normalize karate-code",
  "grrn Jared-Grace karate-code",
  "n repos",
  "is folder_read",
  "r folder_read folder_read_files",
  "n folder_read",
  "n git_repo_clone",
  "s each",
  "s js,type",
  "s js,each",
  "data_identifiers_search a",
  "s transform",
  "s ien",
  "js_dollar_new ine",
  "data_functions_get",
  "as param",
  "s clone",
  "fc data_all",
  "o fc",
  "pn f_path \"data.json\"",
  "fs data_all",
  "fs data_property_get",
  "fs data_file_update",
  "fs data_value",
  "o export async function data_property_get(property_name, d_path) {",
  "o data_property_get",
  "fs data_get",
  "pn d_path d_path",
  "s combine",
  "s count",
  "fd git_repo_clone",
  "nd aa",
  "s decl,sing",
  "n assert_arguments",
  "a eq equal",
  "s assert",
  "r assert_equal equal_assert",
  "s auto",
  "as auto",
  "atn assert_arguments_args",
  "s visit,call",
  "s js_visit_calls_named",
  "s list",
  "u le",
  "a le list_empty",
  "s key",
  "s declar",
  "u lam",
  "a lam list_add_multiple",
  "s list, replace",
  "s list,repl",
  "s dollar",
  "u lr",
  "n sandbox_5_a",
  "sandbox_5",
  "git_repo_clone Jared-Grace karate_code",
  "n user_repo_set",
  "pn data_transform d_path data_path()",
  "fs data_transform",
  "function_exists data_identifiers_file",
  "o d",
  "n data_backup",
  "s now",
  "s copy",
  "as copy",
  "a flc file_copy",
  "data_backup",
  "o n",
  "db",
  "a fld file_delete",
  "t",
  "function_name_to_acronym data_set",
  "o t",
  "s empty",
  "fs data_set",
  "pn d_path data_path()",
  "n data_aliases_path",
  "fs data_path_generic",
  "pn f_name \"data\"",
  "o db",
  "c data_backup data_copy",
  "u dc",
  "dc aliases",
  "n file_json_isolate",
  "s prop",
  "data_copy aliases",
  "file_json_isolate data/aliases.json aliases",
  "n file_json_property_delete",
  "file_json_property_delete data/data.json aliases",
  "n data_partition",
  "s alias",
  "c data_aliases_path data_prompts_path",
  "s partit",
  "data_partition propmts",
  "data_partition prompts",
  "s delete",
  "rs object_properties_delete all",
  "s gitif",
  "s file,exis",
  "user_repo_set love",
  "repos",
  "n repo_acronym_set",
  "s data",
  "s lambda",
  "c user_repo_set user_repo_get",
  "repo_acronym_set l",
  "urs karate_code",
  "ras k",
  "s user,path",
  "s repo,name",
  "n git_publish_initial",
  "s command",
  "s list_map",
  "s user,repo",
  "c repo_acronym_set repo_acronym_get",
  "cs list_to_dictionary async",
  "s unordered",
  "de list_map_wait",
  "s invert",
  "s undefined",
  "export async function git_publish_initial(acronym) {",
  "user_repo_path",
  "git_publish_initial k",
  "s gitignore",
  "n repos_gitignore_overwrite",
  "r repos repos_names",
  "r path_repo repo_path",
  "s resol",
  "repos_gitignore_overwrite",
  "function_name_to_path test",
  "s folder",
  "is function_name_to_path",
  "is repos_folder",
  "u pn",
  "cs function_param_new double",
  "a pnd function_param_new_double",
  "fc",
  "u fs",
  "fcg",
  "s current",
  "data_function_current_get",
  "r data_function_current_get function_current_get",
  "as current",
  "pnd ast",
  "s declar,sing",
  "s declar,name",
  "o function_names",
  "o functions_name",
  "s repo_path_combine",
  "pnd functions",
  "is js_function_last_asyncify",
  "s awawit",
  "s await",
  "o functions_names",
  "s sleep",
  "is js_call_fill",
  "a functions_names",
  "au functions_names",
  "is js_await_add_inner",
  "fs js_await_add_inner",
  "fs js_function_last_asyncify",
  "pnd visited",
  "s diff",
  "a ldf list_difference",
  "as names",
  "is difference",
  "is fns",
  "is function_names",
  "is functions_names",
  "is functions_names_includes",
  "o s5",
  "o s5_inner",
  "s function,new",
  "",
  "export async function user_repo_get() {",
  "s git",
  "si git_acp_folder",
  "is git_acp_folder",
  "is git_acp_call_folder",
  "repos_names",
  "user_repo_get",
  "o git_acp_folder",
  "o urg",
  "s includes",
  "a lina list_includes_assert",
  "o urs",
  "n s5",
  "s s5",
  "de",
  "is sleep",
  "s data_fun",
  "is data_functions_get",
  "function_name_unalias sleep",
  "functions_names_includes sleep",
  "s data,update",
  "is data_file_update",
  "is data_file_update_inner",
  "s overwrite",
  "fd watch",
  "de s5c",
  "de s5b",
  "de s5i",
  "s5",
  "is repos_names",
  "r repos_path_each_unordered repos_paths_map_unordered",
  "as squa",
  "u ls",
  "a lsq list_squash",
  "s user",
  "is repos_paths_map_unordered",
  "o repos_paths_map_unordered_combine",
  "s true",
  "n true_is",
  "s set",
  "s set,object",
  "function_exists_inner sandbox",
  "function_exists_inner",
  "function_exists sb",
  "u rs",
  "n test",
  "s exists",
  "is function_name_to_path_unalias",
  "function_name_to_path_unalias test",
  "is function_exists_inner",
  "function_exists test",
  "o de",
  "o opg",
  "function_name_unalias test",
  "function_parse_declaration_js_unparse test",
  "de s5_inner",
  "functions_path",
  "o functions_paths",
  "n test2",
  "function_name_to_path_import test",
  "functions_paths",
  "s to,path",
  "s functions_paths",
  "s name_to",
  "function_name_to_path te",
  "s repo",
  "n t2",
  "c functions_paths functions_names_to_paths",
  "s dictionary",
  "s diction",
  "n reduce",
  "s pair",
  "is js_imports_paths_fix",
  "is function_name_to_path_import",
  "fs function_name_to_path_import",
  "pnd dictionary",
  "o t2",
  "n t3",
  "o file_exists",
  "o function_exists",
  "de t3",
  "s transform,fun",
  "is functions_transform",
  "c functions_log_remove functions_imports_fix",
  "functions_imports_fix",
  "de t2",
  "file_delete C:/Users/chris/repos/love/.git/index.lock",
  "as delete",
  "de test2",
  "s t",
  "de test",
  "app_new_step_1",
  "s empty,string",
  "s string,is",
  "app_new_step_1 karate",
  "rs app_new_step_2 next",
  "r function_parse_declaration_js_unparsefunction_parse_declaration_unparse",
  "r app_new_step_2 app_new_step_3",
  "app_new_step_2",
  "app_new_step_2 karate",
  "s fix",
  "s output",
  "s file",
  "u f",
  "s temp",
  "n function_run_output_file_temp",
  "as over",
  "u fo",
  "a fo file_overwrite",
  "function_run_output_file_temp functions_names_to_paths\\",
  "functions_names_to_paths",
  "s parse",
  "u si",
  "a si string_is",
  "u seni",
  "s catch",
  "s throws",
  "is folder_user_combine",
  "s json",
  "function_run_output_file_temp functions_names_to_paths",
  "o w",
  "s repos",
  "s sand",
  "a of function_run_output_file_temp",
  "html_name_to_path karate",
  "s name,path",
  "function_name_to_path_search karate",
  "is repos_paths_map_unordered_combine",
  "cs repos_paths_map_unordered_combine folders",
  "repos_paths_map_unordered_combine_folders test.mjs",
  "c repos_paths_map_unordered repos_paths_names_map_unordered",
  "r repos_paths_map_unordered_combine_folders repos_paths_names_map_unordered_combine",
  "function_rename_identifiers repos_paths_map_unordered_combine_folders repos_paths_names_map_unordered_combine",
  "s list_is",
  "n tst1",
  "de tst1",
  "s string_is",
  "o repos_paths_names_map_unordered",
  "s repos,combine",
  "s object_property",
  "function_name_to_path_search app_karate",
  "function_imports app_karate",
  "app_karate",
  "fd app_karate_code",
  "fd app_karate",
  "s exists,assert",
  "u fd",
  "is app_new_assign",
  "s call,args",
  "s code,string",
  "s call",
  "s js,call",
  "sps",
  "of fns",
  "o v",
  "s acro",
  "c repo_acronym_get repo_firebase_service_account_get",
  "c repo_acronym_set repo_firebase_service_account_set",
  "rfsas firebase_service_account_love",
  "s love",
  "c firebase_service_account_love firebase_service_account_karate",
  "rfsas firebase_service_account_karate",
  "rfsag",
  "function_name_unalias add",
  "function_alias_add_generic add",
  "o firebase_storage_url_project",
  "repo_path a",
  "urs l",
  "is js_identifier_unique",
  "urs k",
  "ps",
  "fdf app_karate_main",
  "s app,main",
  "n app_main",
  "s search",
  "s storage,local",
  "s global",
  "c global_function_property_async global_function_property",
  "html_new karate",
  "s code,assign",
  "s brace",
  "oa karate",
  "s step",
  "s html",
  "de html_update_generic",
  "html_update_dev karate",
  "s screens",
  "is app_replace_screens",
  "c app_replace_screens app_karate_screens",
  "fld C:/Users/chris/repos/love/.git/index.lock",
  "np",
  "s screen",
  "is marker_screen_add",
  "data_app_current_get",
  "s param",
  "de app_karate_home",
  "msa home",
  "is app_main",
  "s main",
  "is server",
  "is function_import",
  "is function_run",
  "s emoji_add",
  "s emoji",
  "fws html_button s width",
  "de html_button_s",
  "s width",
  "s stylew",
  "s style",
  "u hpt",
  "a hpt html_p_text",
  "s center",
  "u hd",
  "a hd html_div",
  "fws html_div text",
  "msa email",
  "o msa",
  "s code,call",
  "s assign",
  "s fill",
  "r person_outline emoji_person_outline",
  "s back",
  "s rarow",
  "s arrpw",
  "s arrow",
  "s html,input",
  "urg",
  "s mail",
  "s ttri",
  "s next",
  "u hst",
  "s span",
  "c html_span_text html_em_text",
  "s karate",
  "s home",
  "n string_includes_lambda",
  "a sin string_includes",
  "s reg",
  "n string_regex_match",
  "c string_includes_lambda string_regex_match_lambda",
  "s on_",
  "s _on_",
  "c html_on_click html_on_change",
  "s value",
  "s html,get",
  "s trim",
  "c html_value_get html_value_set",
  "c html_on_change html_on_input",
  "rs app_karate_container centered",
  "s font",
  "s enable",
  "s focus",
  "s element,get",
  "s firebase",
  "command_line dir",
  "o s3",
  "s3",
  "firebase_deploy",
  "as firebase_deploy",
  "s body",
  "ff app_karate",
  "s html,public",
  "html_update_public karate",
  "n html_index_generate",
  "html_index_generate",
  "apps_get",
  "s file,html",
  "html_index_generate karate",
  "o ff",
  "c firebase_deploy_function_destination_version firebase_deploy_function_destination_production",
  "r firebase_deploy_function_destination_version firebase_deploy_function_destination_latest",
  "ff app_karate_main",
  "fws firebase_deploy_function app_karate_main",
  "s import",
  "functions_names",
  "o u",
  "a fk firebase_deploy_function_app_karate_main",
  "s download",
  "n firebase_promote_function",
  "fws firebase_promote_function app_karate_main",
  "u fp",
  "a fpk firebase_promote_function_app_karate_main",
  "fpk",
  "s index",
  "s html,dev",
  "u hup",
  "o firebase_storage_function_run",
  "o app_karate",
  "o an",
  "app_new_step_3 karate",
  "hup karate",
  "n app_new_update",
  "c app_new_step_3 app_new_step_4",
  "r app_new_step_4 app_new_step_5",
  "app_new_step_4 karate",
  "p",
  "anu karate",
  "c html_name_to_path_dev html_name_to_path_staging",
  "c html_update_public html_update_staging",
  "function_name_repo_path_combine app_karate_staging index.html",
  "html_update_staging karate",
  "html_name_to_path_staging test",
  "u fk",
  "fb",
  "s email",
  "fk",
  "as screen",
  "msa public",
  "n repo_functions_move_if_starts_with_not",
  "s acronym",
  "fns",
  "o fns",
  "repo_functions_move_if_starts_with_not k",
  "s list,filter",
  "repo_functions_move_if_starts_with_not l app_karate",
  "s list,includes",
  "c list_filter_starts_with_not list_filter_includes_not",
  "s includes,not",
  "r repo_functions_move_if_starts_with_not repo_functions_move_if_includes_not",
  "d",
  "n repo_function_move",
  "s repo_path",
  "repo_functions_path love",
  "s function,name,path",
  "s base",
  "s function,base",
  "repo_functions_move_if_includes_not l app_karate",
  "repo_function_move html_em_text love"
 ]
}