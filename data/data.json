{
 "terminal": false,
 "error_attention": null,
 "marker_current": "1",
 "identifiers": {
  "add": [
   "add",
   "add_1",
   "range_from"
  ],
  "left": [
   "add",
   "add_1",
   "app_replace_rule_parse",
   "app_replace_rule_set",
   "app_replace_rule_valid",
   "bind",
   "equal",
   "equal_assert",
   "equal_by",
   "equal_not",
   "function_name_combine",
   "html_loading",
   "js_block_child_graph",
   "js_code_assign",
   "js_code_dot",
   "js_code_let_assign",
   "js_code_or",
   "js_left_right_set",
   "js_let_add",
   "list_map_combine"
  ],
  "right": [
   "add",
   "app_replace_rule_parse",
   "app_replace_rule_set",
   "bind",
   "equal",
   "equal_assert",
   "equal_by",
   "equal_not",
   "function_name_combine",
   "js_block_child_graph",
   "js_code_assign",
   "js_code_dot",
   "js_code_let_assign",
   "js_code_or",
   "js_left_right_set",
   "js_let_add",
   "list_map_combine",
   "log_json",
   "log_unparse_try"
  ],
  "sum": [
   "add",
   "add_1"
  ],
  "add_1": [
   "add_1",
   "marker_below"
  ],
  "folder_public": [
   "apps_get",
   "folder_public",
   "folder_public_combine",
   "server"
  ],
  "folder_read_files": [
   "apps_get",
   "folder_read_files",
   "functions_names_from_path"
  ],
  "marker": [
   "apps_get",
   "app_code",
   "app_html_open",
   "app_new",
   "app_refresh",
   "app_replace",
   "app_replace_rule_set",
   "app_replace_screens",
   "app_replace_settings",
   "app_reply",
   "app_reply_main",
   "bible_verses_encouragement",
   "bind",
   "bind_property",
   "catch_call",
   "catch_only_run_async",
   "chalk_red",
   "command_line",
   "data_aliases_path",
   "data_all",
   "data_backup",
   "data_copy",
   "data_files_update",
   "data_file_update",
   "data_get",
   "data_identifiers_search",
   "data_partition",
   "data_path_generic",
   "data_prompts_path",
   "data_property_get",
   "data_set",
   "data_terminal_get",
   "data_terminal_set",
   "data_transform",
   "data_value",
   "date_now_file",
   "each",
   "each_index_async",
   "each_multiple_async",
   "each_pair_async",
   "each_range_from",
   "each_range_from_async",
   "ebible_chapter_classes",
   "ebible_chapter_codes",
   "ebible_chapter_code_to_book",
   "ebible_chapter_text",
   "ebible_index_flat",
   "ebible_index_flat_upload",
   "ebible_verse",
   "ebible_verses",
   "ebible_verses_upload",
   "ebible_verse_new",
   "ebible_version_books",
   "ebible_version_books_testament_apocrypha",
   "ebible_version_books_testament_new",
   "ebible_version_books_upload",
   "ebible_version_download",
   "equal_assert",
   "equal_not",
   "error_attention_clear",
   "exit",
   "file_delete_if_exists",
   "file_json_isolate",
   "file_json_property_delete",
   "file_overwrite_buffer",
   "file_path_safe_to",
   "file_read_buffer",
   "file_write_json",
   "firebase_admin_get",
   "firebase_deploy",
   "firebase_deploy_function",
   "firebase_deploy_function_app_current",
   "firebase_storage_download",
   "firebase_storage_url_project",
   "firebase_upload_buffer",
   "folder_delete",
   "folder_read",
   "folder_read_files",
   "functions_combine",
   "functions_log_remove",
   "functions_names",
   "functions_search",
   "function_aliases_restore",
   "function_alias_add",
   "function_auto",
   "function_current_get",
   "function_current_set",
   "function_delete",
   "function_dependencies_code_copy",
   "function_exists_strict",
   "function_identifier_replace",
   "function_identifier_replace_ending_remove",
   "function_imports_fix",
   "function_new",
   "function_new_app_screen",
   "function_new_js_inner",
   "function_open",
   "function_open_app",
   "function_open_dollar_choice",
   "function_open_editor",
   "function_param_new_double",
   "function_parse_strict_declaration",
   "function_rename",
   "function_rename_suffix_add",
   "function_transform_marker",
   "function_transform_marker_current",
   "function_transform_marker_empty",
   "function_watch_ending_change",
   "git_acp_folder",
   "git_filter_repo_install",
   "git_history_delete",
   "git_push_folder",
   "git_push_schedule_check",
   "git_repo_clone",
   "git_repo_rename",
   "git_repo_rename_normalize",
   "global_function_async",
   "global_function_property_async",
   "global_get",
   "html_button_element",
   "html_display_block",
   "html_display_none",
   "html_document_body",
   "html_document_head",
   "html_document_root",
   "html_enable",
   "html_loading",
   "html_name_to_path_dev",
   "html_on_keydown",
   "html_parse_find_list_href_text",
   "html_parse_href",
   "html_remove",
   "html_style_assign",
   "html_style_remove",
   "html_update_dev",
   "html_update_public",
   "http_firebase_file_path",
   "http_json",
   "http_local",
   "http_local_text",
   "integer_is",
   "js_atomize_function",
   "js_auto_transforms",
   "js_auto_transform_new_inner",
   "js_await_add_inner",
   "js_bang_to_not",
   "js_block_child_graph",
   "js_block_child_graph_unparse",
   "js_code_brackets_empty",
   "js_code_dot",
   "js_code_wrap_brackets",
   "js_declaration_param_add_node",
   "js_declaration_single_block_body",
   "js_dollar",
   "js_dollar_a",
   "js_dollar_aa",
   "js_dollar_choices",
   "js_dollar_choice_arguments_names",
   "js_dollar_i",
   "js_dollar_ir",
   "js_dollar_l",
   "js_dollar_new",
   "js_dollar_new_args",
   "js_dollar_rf",
   "js_dollar_rt",
   "js_dollar_x",
   "js_function_last_asyncify",
   "js_imports_declarations",
   "js_imports_paths_fix",
   "js_imports_unused",
   "js_imports_unused_remove",
   "js_log_remove",
   "js_marker_insert",
   "js_marker_name_get",
   "js_node_type_is_if",
   "js_node_type_not_is_if",
   "js_outside_move",
   "js_type",
   "js_visitors",
   "js_visit_each",
   "js_visit_types",
   "lambda_value",
   "list_adder_generic_async",
   "list_adder_multiple_async",
   "list_any",
   "list_concat_multiple",
   "list_filter_ends_with_not_any",
   "list_filter_starts_with_not",
   "list_filter_starts_with_not_multiple",
   "list_find_starts_with",
   "list_first_remaining",
   "list_index_of_last",
   "list_index_of_next_outside",
   "list_join_newline_2",
   "list_last_or_null",
   "list_map_filter_string_empty_not_is",
   "list_map_prefix_any",
   "list_map_prefix_without_any",
   "list_next_try",
   "list_not_is",
   "list_remove_all_multiple",
   "list_remove_multiple",
   "list_set",
   "list_take",
   "list_to_dictionary_async",
   "marker",
   "marker_above_delete",
   "marker_above_generic",
   "marker_below",
   "marker_bottom",
   "marker_call",
   "marker_down",
   "marker_down_1",
   "marker_enter",
   "marker_if_test_replace",
   "marker_index",
   "marker_leave",
   "marker_move",
   "marker_new",
   "marker_next_await",
   "marker_next_delete_multiple",
   "marker_remove_marker_top",
   "marker_screen_add",
   "marker_top",
   "marker_up",
   "marker_up_1",
   "messenger_reply",
   "messenger_reply_messages_transform",
   "messenger_reply_playwright",
   "messenger_reply_unread_click",
   "null_not_is",
   "number_pad",
   "object_assign",
   "object_properties_delete_all",
   "object_property_exists_not_assert",
   "object_property_lambda",
   "object_property_lambda_async",
   "prayer_end",
   "prompt_previous",
   "python_install",
   "range",
   "range_from",
   "repos_gitignore_overwrite",
   "repos_names",
   "repos_paths_map_unordered",
   "repo_acronym_get",
   "repo_acronym_set",
   "repo_path",
   "sandbox",
   "sandbox_2",
   "sandbox_3",
   "sandbox_4_a",
   "storage_local_get",
   "storage_local_initialize",
   "storage_local_initialize_context",
   "string_ends_with_space",
   "string_is_assert_message",
   "string_letters_only",
   "string_lower_to",
   "string_replace",
   "string_split_newline",
   "string_split_semicolon",
   "string_starts_with_space",
   "string_trim_right",
   "task_new",
   "undefined_not_is_assert",
   "user_repo_get",
   "user_repo_set",
   "watch",
   "whitespace_normalize",
   "functions_names_to_paths",
   "reduce"
  ],
  "apps_get": [
   "apps_get"
  ],
  "fop": [
   "apps_get",
   "function_aliases_restore"
  ],
  "fr": [
   "apps_get",
   "function_aliases_restore"
  ],
  "app_code": [
   "app_code"
  ],
  "alert": [
   "app_code",
   "app_replace_rule_set"
  ],
  "file_open": [
   "app_html_open",
   "file_open",
   "function_copy",
   "function_open",
   "html_update_generic"
  ],
  "folder_public_combine": [
   "app_html_open",
   "folder_public_combine",
   "functions_path",
   "html_name_to_path",
   "html_name_to_path_dev"
  ],
  "file_name_html": [
   "app_html_open",
   "file_name_html",
   "html_name_to_path",
   "html_name_to_path_dev"
  ],
  "app_html_open": [
   "app_html_open"
  ],
  "a_name": [
   "app_html_open",
   "app_name_main",
   "app_name_prefixed",
   "app_new",
   "app_new_step_2",
   "function_new_app_screen",
   "function_open_app",
   "js_expand_generic",
   "marker_screen_add"
  ],
  "file_name": [
   "app_html_open",
   "app_reply_main",
   "ebible_firebase_upload",
   "ebible_firebase_upload_path",
   "ebible_index_flat_upload",
   "ebible_index_flat_upload_name",
   "ebible_index_upload",
   "ebible_references_parse_god_created_man_why",
   "ebible_version_books_upload",
   "file_name_html",
   "file_name_json",
   "firebase_deploy_function_destination",
   "firebase_storage_download_ebible",
   "folder_user_docs_path",
   "html_name_to_path",
   "html_name_to_path_dev",
   "http_firebase_file_path",
   "http_local_file_name",
   "local_function_path"
  ],
  "combined": [
   "app_html_open",
   "app_name_main",
   "app_new_assign",
   "app_new_step_2",
   "ebible_chapters",
   "firebase_deploy_function_app_current",
   "folder_public_combine",
   "functions_combine",
   "functions_combine_name",
   "functions_combine_test",
   "function_copy_suffix_add",
   "function_name_combine",
   "function_name_combine_multiple",
   "function_new_app_screen",
   "function_new_declaration",
   "function_new_js",
   "function_new_js_inner",
   "function_open_dollar_choice",
   "js_auto_transform_new_inner",
   "js_dollar_new",
   "js_dollar_new_args",
   "list_concat_multiple",
   "list_map_combine",
   "marker_screen_add",
   "repo_path_combine"
  ],
  "function_name_combine_multiple": [
   "app_name_main",
   "functions_combine_name",
   "function_name_combine",
   "function_name_combine_multiple",
   "task_new"
  ],
  "app_name_prefixed": [
   "app_name_main",
   "app_name_prefixed",
   "app_new",
   "app_new_step_2",
   "function_open_app",
   "html_update_public",
   "marker_screen_add"
  ],
  "app_name_main": [
   "app_name_main",
   "app_new_step_2",
   "firebase_deploy_function_app_current",
   "html_update_dev"
  ],
  "a": [
   "app_name_main",
   "catch_only_run_async",
   "data_app_current_get",
   "data_save",
   "each_pair",
   "each_pair_async",
   "equal_by",
   "equal_by_async",
   "equal_not",
   "firebase_deploy_function_app_current",
   "function_aliases",
   "function_aliases_restore",
   "function_alias_add",
   "function_alias_change",
   "function_alias_delete",
   "function_alias_generic",
   "function_alias_replace",
   "function_param_swap",
   "function_transform_marker_all",
   "function_transform_marker_arg",
   "function_transform_marker_specified",
   "identity",
   "js_auto_transform_new_inner",
   "js_block_child_graph_unparse",
   "js_calls_to_each",
   "js_dollar",
   "js_dollar_choice_arguments",
   "js_dollar_new",
   "js_imports_declarations",
   "js_keyword_arguments",
   "js_marker_name_get",
   "js_stack_list_block_is",
   "js_statement_call_get",
   "js_visit",
   "js_visit_each",
   "js_visit_each_async",
   "js_visit_nodes",
   "list_all",
   "list_concat",
   "list_difference",
   "list_empty_not_is",
   "list_not_is",
   "list_range",
   "list_size_1_assert_message",
   "list_slice",
   "list_sort_number_mapper",
   "list_swap",
   "list_to",
   "list_unique",
   "log_unparse_try",
   "marker_above_delete",
   "marker_above_generic",
   "marker_assign_replace",
   "marker_bottom",
   "marker_call",
   "marker_call_atomize",
   "marker_call_replace",
   "marker_call_replace_generic",
   "marker_down_choices",
   "marker_down_generic",
   "marker_enter",
   "marker_expand",
   "marker_functionize",
   "marker_if_test_replace",
   "marker_index",
   "marker_leave",
   "marker_new",
   "marker_next",
   "marker_next_await",
   "marker_next_declare_single_init",
   "marker_next_declare_single_init_elements",
   "marker_next_delete",
   "marker_next_get",
   "marker_next_index",
   "marker_param_add",
   "marker_previous_index",
   "marker_remove",
   "marker_rename",
   "marker_screen_add",
   "not",
   "null_not_is_assert",
   "object_assign",
   "promise_not_is",
   "reply",
   "reply_on_match",
   "reply_sequence",
   "sandbox_5_a",
   "string_ends_with_not",
   "string_slice",
   "string_starts_with_not",
   "string_suffix_without",
   "visit_filter_recursive_async"
  ],
  "app_name_prefix": [
   "app_name_prefix",
   "app_name_prefixed"
  ],
  "v": [
   "app_name_prefix",
   "app_new_assign",
   "app_replace_font_size_factor",
   "app_replace_rule_parse",
   "app_replace_rule_sets",
   "app_replace_screens",
   "app_reply_choices",
   "chalk_green",
   "command_line_git_prefix",
   "css_class_prefix_combine",
   "data_all",
   "data_boolean_set",
   "data_get",
   "data_identifiers_get",
   "data_terminal_set",
   "data_watch_set",
   "date_diff_ms",
   "date_iso_to",
   "date_ms_to_hours",
   "date_to",
   "ebible_book_code_size",
   "ebible_chapter_classes",
   "ebible_class_apocrypha",
   "ebible_class_new",
   "ebible_class_old",
   "ebible_folder_english",
   "ebible_index_flat_upload_name",
   "ebible_index_upload_name",
   "ebible_references_parse_god_created_man_why",
   "ebible_verses",
   "ebible_verses_exclude",
   "ebible_verses_include",
   "ebible_verses_upload",
   "ebible_verse_new",
   "ebible_version_books",
   "ebible_version_books_testament_apocrypha",
   "ebible_version_books_upload_name",
   "emoji_100",
   "emoji_book_open",
   "emoji_cross",
   "emoji_dove",
   "emoji_fire",
   "emoji_font_larger",
   "emoji_font_smaller",
   "emoji_gear",
   "emoji_globe_americas",
   "emoji_home",
   "emoji_ok",
   "emoji_pray",
   "emoji_sleep_face",
   "emoji_sleep_z",
   "emoji_smile",
   "emoji_thumbs_up",
   "emoji_trinity",
   "emoji_wave",
   "error_attention_clear",
   "file_read_buffer",
   "firebase_service_account",
   "folder_public",
   "folder_read_async",
   "folder_read_files",
   "functions_log_remove",
   "functions_transform",
   "function_acronym_to_name",
   "function_aliases_restore",
   "function_alias_add_generic",
   "function_alias_rename",
   "function_auto_path",
   "function_copy_suffix_add",
   "function_current_declaration_code",
   "function_current_set",
   "function_current_set_task_new_simple",
   "function_dependencies",
   "function_identifier_replace",
   "function_identifier_replace_ending_remove",
   "function_identifier_replace_suffix_add",
   "function_name_to_path",
   "function_name_unalias",
   "function_new_app_screen",
   "function_new_transform",
   "function_open_app",
   "function_open_dollar_choice",
   "function_open_editor_current",
   "function_params_consolidate",
   "function_read",
   "function_rename",
   "function_rename_suffix_add",
   "function_run_line",
   "function_run_line_parse",
   "function_transform_command",
   "function_transform_command_self",
   "function_transform_marker_all",
   "function_transform_marker_arg",
   "function_transform_marker_current",
   "function_transform_marker_empty",
   "function_transform_marker_specified",
   "function_watch_ending_change",
   "function_wrap",
   "function_wrap_suffix_add",
   "git_filter_repo_install",
   "git_push_command",
   "git_repo_url",
   "html_component_wrap",
   "html_parse_attr",
   "html_parse_list_to",
   "http",
   "import_install",
   "integer_to",
   "json_format_to",
   "json_from",
   "json_to",
   "js_arrow_to_function",
   "js_assign_combine",
   "js_atomize",
   "js_atomize_function",
   "js_await_add_inner",
   "js_bang_to_not",
   "js_block_child_graph",
   "js_calls_to_each",
   "js_call_fill",
   "js_call_new",
   "js_call_new_code",
   "js_code_await",
   "js_code_braces_empty",
   "js_code_call_args",
   "js_code_export",
   "js_code_import_single",
   "js_code_let_assign",
   "js_code_return",
   "js_code_return_empty",
   "js_code_statement",
   "js_code_wrap_braces",
   "js_code_wrap_parenthesis",
   "js_declaration_single",
   "js_declaration_single_params_add",
   "js_declare_assign",
   "js_dollar",
   "js_function_id_add",
   "js_function_last_asyncify",
   "js_identifiers",
   "js_identifiers_named",
   "js_identifiers_named_count",
   "js_identifiers_names",
   "js_identifier_defineds",
   "js_identifier_replace",
   "js_if_blockify_generic",
   "js_if_else_if_combine",
   "js_imports_declarations",
   "js_imports_fix",
   "js_keyword_false",
   "js_keyword_from",
   "js_keyword_function",
   "js_keyword_if",
   "js_keyword_import",
   "js_keyword_let",
   "js_keyword_null",
   "js_let_add",
   "js_log_remove",
   "js_marker_is",
   "js_marker_named",
   "js_marker_named_ast",
   "js_marker_name_get",
   "js_node_atomize",
   "js_property_generic",
   "js_property_identifier",
   "js_return_atomize",
   "js_stack_list_block_is",
   "js_statement_call_get",
   "js_unparse",
   "js_visit_calls_named",
   "js_visit_children_get",
   "js_visit_each",
   "js_visit_each_async",
   "js_visit_filter",
   "js_visit_match",
   "js_visit_nodes",
   "js_visit_types",
   "js_visit_type_each_async",
   "kjv",
   "lambda_value",
   "list_filter_starts_with_not_multiple",
   "list_get",
   "list_index_is",
   "list_index_of_delta",
   "list_join_comma_space",
   "list_last_is",
   "list_last_or_null",
   "list_multiple_is",
   "list_pop",
   "list_to",
   "list_wait",
   "marker_above",
   "marker_above_delete",
   "marker_above_generic",
   "marker_assign_replace_string",
   "marker_below",
   "marker_bottom",
   "marker_call_atomize",
   "marker_call_replace",
   "marker_down",
   "marker_down_1",
   "marker_down_choices",
   "marker_down_choices_lambda",
   "marker_down_generic",
   "marker_enter",
   "marker_expand",
   "marker_functionize",
   "marker_if_test_replace",
   "marker_leave",
   "marker_new",
   "marker_remove_marker_top",
   "marker_rename",
   "marker_top",
   "marker_up",
   "marker_up_1",
   "messenger_reply",
   "messenger_reply_login",
   "messenger_reply_messages_me",
   "messenger_reply_messages_message",
   "messenger_reply_messages_name",
   "messenger_reply_playwright",
   "messenger_reply_unread_collect",
   "messenger_reply_url",
   "messenger_reply_user_data_path",
   "newline",
   "number_is",
   "number_pad",
   "object_properties_delete_all",
   "object_property_equals",
   "object_property_exists_equals",
   "object_property_get",
   "prayer_end",
   "prayer_start",
   "promise_is",
   "promise_wrap",
   "prompt_previous",
   "python_install",
   "random",
   "roman_to_integer",
   "sandbox",
   "sandbox_4_a",
   "sandbox_5_a",
   "search_generic",
   "server",
   "sleep",
   "storage_local_set",
   "string_dot",
   "string_includes",
   "string_is",
   "string_is_assert_message",
   "string_list_to",
   "string_lord_bless",
   "string_may_the_lord",
   "string_size",
   "string_slice",
   "string_the_servant_of_god_is",
   "tautology",
   "undefined_is",
   "urdu_allah_to_god",
   "visit_unique_async",
   "whitespace_normalize",
   "function_exists_inner",
   "function_name_to_path_search",
   "functions_paths"
  ],
  "function_name_combine": [
   "app_name_prefixed",
   "function_copy_suffix_add",
   "function_identifier_replace_suffix_add",
   "function_name_combine",
   "function_new_app_screen",
   "function_new_js_name",
   "function_rename_suffix_add",
   "function_wrap_suffix_add",
   "git_push_folder",
   "js_dollar_new_name",
   "marker_screen_add"
  ],
  "name": [
   "app_name_prefixed",
   "app_new",
   "app_new_step_2",
   "app_replace",
   "app_replace_rule_set",
   "app_replace_rule_sets",
   "app_reply",
   "ebible_languages",
   "file_name_html",
   "file_name_json",
   "firebase_deploy_function_destination",
   "firebase_upload_generic",
   "folder_read_async",
   "functions_names_includes",
   "function_current_set",
   "function_list_generate",
   "function_new_declaration",
   "function_param_swap_task_simple",
   "git_push_folder",
   "git_push_schedule_check",
   "git_push_schedule_task_name",
   "git_repo_rename_normalize",
   "global_function_async",
   "global_function_property_async",
   "html_name_to_path",
   "html_name_to_path_dev",
   "html_new",
   "html_overwrite",
   "html_parse_attr",
   "html_parse_href",
   "html_update",
   "html_update_dev",
   "html_update_generic",
   "html_update_public",
   "import_install",
   "js_assert_arguments_args",
   "js_assign_combine",
   "js_atomize_function",
   "js_auto_transform_new_inner",
   "js_await_add_inner",
   "js_bang_to_not",
   "js_calls_to_each",
   "js_call_callee_name",
   "js_call_fill",
   "js_call_function_if",
   "js_declaration_name",
   "js_declaration_params_names_node",
   "js_declaration_single_name",
   "js_declare",
   "js_dollar",
   "js_dollar_a",
   "js_dollar_aa",
   "js_dollar_choices",
   "js_dollar_choice_arguments",
   "js_dollar_g",
   "js_dollar_ien_generic",
   "js_dollar_if_call",
   "js_dollar_new",
   "js_dollar_new_name",
   "js_expand_generic",
   "js_function_last_asyncify",
   "js_identifiers_named_count",
   "js_identifier_unique",
   "js_imports_declarations",
   "js_imports_missing",
   "js_imports_paths_fix",
   "js_imports_unused",
   "js_let_add",
   "js_log_remove",
   "js_marker_insert",
   "js_marker_name_get",
   "js_node_atomize",
   "js_return_name",
   "js_visit_calls_named",
   "list_map_property_to",
   "local_function_path",
   "marker_functionize",
   "marker_new",
   "messenger_reply_messages",
   "object_property_get_name",
   "path_name",
   "prompt_previous",
   "schtasks_query",
   "storage_local_key_get",
   "string_empty_not_is",
   "task_new",
   "watch"
  ],
  "p": [
   "app_name_prefixed",
   "app_new_step_2",
   "each_object",
   "floor",
   "folder_user_docs_path",
   "functions_names_from_path",
   "function_aliases_restore",
   "function_rename_suffix_add",
   "html_p_text",
   "js_call_new_code",
   "js_property",
   "js_property_parse_expression",
   "js_property_parse_expression_add",
   "js_visit_children_get",
   "list_random_item",
   "marker_above_delete",
   "marker_previous_index",
   "marker_screen_add",
   "messenger_reply",
   "messenger_reply_playwright",
   "object_properties_delete",
   "object_properties_delete_all",
   "repos_gitignore_overwrite",
   "string_padded_is"
  ],
  "app_new_step_2": [
   "app_new",
   "app_new_step_2"
  ],
  "function_new": [
   "app_new",
   "app_new_step_2",
   "function_list_generate",
   "function_new",
   "function_new_aliased",
   "function_new_app_screen",
   "function_new_js_inner",
   "function_new_transform",
   "function_param_swap_task_simple",
   "js_dollar_new",
   "marker_screen_add",
   "task_new"
  ],
  "app_new": [
   "app_new"
  ],
  "js_declare": [
   "app_new_assign",
   "js_declare",
   "js_dollar_g",
   "js_dollar_s",
   "js_expand_generic",
   "js_let_add",
   "js_node_atomize"
  ],
  "js_parse_expression": [
   "app_new_assign",
   "functions_combine",
   "function_identifier_replace",
   "function_list_generate",
   "function_params_new",
   "js_assert_arguments_args",
   "js_atomize_function",
   "js_auto_transform_new_inner",
   "js_await",
   "js_await_wrap",
   "js_bang_to_not",
   "js_calls_to_each",
   "js_call_new_expression",
   "js_declaration_param_add",
   "js_dollar_f",
   "js_dollar_g",
   "js_function_id_add",
   "js_if_else_if_combine",
   "js_imports_paths_fix",
   "js_node_atomize",
   "js_null",
   "js_parse_expression",
   "js_property_identifier",
   "js_property_parse_expression",
   "js_return_code_replace",
   "js_string",
   "marker_assign_replace",
   "marker_call_replace",
   "marker_functionize",
   "marker_if_test_replace",
   "marker_screen_add"
  ],
  "js_code_dot": [
   "app_new_assign",
   "js_code_dot"
  ],
  "app_new_assign": [
   "app_new_assign",
   "app_new_step_2"
  ],
  "code": [
   "app_new_assign",
   "file_js_parse",
   "file_js_unparse",
   "firebase_deploy_function",
   "firebase_storage_function_run",
   "function_dependencies_code",
   "function_dependencies_code_copy",
   "function_imports_add",
   "function_list_generate",
   "function_open_dollar_choice",
   "function_transform_marker",
   "function_transform_marker_specified",
   "function_wrap",
   "html_update_generic",
   "import_install",
   "js_auto_transform_new_inner",
   "js_bang_to_not",
   "js_calls_to_each",
   "js_call_insert",
   "js_call_new",
   "js_call_new_code",
   "js_call_new_expression",
   "js_code_arrow",
   "js_code_assign",
   "js_code_await",
   "js_code_brackets_empty",
   "js_code_call_args_await_maybe",
   "js_code_call_statement",
   "js_code_declaration",
   "js_code_declaration_args",
   "js_code_dot",
   "js_code_return",
   "js_code_statement",
   "js_code_wrap_brackets",
   "js_dollar_aa",
   "js_dollar_f",
   "js_dollar_g",
   "js_dollar_new",
   "js_dollar_new_args",
   "js_dollar_new_name",
   "js_dollar_rf",
   "js_dollar_rt",
   "js_dollar_s",
   "js_format",
   "js_parse",
   "js_parse_statement",
   "js_parse_statement_module",
   "js_return_code_replace",
   "js_return_empty",
   "js_statement_return",
   "js_unparse",
   "log_unparse",
   "marker_above",
   "marker_above_generic",
   "marker_below",
   "marker_down_choices",
   "marker_functionize",
   "marker_next_await",
   "marker_next_delete_multiple"
  ],
  "expression": [
   "app_new_assign",
   "function_list_generate",
   "js_atomize_function",
   "js_auto_transform_new_inner",
   "js_await",
   "js_await_wrap",
   "js_bang_to_not",
   "js_calls_to_each",
   "js_call_callee_name",
   "js_call_fill",
   "js_call_new_expression",
   "js_dollar_aa",
   "js_dollar_ien_generic",
   "js_dollar_if_call",
   "js_dollar_s",
   "js_expand_generic",
   "js_if_else_if_combine",
   "js_imports_paths_fix",
   "js_left_right_set",
   "js_parse_expression",
   "js_property_parse_expression",
   "js_return_code_replace",
   "js_statement_call_get",
   "marker_call_replace_generic",
   "marker_if_test_replace",
   "marker_next_await"
  ],
  "assign": [
   "app_new_assign",
   "app_new_step_2",
   "js_declare",
   "js_dollar_g",
   "js_dollar_s",
   "js_expand_generic",
   "js_let_add",
   "js_node_atomize",
   "object_assign"
  ],
  "js_declaration_single": [
   "app_new_step_2",
   "data_file_update_inner",
   "function_params_consolidate",
   "function_param_swap",
   "function_parse_declaration_inner",
   "function_wrap",
   "js_assert_arguments_args",
   "js_declaration_single",
   "js_declaration_single_block_body",
   "js_declaration_single_name",
   "js_declaration_single_params_add",
   "js_dollar_new_args_inner",
   "js_function_last_asyncify",
   "js_imports_missing",
   "marker_down_choices_lambda"
  ],
  "html_new": [
   "app_new_step_2",
   "html_new"
  ],
  "function_transform": [
   "app_new_step_2",
   "functions_transform",
   "function_auto",
   "function_copy",
   "function_identifier_replace",
   "function_list_generate",
   "function_new_js_inner",
   "function_new_transform",
   "function_params_consolidate",
   "function_params_new",
   "function_param_swap",
   "function_rename_identifiers",
   "function_transform",
   "function_transform_current",
   "function_transform_marker_all",
   "function_transform_marker_specified",
   "js_dollar_new",
   "js_dollar_new_args",
   "js_function_last_asyncify",
   "marker_functionize",
   "marker_move",
   "marker_top",
   "task_new"
  ],
  "list_add": [
   "app_new_step_2",
   "app_reply_main",
   "ebible_index",
   "ebible_verses",
   "functions_combine",
   "function_params_consolidate",
   "function_params_new",
   "function_run_line_parse",
   "function_wrap",
   "js_auto_transform_new_inner",
   "js_bang_to_not",
   "js_declaration_param_add_node",
   "js_dollar_a_generic",
   "js_dollar_f",
   "js_dollar_g",
   "js_dollar_new",
   "js_dollar_s",
   "js_expand_generic",
   "js_function_last_asyncify",
   "js_identifier_unique",
   "js_property_parse_expression_add",
   "js_statement_return_add",
   "js_statement_return_empty_add",
   "list_add",
   "list_adder",
   "list_adder_async",
   "list_add_if_not_includes",
   "list_unique",
   "marker_functionize",
   "marker_screen_add",
   "object_invert",
   "range",
   "reply",
   "visit_filter_recursive",
   "visit_filter_recursive_async",
   "visit_unique_async"
  ],
  "js_declaration_single_block_body": [
   "app_new_step_2",
   "functions_combine",
   "function_list_generate",
   "function_wrap",
   "js_declaration_single_block_body",
   "js_declaration_single_block_body_add_return",
   "js_dollar_aa",
   "js_return_name",
   "marker_top",
   "task_new"
  ],
  "firebase_storage_function_run": [
   "app_new_step_2",
   "app_replace",
   "app_reply",
   "firebase_storage_function_run"
  ],
  "js_call_new": [
   "app_new_step_2",
   "js_calls_to_each",
   "js_call_fill",
   "js_call_new",
   "marker_call"
  ],
  "lambda": [
   "app_new_step_2",
   "app_replace_home",
   "app_replace_rule_set",
   "app_reply_main",
   "bible_verses_encouragement_generate",
   "catch_call",
   "catch_ignore",
   "catch_ignore_async",
   "catch_log",
   "catch_log_async",
   "catch_only_async",
   "catch_only_run_async",
   "command_line_read",
   "data_files_update",
   "data_file_update_inner",
   "data_function_current_restore",
   "data_set",
   "each_multiple",
   "each_multiple_async",
   "each_object",
   "each_pair",
   "each_pair_async",
   "each_range",
   "each_range_async",
   "each_range_from",
   "each_range_from_async",
   "each_reverse",
   "ebible_books_to_chapter_codes",
   "ebible_chapters",
   "ebible_chapters_each_verses_list",
   "ebible_chapter_text",
   "ebible_index_flat",
   "ebible_references_parse_lines",
   "ebible_verses",
   "ebible_verses_upload",
   "ebible_versions_download",
   "ebible_version_books_testament",
   "file_exists",
   "file_json_isolate",
   "file_json_property_delete",
   "firebase_upload_generic",
   "folder_find_starts_with",
   "folder_read_async",
   "folder_read_files",
   "functions_combine",
   "functions_log_remove",
   "functions_names_from_path",
   "functions_transform",
   "function_aliases_restore",
   "function_aliases_search",
   "function_alias_add",
   "function_alias_change",
   "function_alias_delete",
   "function_alias_generic",
   "function_alias_rename",
   "function_alias_replace",
   "function_copy",
   "function_current_set",
   "function_dependencies",
   "function_identifier_replace",
   "function_imports_add",
   "function_new_js_inner",
   "function_open_app",
   "function_params_consolidate",
   "function_params_new",
   "function_param_swap",
   "function_rename_identifiers",
   "function_run_line_parse",
   "function_transform_current",
   "function_transform_marker_all",
   "function_transform_marker_specified",
   "function_type_first",
   "function_wrap",
   "git_commit_folder",
   "git_push_folder",
   "global_function_async",
   "global_function_property_async",
   "html_button",
   "html_button_screen",
   "html_loading",
   "html_on",
   "html_on_click",
   "html_on_keydown",
   "html_parse_classes_preview",
   "html_parse_descendants_classes",
   "html_parse_href_text_map",
   "http",
   "js_arrow_to_function",
   "js_assign_combine",
   "js_atomize",
   "js_atomize_function",
   "js_auto",
   "js_auto_transform_new_inner",
   "js_await_add_inner",
   "js_bang_to_not",
   "js_block_child_graph",
   "js_block_child_graph_unparse",
   "js_calls_to_each",
   "js_call_fill",
   "js_call_new_code",
   "js_declaration_single",
   "js_declaration_single_params_add",
   "js_declare_assign",
   "js_declare_assign_null",
   "js_dollar",
   "js_dollar_a",
   "js_dollar_a_generic",
   "js_dollar_choice_arguments",
   "js_dollar_f",
   "js_dollar_g",
   "js_dollar_new",
   "js_dollar_s",
   "js_expand_generic",
   "js_function_id_add",
   "js_function_last_asyncify",
   "js_identifiers",
   "js_identifiers_named",
   "js_identifiers_names",
   "js_identifier_defineds",
   "js_identifier_replace",
   "js_if_blockify_generic",
   "js_if_else_if_combine",
   "js_imports_declarations",
   "js_imports_fix",
   "js_imports_paths_fix",
   "js_imports_unused",
   "js_imports_unused_remove",
   "js_let_add",
   "js_log_remove",
   "js_marker_named_ast",
   "js_node_atomize",
   "js_node_types",
   "js_node_type_is_if",
   "js_node_type_is_if_async",
   "js_node_type_not_is_if",
   "js_outside_move",
   "js_return_atomize",
   "js_stack_filtered",
   "js_stack_filtered_each",
   "js_stack_filtered_multiple",
   "js_type",
   "js_unparse",
   "js_visitors",
   "js_visit_calls_named",
   "js_visit_children_get",
   "js_visit_each_async",
   "js_visit_match",
   "js_visit_nodes",
   "js_visit_types",
   "js_visit_type_each_async",
   "keyboard_type_delay",
   "lambda_invoke",
   "lambda_value",
   "lists_get",
   "list_adder_generic",
   "list_adder_generic_async",
   "list_adder_unique",
   "list_adder_unique_async",
   "list_concat_multiple",
   "list_difference",
   "list_filter_ends_with_any",
   "list_filter_ends_with_not_any",
   "list_filter_starts_with",
   "list_filter_starts_with_any",
   "list_filter_starts_with_not",
   "list_filter_starts_with_not_multiple",
   "list_intersect",
   "list_map_combine",
   "list_map_index",
   "list_map_path_join",
   "list_map_prefix_any",
   "list_map_prefix_without",
   "list_map_prefix_without_any",
   "list_map_property_to",
   "list_map_split_space",
   "list_remove_all_multiple",
   "list_remove_multiple",
   "list_sort_number_mapper",
   "list_squash",
   "list_to_dictionary",
   "list_to_dictionary_async",
   "list_unique",
   "marker_above_delete",
   "marker_above_generic",
   "marker_assign_replace",
   "marker_call",
   "marker_call_atomize",
   "marker_call_replace",
   "marker_call_replace_generic",
   "marker_current_set",
   "marker_down_choices",
   "marker_down_generic",
   "marker_enter",
   "marker_functionize",
   "marker_if_test_replace",
   "marker_leave",
   "marker_new",
   "marker_next",
   "marker_next_await",
   "marker_next_delete",
   "marker_next_delete_multiple",
   "marker_param_add",
   "marker_remove",
   "marker_rename",
   "marker_screen_add",
   "marker_top",
   "messenger_reply",
   "messenger_reply_messages",
   "messenger_reply_messages_urls_add_multiple",
   "messenger_reply_unread_collect",
   "object_invert",
   "object_merge_generic",
   "object_properties_delete_all",
   "object_property_lambda",
   "object_property_lambda_async",
   "promise_wrap",
   "puppeteer_hrefs",
   "puppeteer_matches",
   "range_from",
   "reply",
   "reply_sequence",
   "reply_test",
   "repos_gitignore_overwrite",
   "repos_paths_map_unordered",
   "repo_acronym_set",
   "retry",
   "retry_on_error",
   "roman_to_integer",
   "sandbox_2",
   "sandbox_4_a",
   "search_generic",
   "server",
   "string_list_to",
   "tasks_run",
   "task_new",
   "throws_not_async",
   "undefined_not_is_assert_lambda",
   "user_repo_set",
   "visit_filter_recursive_async",
   "visit_unique_async",
   "watch",
   "function_exists_inner",
   "function_name_to_path_search",
   "functions_paths",
   "functions_names_to_paths",
   "reduce"
  ],
  "ast": [
   "app_new_step_2",
   "data_file_update_inner",
   "file_js_parse",
   "file_js_unparse",
   "functions_combine",
   "function_copy",
   "function_identifier_replace",
   "function_imports",
   "function_imports_add",
   "function_imports_fix",
   "function_imports_missing",
   "function_imports_missing_add",
   "function_list_generate",
   "function_new_declaration",
   "function_new_js_inner",
   "function_params_consolidate",
   "function_params_new",
   "function_param_swap",
   "function_parse_declaration_inner",
   "function_rename_identifiers",
   "function_transform_marker_all",
   "function_transform_marker_arg",
   "function_transform_marker_specified",
   "function_transform_result",
   "function_types",
   "function_type_first",
   "function_wrap",
   "js_arrow_blockify",
   "js_arrow_to_function",
   "js_assert_arguments_args",
   "js_assign_combine",
   "js_atomize",
   "js_atomize_function",
   "js_auto",
   "js_auto_transform_new_inner",
   "js_await_add",
   "js_await_add_inner",
   "js_bang_to_not",
   "js_block_child_graph",
   "js_block_child_graph_unparse",
   "js_calls_to_each",
   "js_call_fill",
   "js_call_new",
   "js_call_new_code",
   "js_call_new_expression",
   "js_declaration_single",
   "js_declaration_single_block_body",
   "js_declaration_single_block_body_add_return",
   "js_declaration_single_name",
   "js_declaration_single_params_add",
   "js_declare_assign",
   "js_declare_assign_null",
   "js_dollar",
   "js_dollar_a",
   "js_dollar_aa",
   "js_dollar_a_generic",
   "js_dollar_g",
   "js_dollar_ib",
   "js_dollar_ie",
   "js_dollar_ien",
   "js_dollar_ien_generic",
   "js_dollar_if_call",
   "js_dollar_ine",
   "js_dollar_ir",
   "js_dollar_l",
   "js_dollar_new",
   "js_dollar_new_args_inner",
   "js_dollar_s",
   "js_dollar_x",
   "js_expand_generic",
   "js_function_id_add",
   "js_function_last_asyncify",
   "js_identifiers",
   "js_identifiers_named",
   "js_identifiers_named_count",
   "js_identifiers_names",
   "js_identifier_replace",
   "js_identifier_unique_ast",
   "js_if_blockify",
   "js_if_blockify_generic",
   "js_if_else_if_combine",
   "js_imports",
   "js_imports_all",
   "js_imports_declarations",
   "js_imports_fix",
   "js_imports_missing",
   "js_imports_missing_add",
   "js_imports_paths_fix",
   "js_imports_unused",
   "js_imports_unused_remove",
   "js_import_inside",
   "js_let_add",
   "js_log_remove",
   "js_markers",
   "js_marker_named_ast",
   "js_marker_named_ast_arg",
   "js_node_atomize",
   "js_node_types",
   "js_node_types_includes",
   "js_outside_move",
   "js_parse",
   "js_parse_statement",
   "js_parse_statement_module",
   "js_return_atomize",
   "js_return_name",
   "js_type",
   "js_unparse",
   "js_unparse_inner",
   "js_visit",
   "js_visitors",
   "js_visit_calls_named",
   "js_visit_match",
   "js_visit_type",
   "js_visit_types",
   "js_visit_type_each_async",
   "marker_above_generic",
   "marker_call",
   "marker_call_atomize",
   "marker_call_replace_generic",
   "marker_down_choices_lambda",
   "marker_expand",
   "marker_functionize",
   "marker_move",
   "marker_top",
   "promise_not_is",
   "task_new"
  ],
  "declaration": [
   "app_new_step_2",
   "data_file_update_inner",
   "function_new",
   "function_new_declaration",
   "function_params_consolidate",
   "function_param_swap",
   "function_parse_declaration_inner",
   "function_parse_declaration_js_unparse",
   "function_wrap",
   "js_assert_arguments_args",
   "js_assign_combine",
   "js_call_new",
   "js_call_new_code",
   "js_code_call_args_await_maybe",
   "js_declaration_asyncify",
   "js_declaration_name",
   "js_declaration_params_get",
   "js_declaration_params_names",
   "js_declaration_param_add",
   "js_declaration_param_add_node",
   "js_declaration_param_named",
   "js_declaration_single",
   "js_declaration_single_block_body",
   "js_declaration_single_name",
   "js_declaration_single_params_add",
   "js_declaration_to_block_body",
   "js_declare_single",
   "js_dollar_a",
   "js_dollar_new_args_inner",
   "js_dollar_s",
   "js_expand_generic",
   "js_function_last_asyncify",
   "js_imports_declarations",
   "js_imports_fix",
   "js_imports_missing",
   "js_imports_paths_fix",
   "js_imports_unused",
   "js_imports_unused_remove",
   "js_node_atomize",
   "js_parse_statement",
   "js_stack_declaration_asyncify",
   "js_statement_call_get",
   "marker_call",
   "marker_down_choices_lambda",
   "marker_functionize"
  ],
  "async": [
   "app_new_step_2",
   "js_function_last_asyncify"
  ],
  "parsed": [
   "app_new_step_2",
   "data_files_update",
   "data_file_update",
   "data_file_update_inner",
   "file_js_parse",
   "file_js_unparse",
   "function_imports",
   "function_imports_fix",
   "function_imports_missing",
   "function_imports_missing_add",
   "function_parse",
   "function_parse_declaration",
   "function_parse_declaration_inner",
   "function_parse_strict",
   "function_parse_strict_declaration",
   "function_transform_result",
   "html_parse_read",
   "http_json",
   "js_calls_to_each",
   "js_call_fill",
   "js_call_insert",
   "js_call_new",
   "js_dollar_f",
   "js_dollar_g",
   "js_visit_nodes",
   "marker_call",
   "marker_functionize"
  ],
  "body_block": [
   "app_new_step_2",
   "functions_combine",
   "function_list_generate",
   "function_wrap",
   "js_declaration_single_block_body",
   "js_declaration_single_block_body_add_return",
   "js_declaration_to_block_body",
   "js_dollar_aa",
   "js_dollar_ir",
   "js_expand_generic",
   "js_return_name",
   "js_statement_return_empty_add",
   "marker_down_choices_lambda",
   "marker_functionize",
   "task_new"
  ],
  "output": [
   "app_new_step_2",
   "command_line_node_g",
   "command_line_read",
   "file_open",
   "functions_transform",
   "function_list_generate",
   "function_params_new",
   "function_parse_declaration_js_unparse",
   "function_path_declaration_unparse",
   "function_rename_identifiers",
   "function_transform",
   "js_function_last_asyncify",
   "js_unparse_inner",
   "marker_call",
   "marker_call_replace_generic"
  ],
  "object_property_get": [
   "app_refresh",
   "app_replace_home",
   "app_replace_rule_set",
   "app_replace_rule_valid",
   "app_reply_main",
   "assert_arguments",
   "bind_property",
   "chalk_color",
   "command_line_node_g",
   "data_file_update_inner",
   "data_identifiers_search",
   "data_property_get",
   "data_value",
   "each_object",
   "ebible_books_to_chapter_codes",
   "ebible_languages_to_bible_folders",
   "ebible_references_parse_lines",
   "ebible_verses_upload",
   "ebible_version_books_testament",
   "file_json_isolate",
   "firebase_storage_download_property",
   "function_acronym_to_name",
   "function_acronym_to_names",
   "function_aliases_search",
   "function_alias_add_generic",
   "function_alias_rename",
   "function_rename_identifiers",
   "html_component_element_get",
   "js_assign_combine",
   "js_await_add_inner",
   "js_bang_to_not",
   "js_calls_to_each",
   "js_call_callee_name",
   "js_call_new",
   "js_call_new_code",
   "js_code_call_args_await_maybe",
   "js_declaration_asyncify",
   "js_declaration_name",
   "js_declaration_params_names_node",
   "js_declare_single_init",
   "js_dollar",
   "js_dollar_g",
   "js_dollar_ir",
   "js_dollar_s",
   "js_function_id_add",
   "js_function_last_asyncify",
   "js_identifiers_named",
   "js_identifiers_named_count",
   "js_identifiers_names",
   "js_identifier_defineds",
   "js_identifier_replace",
   "js_if_blockify_generic",
   "js_if_else_if_combine",
   "js_imports_fix",
   "js_imports_paths_fix",
   "js_imports_unused",
   "js_imports_unused_remove",
   "js_let_add",
   "js_node_atomize",
   "js_node_type",
   "js_parse_expression",
   "js_stack_declaration_asyncify",
   "js_statement_call_get",
   "js_statement_expression_get",
   "js_visit_calls_named",
   "js_visit_children_get",
   "list_map_property",
   "marker_above_delete",
   "marker_above_generic",
   "marker_enter",
   "marker_functionize",
   "marker_next_await",
   "marker_next_declare_single_init_elements",
   "messenger_reply",
   "messenger_reply_playwright",
   "object_merge_generic",
   "object_property_equals",
   "object_property_equals_lambda",
   "object_property_from",
   "object_property_get",
   "object_property_get_name",
   "object_property_initialize",
   "object_property_lambda",
   "object_property_lambda_async",
   "prompt_previous",
   "reply",
   "reply_sequence",
   "repo_acronym_to_name",
   "function_exists_inner",
   "function_name_to_path_search"
  ],
  "storage_local_initialize": [
   "app_refresh",
   "storage_local_initialize",
   "storage_local_initialize_context"
  ],
  "html_clear": [
   "app_refresh",
   "app_replace_rule_set",
   "app_reply_main",
   "html_clear"
  ],
  "html_document_body": [
   "app_refresh",
   "app_replace_main",
   "app_reply_main",
   "html_document_body",
   "html_loading"
  ],
  "app_refresh": [
   "app_refresh",
   "app_replace_main",
   "app_screen_set"
  ],
  "context": [
   "app_refresh",
   "app_replace_font_size",
   "app_replace_font_size_adjust",
   "app_replace_font_size_refresh",
   "app_replace_home",
   "app_replace_main",
   "app_replace_rule_set",
   "app_replace_settings",
   "app_screen_set",
   "html_button_screen",
   "messenger_reply_login",
   "messenger_reply_playwright",
   "storage_local_get_context",
   "storage_local_initialize_context",
   "storage_local_set_context"
  ],
  "app_fn": [
   "app_refresh",
   "app_replace_main",
   "storage_local_get",
   "storage_local_get_context",
   "storage_local_initialize",
   "storage_local_initialize_context",
   "storage_local_key_get",
   "storage_local_set",
   "storage_local_set_context"
  ],
  "screens": [
   "app_refresh",
   "app_replace_main"
  ],
  "body": [
   "app_refresh",
   "function_imports_add",
   "html_document_body",
   "html_loading",
   "html_overwrite",
   "html_update_generic",
   "js_block_child_graph",
   "js_declaration_to_block_body",
   "js_if_blockify_generic",
   "js_imports_fix",
   "js_imports_unused_remove",
   "js_outside_move",
   "js_parse_statement",
   "js_parse_statement_module",
   "marker_enter",
   "marker_functionize",
   "marker_top"
  ],
  "screen_name": [
   "app_refresh",
   "function_new_app_screen",
   "html_button_screen",
   "marker_screen_add"
  ],
  "screen": [
   "app_refresh"
  ],
  "app_replace_main": [
   "app_replace",
   "app_replace_main"
  ],
  "app_replace": [
   "app_replace",
   "app_replace_main"
  ],
  "f_name": [
   "app_replace",
   "app_reply",
   "command_line_node_g",
   "data_file_update_inner",
   "data_marker_current_get",
   "data_path_generic",
   "file_name_json_folder",
   "firebase_deploy_function",
   "firebase_deploy_function_destination",
   "firebase_deploy_function_destination_version",
   "firebase_storage_function_run",
   "functions_combine",
   "functions_search_open",
   "functions_transform",
   "function_alias_add",
   "function_alias_replace",
   "function_auto",
   "function_auto_path",
   "function_current_set",
   "function_current_set_task_new",
   "function_current_set_task_new_simple",
   "function_delete",
   "function_delete_if_exists",
   "function_dependencies",
   "function_dependencies_code",
   "function_dependencies_code_copy",
   "function_exists",
   "function_exists_strict",
   "function_format",
   "function_identifier_replace",
   "function_import",
   "function_imports",
   "function_imports_fix",
   "function_imports_missing",
   "function_imports_missing_add",
   "function_list_generate",
   "function_name_to_acronym",
   "function_name_to_base",
   "function_name_to_parts",
   "function_name_to_path",
   "function_name_to_path_unalias",
   "function_name_unalias",
   "function_new",
   "function_new_aliased",
   "function_new_transform",
   "function_open",
   "function_open_app",
   "function_open_editor",
   "function_params_consolidate",
   "function_params_new",
   "function_param_swap",
   "function_param_swap_task_simple",
   "function_parse",
   "function_parse_declaration",
   "function_parse_declaration_js_unparse",
   "function_parse_strict",
   "function_parse_strict_declaration",
   "function_path_declaration_unparse",
   "function_path_to_name",
   "function_read",
   "function_rename_identifiers",
   "function_run",
   "function_run_git",
   "function_run_line",
   "function_run_line_git",
   "function_run_line_parse",
   "function_run_log",
   "function_transform",
   "function_transform_command",
   "function_transform_command_self",
   "function_transform_current",
   "function_transform_marker",
   "function_transform_marker_all",
   "function_transform_marker_empty",
   "function_transform_marker_specified",
   "function_transform_result",
   "function_types",
   "function_type_first",
   "function_watch_ending_change",
   "function_wrap",
   "function_wrap_suffix_add",
   "git_acp_call",
   "git_acp_call_folder",
   "js_call_insert",
   "js_call_new_expression",
   "js_code_call_statement",
   "js_code_declaration",
   "js_code_declaration_args",
   "js_function_last_asyncify",
   "js_marker_insert",
   "js_outside_move",
   "js_visit_calls_named",
   "list_map_path_join",
   "marker_assign_replace",
   "marker_call_replace_generic",
   "marker_down_choices",
   "marker_expand",
   "marker_functionize",
   "marker_move",
   "marker_new",
   "marker_next",
   "marker_next_await",
   "marker_next_delete",
   "marker_remove",
   "marker_top",
   "repos_gitignore_overwrite",
   "task_new",
   "functions_paths",
   "function_name_folder_to_path",
   "functions_names_to_paths"
  ],
  "storage_local_initialize_context": [
   "app_replace_font_size",
   "app_replace_rule_set",
   "storage_local_initialize_context"
  ],
  "app_replace_font_size": [
   "app_replace_font_size",
   "app_replace_font_size_adjust",
   "app_replace_font_size_refresh"
  ],
  "value2": [
   "app_replace_font_size",
   "error_attention_set"
  ],
  "app_replace_font_size_refresh": [
   "app_replace_font_size_adjust",
   "app_replace_font_size_refresh",
   "app_replace_main"
  ],
  "storage_local_set_context": [
   "app_replace_font_size_adjust",
   "app_replace_home",
   "app_screen_set",
   "storage_local_set_context"
  ],
  "app_replace_font_size_adjust": [
   "app_replace_font_size_adjust",
   "app_replace_settings"
  ],
  "value_get": [
   "app_replace_font_size_adjust",
   "app_replace_settings",
   "cache_generic",
   "data_boolean_set",
   "http_firebase",
   "http_local",
   "lambda_get",
   "list_first_remaining",
   "list_first_second",
   "list_first_second_generic",
   "search_generic"
  ],
  "value": [
   "app_replace_font_size_adjust",
   "app_replace_font_size_refresh",
   "app_replace_settings",
   "app_screen_set",
   "bind_property",
   "cache_generic",
   "data_boolean_set",
   "data_get",
   "data_property_get",
   "data_transform",
   "data_value",
   "each_object",
   "error_attention_set",
   "file_json_isolate",
   "firebase_storage_download_property",
   "function_aliases_search",
   "function_alias_add_generic",
   "global_function_async",
   "global_function_property_async",
   "html_attribute_set",
   "html_component_element_get",
   "html_style_font_size",
   "http_firebase",
   "integer_is",
   "js_declaration_asyncify",
   "js_declaration_params_names_node",
   "js_declare_assign",
   "js_declare_assign_null",
   "js_dollar_s",
   "js_function_id_add",
   "js_function_last_asyncify",
   "js_identifiers_names",
   "js_identifier_defineds",
   "js_imports_declarations",
   "js_marker_name_get",
   "js_property",
   "js_property_generic",
   "js_property_identifier",
   "js_statement_expression_get",
   "js_visit_children_get",
   "lambda_get",
   "lambda_value",
   "list_insert",
   "list_insert_generic",
   "list_is",
   "list_map_index",
   "list_map_property",
   "list_not_is",
   "list_replace",
   "list_set",
   "list_splice",
   "list_to_dictionary",
   "list_to_dictionary_async",
   "marker_assign_replace_string",
   "marker_screen_add",
   "messenger_reply_messages_transform",
   "messenger_reply_messages_urls_get",
   "null_is",
   "null_not_is",
   "number_is",
   "object_invert",
   "object_merge_generic",
   "object_property_exists_equals",
   "object_property_from",
   "object_property_get",
   "object_property_initialize",
   "object_property_lambda",
   "object_property_lambda_async",
   "object_property_set",
   "object_property_set_exists_not",
   "promise_is",
   "repo_acronym_get",
   "repo_acronym_set",
   "storage_local_get",
   "storage_local_get_context",
   "storage_local_initialize",
   "storage_local_initialize_context",
   "storage_local_set",
   "storage_local_set_context",
   "string_is",
   "string_is_assert",
   "string_is_assert_json",
   "string_is_assert_message",
   "undefined_is",
   "undefined_not_is_assert",
   "undefined_not_is_assert_lambda",
   "user_repo_get",
   "user_repo_set",
   "watch",
   "true_is"
  ],
  "app_replace_font_size_factor": [
   "app_replace_font_size_factor",
   "app_replace_settings"
  ],
  "html_style_font_size": [
   "app_replace_font_size_refresh",
   "html_button",
   "html_style_font_size"
  ],
  "html_document_root": [
   "app_replace_font_size_refresh",
   "html_document_root"
  ],
  "html": [
   "app_replace_font_size_refresh",
   "html_document_root",
   "html_style_font_size"
  ],
  "emoji_gear": [
   "app_replace_home",
   "emoji_gear"
  ],
  "app_screen_set": [
   "app_replace_home",
   "app_screen_set",
   "html_button_screen"
  ],
  "html_button": [
   "app_replace_home",
   "app_replace_rule_set",
   "app_replace_settings",
   "app_reply_main",
   "html_button",
   "html_button_screen"
  ],
  "app_replace_rule_sets": [
   "app_replace_home",
   "app_replace_rule_set",
   "app_replace_rule_sets"
  ],
  "each_index": [
   "app_replace_home",
   "app_replace_rule_set",
   "each_index",
   "each_multiple",
   "reply_sequence"
  ],
  "app_replace_home": [
   "app_replace_home",
   "app_replace_screens"
  ],
  "root": [
   "app_replace_home",
   "app_replace_main",
   "app_replace_rule_set",
   "app_replace_settings",
   "app_reply_main",
   "ebible_chapters",
   "ebible_chapter_classes",
   "ebible_chapter_text",
   "ebible_versions",
   "ebible_version_books_testament",
   "html_div",
   "html_p",
   "html_parse",
   "html_parse_find",
   "html_parse_find_a_href_starts_with",
   "html_p_text"
  ],
  "lambda4": [
   "app_replace_home",
   "app_replace_rule_set",
   "app_reply_main",
   "ebible_references_parse_lines",
   "function_params_new",
   "js_await_add_inner",
   "js_expand_generic",
   "js_identifier_defineds",
   "messenger_reply",
   "messenger_reply_messages",
   "promise_wrap"
  ],
  "rule_sets": [
   "app_replace_home",
   "app_replace_rule_set"
  ],
  "lambda2": [
   "app_replace_home",
   "app_replace_rule_set",
   "app_replace_settings",
   "app_reply_main",
   "bible_verses_encouragement_generate",
   "command_line_read",
   "data_file_update_inner",
   "each_index",
   "each_index_async",
   "each_multiple",
   "each_multiple_async",
   "each_object",
   "ebible_books_to_chapter_codes",
   "ebible_chapters",
   "ebible_chapter_text",
   "ebible_index_flat",
   "ebible_languages_to_bible_folders",
   "ebible_references_parse_lines",
   "ebible_verses",
   "folder_read_async",
   "functions_combine",
   "functions_transform",
   "function_alias_rename",
   "function_dependencies",
   "function_identifier_replace",
   "function_params_consolidate",
   "function_rename_identifiers",
   "function_transform_marker_specified",
   "function_type_first",
   "git_publish_initial",
   "html_parse_descendants_classes",
   "html_p_text_multiple",
   "http",
   "js_assert_arguments_args",
   "js_block_child_graph",
   "js_call_new_code",
   "js_declaration_single",
   "js_declare_assign",
   "js_dollar",
   "js_dollar_a",
   "js_dollar_g",
   "js_dollar_new",
   "js_dollar_s",
   "js_expand_generic",
   "js_function_last_asyncify",
   "js_identifiers",
   "js_identifiers_named_count",
   "js_identifiers_names",
   "js_identifier_defineds",
   "js_imports_declarations",
   "js_node_types",
   "js_node_types_is",
   "js_outside_move",
   "js_visit_each",
   "js_visit_each_async",
   "js_visit_match",
   "js_visit_type_each_async",
   "list_any_starts_with",
   "list_difference",
   "list_filter_starts_with_not_multiple",
   "list_find_starts_with",
   "list_intersect",
   "list_squash",
   "marker_assign_replace",
   "marker_call",
   "marker_call_replace_generic",
   "marker_down_choices",
   "marker_down_choices_lambda",
   "marker_expand",
   "marker_functionize",
   "marker_next",
   "marker_next_await",
   "marker_next_delete",
   "marker_param_add",
   "messenger_reply",
   "messenger_reply_messages",
   "messenger_reply_playwright",
   "messenger_reply_unread_collect",
   "object_properties_delete",
   "puppeteer_hrefs",
   "retry",
   "retry_on_error",
   "sandbox_4_a",
   "schtasks_query",
   "search_generic",
   "task_new",
   "undefined_not_is_assert",
   "visit_unique_async",
   "watch",
   "function_exists_inner",
   "function_name_to_path_search",
   "functions_paths"
  ],
  "item": [
   "app_replace_home",
   "app_replace_rule_set",
   "app_reply_main",
   "css_class_prefix_combine",
   "data_file_update_inner",
   "each",
   "each_async",
   "each_index",
   "each_index_async",
   "each_multiple",
   "each_multiple_async",
   "ebible_chapters",
   "ebible_chapter_text",
   "ebible_languages_to_bible_folders",
   "ebible_versions_download",
   "ebible_version_books_testament",
   "folder_find_starts_with",
   "functions_combine",
   "function_wrap",
   "html_display_none_or_block",
   "html_parse_attr",
   "html_parse_descendants_classes",
   "html_parse_href",
   "html_parse_href_text",
   "html_parse_href_text_map",
   "html_parse_text",
   "html_p_text_multiple",
   "js_declaration_param_add",
   "js_declaration_param_add_node",
   "js_dollar_a",
   "js_expand_generic",
   "js_identifier_defineds",
   "js_node_types_is",
   "js_stack_filtered_multiple",
   "js_statement_return",
   "js_statement_return_empty",
   "js_types_function_includes",
   "keyboard_type_delay",
   "lists_get",
   "list_add",
   "list_adder_async",
   "list_adder_generic",
   "list_adder_generic_async",
   "list_add_first",
   "list_add_if_not_includes",
   "list_any_starts_with",
   "list_concat_multiple",
   "list_filter_empty_not_is",
   "list_filter_ends_with_any",
   "list_filter_ends_with_not_any",
   "list_filter_starts_with",
   "list_filter_starts_with_any",
   "list_filter_starts_with_not",
   "list_filter_starts_with_not_multiple",
   "list_find_property",
   "list_find_starts_with",
   "list_get",
   "list_get_end",
   "list_get_end_3",
   "list_includes",
   "list_index_of",
   "list_index_of_delta",
   "list_index_of_delta_outside",
   "list_index_of_last",
   "list_index_of_next",
   "list_index_of_next_outside",
   "list_index_of_previous",
   "list_last_is",
   "list_last_or_null",
   "list_map_index",
   "list_map_path_join",
   "list_map_prefix_any",
   "list_map_prefix_without",
   "list_map_prefix_without_any",
   "list_map_property",
   "list_map_property_to",
   "list_map_split_space",
   "list_next",
   "list_next_index",
   "list_next_try",
   "list_previous",
   "list_remove",
   "list_remove_all",
   "list_remove_if_exists",
   "list_squash",
   "list_to_dictionary",
   "list_to_dictionary_async",
   "list_unique",
   "marker_down_choices",
   "object_property_equals",
   "object_property_equals_lambda",
   "object_property_get_name",
   "range_from",
   "sandbox_4_a",
   "string_ends_with_not",
   "string_includes",
   "string_starts_with_not",
   "tasks_run"
  ],
  "index": [
   "app_replace_home",
   "app_replace_rule_set",
   "app_reply_main",
   "each_index",
   "each_index_async",
   "each_multiple",
   "each_multiple_async",
   "ebible_index",
   "ebible_index_flat_upload",
   "ebible_index_upload",
   "ebible_references_parse_lines",
   "ebible_verses",
   "ebible_verse_download",
   "firebase_storage_download_ebible",
   "firebase_storage_download_json",
   "integer_is_assert",
   "js_call_insert",
   "js_dollar_g",
   "js_dollar_x",
   "js_expand_generic",
   "js_identifier_defineds",
   "js_marker_insert",
   "js_node_atomize",
   "js_stack_list_block_is",
   "lists_get",
   "list_first",
   "list_get",
   "list_index_is",
   "list_index_of",
   "list_index_of_delta_outside",
   "list_index_of_last",
   "list_insert",
   "list_insert_generic",
   "list_map_index",
   "list_next_index",
   "list_random_item",
   "list_remove",
   "list_remove_at",
   "list_replace",
   "list_second",
   "list_set",
   "list_slice_count",
   "list_splice",
   "marker_above_delete",
   "marker_above_generic",
   "marker_bottom",
   "marker_call",
   "marker_down_generic",
   "marker_enter",
   "marker_expand",
   "marker_first",
   "marker_first_index",
   "marker_functionize",
   "marker_index",
   "marker_leave",
   "marker_move",
   "marker_new",
   "marker_next_delete",
   "marker_next_get",
   "marker_next_index",
   "marker_previous_index",
   "reply_sequence"
  ],
  "name2": [
   "app_replace_home",
   "app_reply_main",
   "js_assign_combine"
  ],
  "html_meta_viewport": [
   "app_replace_main",
   "html_meta_viewport"
  ],
  "app_replace_screens": [
   "app_replace_main",
   "app_replace_screens"
  ],
  "list_skip": [
   "app_replace_rule_parse",
   "app_replace_rule_set",
   "ebible_verses",
   "js_dollar",
   "list_skip",
   "list_skip_1",
   "messenger_reply_unreplied"
  ],
  "list_take": [
   "app_replace_rule_parse",
   "app_replace_rule_set",
   "ebible_verses",
   "list_take"
  ],
  "list_index_of": [
   "app_replace_rule_parse",
   "ebible_references_parse_lines",
   "js_block_insert",
   "js_node_atomize",
   "list_index_of",
   "list_index_of_delta_outside",
   "list_next_index",
   "list_remove",
   "list_swap",
   "marker_down_generic",
   "marker_index",
   "marker_leave",
   "messenger_reply_unreplied"
  ],
  "string_split_space": [
   "app_replace_rule_parse",
   "ebible_verses",
   "list_map_split_space",
   "reply",
   "string_split_space"
  ],
  "app_replace_rule_parse": [
   "app_replace_rule_parse",
   "app_replace_rule_set"
  ],
  "rule": [
   "app_replace_rule_parse",
   "app_replace_rule_set",
   "app_replace_rule_valid"
  ],
  "split": [
   "app_replace_rule_parse",
   "bible_verses_encouragement_generate",
   "digits",
   "ebible_references_parse",
   "ebible_verses",
   "functions_combine_name",
   "function_run_line_parse",
   "html_parse_descendants_classes",
   "js_call_new_code",
   "js_dollar",
   "list_map_whitespace_normalize",
   "path_join",
   "roman_to_integer",
   "sandbox_4_a",
   "string_replace",
   "string_split",
   "string_split_comma",
   "string_split_empty",
   "string_split_newline",
   "string_split_space"
  ],
  "middle": [
   "app_replace_rule_parse"
  ],
  "object_property_set_exists_not": [
   "app_replace_rule_set",
   "app_reply_main",
   "object_property_set_exists_not",
   "reply"
  ],
  "range": [
   "app_replace_rule_set",
   "each_range",
   "each_range_async",
   "marker_functionize",
   "range",
   "range_from"
  ],
  "list_any": [
   "app_replace_rule_set",
   "js_node_types_is",
   "list_any",
   "list_any_starts_with",
   "list_filter_ends_with_any",
   "list_filter_ends_with_not_any",
   "marker_functionize"
  ],
  "html_div": [
   "app_replace_rule_set",
   "html_div",
   "html_loading"
  ],
  "list_concat_multiple": [
   "app_replace_rule_set",
   "list_concat_multiple"
  ],
  "list_size": [
   "app_replace_rule_set",
   "app_replace_rule_valid",
   "function_transform_marker_specified",
   "js_assert_arguments_args",
   "js_call_new_code",
   "js_node_atomize",
   "list_all",
   "list_empty_is",
   "list_index_last",
   "list_multiple_is",
   "list_random_item",
   "list_size",
   "list_size_1",
   "list_size_1_assert",
   "list_skip",
   "list_slice_end"
  ],
  "object_merge": [
   "app_replace_rule_set",
   "command_line_generic",
   "ebible_verses_upload",
   "ebible_version_books_testament",
   "firebase_upload_generic",
   "function_imports_missing",
   "function_parse",
   "function_parse_declaration_inner",
   "function_transform_marker_arg",
   "js_imports_unused",
   "marker_call_replace_generic",
   "marker_index",
   "marker_next_get",
   "marker_next_index",
   "marker_previous_index",
   "object_copy",
   "object_merge",
   "object_replace",
   "function_exists_inner",
   "function_name_to_path_unalias",
   "functions_names_to_paths"
  ],
  "app_replace_rule_valid": [
   "app_replace_rule_set",
   "app_replace_rule_valid"
  ],
  "not": [
   "app_replace_rule_set",
   "app_reply_main",
   "assert",
   "assert_message",
   "catch_only_run_async",
   "data_all",
   "equal_not",
   "function_alias_change",
   "function_alias_delete",
   "function_alias_replace",
   "function_list_generate",
   "function_params_new",
   "http",
   "js_await_add_inner",
   "js_bang_to_not",
   "js_calls_to_each",
   "js_declare_single",
   "js_function_last_asyncify",
   "js_if_blockify_generic",
   "js_imports_declarations",
   "js_let_add",
   "js_marker_name_get",
   "js_node_type_not_is",
   "js_stack_list_block_is",
   "js_statement_call_get",
   "js_unparse",
   "js_visit",
   "js_visit_nodes",
   "list_add_if_not_includes",
   "list_difference",
   "list_empty_not_is",
   "list_index_of_delta",
   "list_not_is",
   "list_size_1_assert_message",
   "list_unique",
   "log_unparse_try",
   "marker_functionize",
   "marker_rename",
   "not",
   "object_property_exists_not",
   "object_property_initialize",
   "object_property_lambda",
   "object_property_lambda_async",
   "path_join",
   "promise_not_is",
   "roman_to_integer",
   "string_ends_with_not",
   "string_skip_while",
   "string_starts_with_not",
   "string_suffix_without",
   "string_trim_right",
   "visit_filter_recursive_async"
  ],
  "html_enable_if": [
   "app_replace_rule_set",
   "html_enable_if"
  ],
  "html_text_set_if": [
   "app_replace_rule_set",
   "html_text_set_if"
  ],
  "null_not_is": [
   "app_replace_rule_set",
   "function_run_prompt",
   "js_block_child_graph",
   "marker_enter",
   "null_not_is",
   "null_not_is_assert"
  ],
  "html_style_set_or_remove": [
   "app_replace_rule_set",
   "html_style_set_or_remove"
  ],
  "list_map_index": [
   "app_replace_rule_set",
   "list_map_index"
  ],
  "each": [
   "app_replace_rule_set",
   "app_reply_main",
   "bible_verses_encouragement_generate",
   "data_file_update_inner",
   "each",
   "each_index",
   "each_object",
   "each_range",
   "each_range_from",
   "each_reverse",
   "ebible_chapter_text",
   "ebible_index_flat",
   "function_alias_rename",
   "function_identifier_replace",
   "function_params_new",
   "html_parse_descendants_classes",
   "html_p_text_multiple",
   "js_block_child_graph",
   "js_call_new_code",
   "js_declaration_single_params_add",
   "js_dollar_a",
   "js_dollar_s",
   "js_expand_generic",
   "js_identifier_defineds",
   "js_imports_declarations",
   "js_imports_fix",
   "js_imports_paths_fix",
   "js_imports_unused_remove",
   "js_outside_move",
   "js_stack_filtered_multiple_each",
   "js_visit_each",
   "lambda_invoke_multiple",
   "list_concat_multiple",
   "list_difference",
   "list_intersect",
   "list_remove_all_multiple",
   "list_remove_multiple",
   "list_squash",
   "list_to_dictionary",
   "list_unique",
   "messenger_reply_messages_urls_add_multiple",
   "messenger_reply_unread_collect",
   "object_merge_generic",
   "object_properties_delete",
   "object_properties_delete_all",
   "search_generic",
   "visit_filter_recursive",
   "reduce"
  ],
  "html_p": [
   "app_replace_rule_set",
   "app_reply_main",
   "html_p",
   "html_p_text"
  ],
  "html_disable": [
   "app_replace_rule_set",
   "html_disable",
   "html_enable_if"
  ],
  "string_split_empty": [
   "app_replace_rule_set",
   "digits",
   "string_split_empty"
  ],
  "list_join_space": [
   "app_replace_rule_set",
   "command_line_node_g",
   "ebible_verse_new",
   "list_join_space",
   "messenger_reply",
   "sandbox_2"
  ],
  "list_map": [
   "app_replace_rule_set",
   "app_reply_main",
   "bible_verses_encouragement_generate",
   "ebible_chapters",
   "ebible_chapter_text",
   "ebible_languages_to_bible_folders",
   "ebible_verses_upload",
   "ebible_version_books_testament",
   "functions_format",
   "functions_names_from_path",
   "functions_transform",
   "function_dependencies_code",
   "function_name_to_acronym",
   "function_params_consolidate",
   "html_parse_href_text_map",
   "js_expand_generic",
   "js_imports_unused",
   "js_visit_children_get",
   "lists_get",
   "list_map",
   "list_map_combine",
   "list_map_filter_string_empty_not_is",
   "list_map_first",
   "list_map_index",
   "list_map_lower",
   "list_map_path_join",
   "list_map_prefix_any",
   "list_map_prefix_without",
   "list_map_prefix_without_any",
   "list_map_property",
   "list_map_property_to",
   "list_map_split_comma",
   "list_map_split_space",
   "list_map_squash",
   "list_map_unordered_async",
   "list_map_whitespace_normalize",
   "marker_functionize",
   "marker_top",
   "messenger_reply",
   "range_from",
   "repos_gitignore_overwrite",
   "sandbox_4_a",
   "functions_paths"
  ],
  "html_p_text": [
   "app_replace_rule_set",
   "html_p_text",
   "html_p_text_multiple"
  ],
  "storage_local_get_context": [
   "app_replace_rule_set",
   "storage_local_get_context"
  ],
  "list_get": [
   "app_replace_rule_set",
   "ebible_references_parse_lines",
   "js_dollar_x",
   "js_identifier_defineds",
   "js_node_atomize",
   "lists_get",
   "list_first",
   "list_get",
   "list_get_end",
   "list_next",
   "list_next_try",
   "list_previous",
   "list_random_item",
   "list_second",
   "marker_call_replace_generic",
   "marker_enter",
   "marker_next_get",
   "messenger_reply_unread_click",
   "reply_sequence"
  ],
  "emoji_home": [
   "app_replace_rule_set",
   "app_replace_settings",
   "emoji_home"
  ],
  "html_button_screen": [
   "app_replace_rule_set",
   "app_replace_settings",
   "html_button_screen"
  ],
  "app_replace_rule_set": [
   "app_replace_rule_set",
   "app_replace_screens"
  ],
  "start": [
   "app_replace_rule_set",
   "app_replace_rule_sets",
   "list_slice_end",
   "reduce"
  ],
  "current": [
   "app_replace_rule_set",
   "folder_current",
   "folder_current_join",
   "js_unparse",
   "reduce"
  ],
  "index_selected": [
   "app_replace_rule_set",
   "app_replace_rule_valid"
  ],
  "label_rules": [
   "app_replace_rule_set"
  ],
  "rules": [
   "app_replace_rule_set",
   "app_replace_rule_sets"
  ],
  "mapped": [
   "app_replace_rule_set",
   "bible_verses_encouragement_generate",
   "ebible_chapters",
   "ebible_references_parse_lines",
   "ebible_verses_upload",
   "ebible_versions",
   "ebible_version_books_testament",
   "ebible_version_books_testament_new",
   "ebible_version_books_testament_old",
   "functions_format",
   "functions_transform",
   "function_dependencies_code",
   "git_publish_initial",
   "html_parse_find_a_href_starts_with",
   "html_parse_find_list_href_text",
   "html_parse_href_text_map",
   "js_block_child_graph_unparse",
   "js_dollar_choice_arguments_names",
   "js_imports_declarations",
   "js_imports_unused",
   "js_visit_children_get",
   "list_filter_starts_with_not",
   "list_filter_starts_with_not_multiple",
   "list_map",
   "list_map_index",
   "list_map_lower",
   "list_map_prefix_any",
   "list_map_prefix_without",
   "list_map_prefix_without_any",
   "list_map_property",
   "list_map_property_to",
   "list_map_squash",
   "list_map_unordered_async",
   "messenger_reply",
   "range_from",
   "reply",
   "repos_gitignore_overwrite",
   "sandbox_2",
   "sandbox_4_a",
   "repos_paths_map_unordered",
   "function_exists_inner",
   "function_name_to_path_search",
   "functions_paths"
  ],
  "right_joined": [
   "app_replace_rule_set"
  ],
  "left_joined": [
   "app_replace_rule_set"
  ],
  "text": [
   "app_replace_rule_set",
   "app_reply_choices",
   "app_reply_main",
   "app_reply_pray",
   "clipboard_copy",
   "ebible_chapter_text",
   "ebible_verses",
   "ebible_verse_new",
   "ebible_versions",
   "html_button",
   "html_button_screen",
   "html_parse_classes_preview",
   "html_parse_href_text",
   "html_parse_text",
   "html_p_text",
   "html_text_set",
   "http_json",
   "http_local_text",
   "messenger_reply_unread_click",
   "puppeteer_matches",
   "sandbox_2",
   "urdu_allah_to_god"
  ],
  "lambda3": [
   "app_replace_rule_set",
   "app_replace_settings",
   "app_reply_main",
   "ebible_versions_download",
   "error_attention_set",
   "function_list_generate",
   "function_params_new",
   "http",
   "js_await_add_inner",
   "js_calls_to_each",
   "js_call_new_code",
   "js_dollar_a",
   "js_dollar_a_generic",
   "js_expand_generic",
   "js_identifiers_named_count",
   "js_identifier_defineds",
   "js_if_else_if_combine",
   "js_log_remove",
   "js_outside_move",
   "list_filter_ends_with_any",
   "list_filter_ends_with_not_any",
   "marker_down_choices_lambda",
   "marker_functionize",
   "messenger_reply_messages",
   "puppeteer_hrefs",
   "retry"
  ],
  "refresh": [
   "app_replace_rule_set"
  ],
  "b": [
   "app_replace_rule_set",
   "assert",
   "assert_json",
   "assert_message",
   "assert_not",
   "browser_is",
   "buffer_string_to",
   "clipboard_copy",
   "each_pair",
   "each_pair_async",
   "ebible_verse",
   "ebible_version_books",
   "equal_by",
   "equal_by_async",
   "firebase_storage_download",
   "function_identifier_replace",
   "function_param_swap",
   "html_button_element",
   "html_disable",
   "html_disable_set",
   "html_enable",
   "html_style_assign",
   "html_style_remove",
   "html_style_set",
   "http",
   "js_calls_to_each",
   "js_call_new_code",
   "js_declare_single",
   "js_node_atomize",
   "list_concat",
   "list_insert_generic",
   "list_range",
   "list_skip",
   "list_slice",
   "list_sort_number_mapper",
   "list_swap",
   "messenger_reply_playwright",
   "prompt_previous",
   "reply",
   "string_base64_to",
   "string_is_assert",
   "string_is_assert_message",
   "string_skip",
   "string_slice"
  ],
  "rules_buttons": [
   "app_replace_rule_set"
  ],
  "label_symbols": [
   "app_replace_rule_set"
  ],
  "div": [
   "app_replace_rule_set",
   "html_div",
   "html_loading"
  ],
  "current_list": [
   "app_replace_rule_set",
   "app_replace_rule_valid"
  ],
  "symbols_buttons": [
   "app_replace_rule_set"
  ],
  "letter": [
   "app_replace_rule_set"
  ],
  "lambda5": [
   "app_replace_rule_set",
   "app_reply_main",
   "ebible_references_parse_lines",
   "function_params_new",
   "js_identifier_defineds",
   "messenger_reply_messages",
   "sleep"
  ],
  "rule2": [
   "app_replace_rule_set"
  ],
  "eq": [
   "app_replace_rule_set",
   "app_replace_rule_valid",
   "equal",
   "equal_assert",
   "equal_by",
   "equal_by_async",
   "js_calls_to_each",
   "js_if_else_if_combine"
  ],
  "before": [
   "app_replace_rule_set",
   "date_diff_hours",
   "date_diff_ms",
   "function_alias_rename",
   "git_push_folder"
  ],
  "size": [
   "app_replace_rule_set",
   "app_replace_rule_valid",
   "function_transform_marker_specified",
   "js_assert_arguments_args",
   "list_size"
  ],
  "after": [
   "app_replace_rule_set",
   "function_alias_rename",
   "js_dollar_a_generic"
  ],
  "nn": [
   "app_replace_rule_set",
   "function_run_prompt",
   "js_block_child_graph",
   "marker_enter",
   "null_not_is",
   "null_not_is_assert"
  ],
  "lambda6": [
   "app_replace_rule_set",
   "app_reply_main",
   "js_calls_to_each",
   "messenger_reply_messages"
  ],
  "component": [
   "app_replace_rule_set",
   "app_replace_settings",
   "app_reply_main",
   "html_attribute_set",
   "html_button",
   "html_component_element_get",
   "html_document_head",
   "html_element",
   "html_enable_if",
   "html_meta_viewport",
   "html_on",
   "html_on_click",
   "html_on_keydown",
   "html_p",
   "html_remove",
   "html_style_set_or_remove",
   "html_text_set",
   "html_text_set_if"
  ],
  "lambda7": [
   "app_replace_rule_set",
   "app_reply_main"
  ],
  "eq2": [
   "app_replace_rule_set"
  ],
  "size2": [
   "app_replace_rule_set"
  ],
  "r": [
   "app_replace_rule_set",
   "each_range_async",
   "function_aliases_restore",
   "function_format",
   "integer_random",
   "js_statement_return_add",
   "js_statement_return_empty_add",
   "list_random_item",
   "list_remove_all_multiple",
   "list_remove_multiple",
   "marker_functionize",
   "range_from",
   "reply",
   "sandbox"
  ],
  "any": [
   "app_replace_rule_set",
   "list_any",
   "list_any_starts_with",
   "list_filter_ends_with_any",
   "list_filter_ends_with_not_any",
   "list_filter_starts_with_any",
   "list_find_starts_with",
   "string_skip_while",
   "string_starts_with_digit",
   "string_trim_right"
  ],
  "rb": [
   "app_replace_rule_set"
  ],
  "index2": [
   "app_replace_rule_set"
  ],
  "lambda8": [
   "app_replace_rule_set",
   "app_reply_main"
  ],
  "sb": [
   "app_replace_rule_set",
   "function_aliases_restore"
  ],
  "valid": [
   "app_replace_rule_set",
   "functions_names_includes",
   "js_call_fill",
   "js_call_function_if"
  ],
  "nn2": [
   "app_replace_rule_set"
  ],
  "index3": [
   "app_replace_rule_set"
  ],
  "json_to": [
   "app_replace_rule_valid",
   "assert_json",
   "catch_only_run_async",
   "firebase_upload_object",
   "function_list_generate",
   "function_transform_marker_specified",
   "json_to",
   "js_identifiers_to_names",
   "js_identifier_defineds",
   "log_json",
   "sandbox_2",
   "storage_local_set",
   "string_includes",
   "string_is_assert_json",
   "undefined_not_is_assert_lambda"
  ],
  "equal_by": [
   "app_replace_rule_valid",
   "equal_by",
   "js_calls_to_each",
   "js_node_atomize"
  ],
  "list_slice_count": [
   "app_replace_rule_valid",
   "list_slice_count"
  ],
  "sliced": [
   "app_replace_rule_valid",
   "list_slice"
  ],
  "app_replace_settings": [
   "app_replace_screens",
   "app_replace_settings"
  ],
  "home": [
   "app_replace_screens"
  ],
  "rule_set": [
   "app_replace_screens"
  ],
  "settings": [
   "app_replace_screens",
   "firebase_upload_buffer",
   "firebase_upload_generic",
   "firebase_upload_string"
  ],
  "emoji_font_smaller": [
   "app_replace_settings",
   "emoji_font_smaller"
  ],
  "emoji_font_larger": [
   "app_replace_settings",
   "emoji_font_larger"
  ],
  "factor": [
   "app_replace_settings"
  ],
  "app_reply_main": [
   "app_reply",
   "app_reply_main"
  ],
  "app_reply": [
   "app_reply"
  ],
  "emoji_handshake": [
   "app_reply_choices",
   "emoji_handshake"
  ],
  "newline": [
   "app_reply_choices",
   "list_join_newline",
   "list_join_newline_2",
   "newline",
   "string_split_newline"
  ],
  "emoji_rock": [
   "app_reply_choices",
   "emoji_rock"
  ],
  "emoji_rainbow": [
   "app_reply_choices",
   "emoji_rainbow"
  ],
  "string_the_servant_of_god": [
   "app_reply_choices",
   "string_the_servant_of_god",
   "string_the_servant_of_god_is"
  ],
  "emoji_question": [
   "app_reply_choices",
   "emoji_question"
  ],
  "emoji_dove": [
   "app_reply_choices",
   "emoji_dove",
   "emoji_trinity"
  ],
  "app_reply_pray": [
   "app_reply_choices",
   "app_reply_pray"
  ],
  "emoji_family": [
   "app_reply_choices",
   "emoji_family"
  ],
  "emoji_voice": [
   "app_reply_choices",
   "emoji_voice"
  ],
  "emoji_hands_raising": [
   "app_reply_choices",
   "emoji_hands_raising"
  ],
  "emoji_church": [
   "app_reply_choices",
   "emoji_church"
  ],
  "string_lord_bless": [
   "app_reply_choices",
   "string_lord_bless",
   "string_lord_bless_your"
  ],
  "string_lord_bless_your": [
   "app_reply_choices",
   "string_lord_bless_your"
  ],
  "emoji_phone": [
   "app_reply_choices",
   "emoji_phone"
  ],
  "emoji_sleep_face": [
   "app_reply_choices",
   "emoji_sleep_face"
  ],
  "emoji_sleep_z": [
   "app_reply_choices",
   "emoji_sleep_z"
  ],
  "emoji_globe_americas": [
   "app_reply_choices",
   "emoji_globe_americas"
  ],
  "emoji_book_open": [
   "app_reply_choices",
   "emoji_book_open"
  ],
  "emoji_100": [
   "app_reply_choices",
   "emoji_100"
  ],
  "string_the_servant_of_god_is": [
   "app_reply_choices",
   "string_the_servant_of_god_is"
  ],
  "emoji_ok": [
   "app_reply_choices",
   "emoji_ok"
  ],
  "emoji_cross": [
   "app_reply_choices",
   "emoji_cross",
   "emoji_trinity"
  ],
  "emoji_smile": [
   "app_reply_choices",
   "emoji_smile"
  ],
  "emoji_wave": [
   "app_reply_choices",
   "emoji_wave"
  ],
  "emoji_trinity": [
   "app_reply_choices",
   "emoji_trinity",
   "prayer_start"
  ],
  "emoji_fire": [
   "app_reply_choices",
   "emoji_fire"
  ],
  "prayer_start": [
   "app_reply_choices",
   "prayer_start"
  ],
  "prayer_end": [
   "app_reply_choices",
   "prayer_end"
  ],
  "emoji_pray": [
   "app_reply_choices",
   "app_reply_pray",
   "emoji_pray",
   "prayer_end"
  ],
  "app_reply_choices": [
   "app_reply_choices",
   "app_reply_main"
  ],
  "education": [
   "app_reply_choices"
  ],
  "heal": [
   "app_reply_choices"
  ],
  "job": [
   "app_reply_choices"
  ],
  "provide": [
   "app_reply_choices"
  ],
  "travel_pray": [
   "app_reply_choices"
  ],
  "will": [
   "app_reply_choices"
  ],
  "with2": [
   "app_reply_choices"
  ],
  "response": [
   "app_reply_choices",
   "app_reply_pray",
   "http"
  ],
  "list_squash": [
   "app_reply_main",
   "list_map_squash",
   "list_squash",
   "functions_names",
   "functions_paths",
   "repos_paths_map_unordered_combine_squash"
  ],
  "bible_verses_encouragement": [
   "app_reply_main",
   "bible_verses_encouragement",
   "sandbox"
  ],
  "ebible_references_parse_lines": [
   "app_reply_main",
   "ebible_references_parse",
   "ebible_references_parse_lines",
   "reply",
   "sandbox"
  ],
  "ebible_version_books": [
   "app_reply_main",
   "bible_verses_encouragement_generate",
   "ebible_chapter_codes",
   "ebible_references_parse_lines",
   "ebible_version_books",
   "ebible_version_books_upload",
   "sandbox_4_a"
  ],
  "html_display_none_or_block": [
   "app_reply_main",
   "html_display_none_or_block"
  ],
  "list_empty_not_is": [
   "app_reply_main",
   "ebible_verses",
   "js_expand_generic",
   "js_return_name",
   "list_any",
   "list_empty_not_is",
   "list_empty_not_is_assert",
   "list_first_second_generic",
   "marker_top"
  ],
  "ebible_chapter_code_to_name": [
   "app_reply_main",
   "ebible_chapter_code_to_name",
   "ebible_index"
  ],
  "ebible_chapter_code_to_book": [
   "app_reply_main",
   "ebible_chapter_code_to_book",
   "ebible_index",
   "ebible_version_books_testament"
  ],
  "list_find_property": [
   "app_reply_main",
   "ebible_languages_to_bible_folders",
   "ebible_references_parse_lines",
   "ebible_verse",
   "js_declaration_param_named",
   "list_find_property",
   "list_remove_property"
  ],
  "firebase_storage_download_ebible": [
   "app_reply_main",
   "ebible_verse_download",
   "ebible_version_books",
   "firebase_storage_download_ebible"
  ],
  "list_remove_property": [
   "app_reply_main",
   "list_remove_property"
  ],
  "ebible_languages": [
   "app_reply_main",
   "ebible_languages",
   "ebible_languages_to_bible_folders"
  ],
  "string_take_less_1": [
   "app_reply_main",
   "string_take_less_1"
  ],
  "equal": [
   "app_reply_main",
   "ebible_references_parse_lines",
   "equal",
   "equal_assert",
   "equal_by",
   "equal_not",
   "js_assign_combine",
   "js_bang_to_not",
   "js_dollar_ie",
   "js_function_last_asyncify",
   "js_identifier_replace",
   "messenger_reply_playwright",
   "true_is"
  ],
  "list_add_first": [
   "app_reply_main",
   "function_imports_add",
   "js_dollar_aa",
   "list_add_first",
   "marker_enter"
  ],
  "ebible_verse_download": [
   "app_reply_main",
   "ebible_verse",
   "ebible_verse_download"
  ],
  "list_map_property": [
   "app_reply_main",
   "bible_verses_encouragement_generate",
   "ebible_index",
   "ebible_index_flat",
   "ebible_references_parse_lines",
   "functions_combine_name",
   "function_dependencies_code",
   "html_parse_find_a_href_starts_with",
   "js_dollar_choice_arguments_names",
   "js_identifiers_to_names",
   "js_identifier_defineds",
   "js_imports",
   "js_imports_declarations",
   "list_map_name",
   "list_map_property",
   "marker_down_choices",
   "messenger_reply",
   "reply",
   "sandbox_2",
   "sandbox_4_a"
  ],
  "list_first": [
   "app_reply_main",
   "each_multiple",
   "each_multiple_async",
   "ebible_references_parse_lines",
   "function_name_to_acronym",
   "function_type_first",
   "js_call_new_code",
   "js_dollar_a",
   "js_marker_name_get",
   "js_parse_statement",
   "js_parse_statement_module",
   "list_first",
   "list_first_second_generic",
   "list_map_first",
   "list_single",
   "messenger_reply",
   "messenger_reply_unread_collect",
   "reply_test",
   "sandbox_4_a"
  ],
  "ebible_index_flat_upload_name": [
   "app_reply_main",
   "ebible_index_flat_upload",
   "ebible_index_flat_upload_name"
  ],
  "ebible_folder_english": [
   "app_reply_main",
   "bible_verses_encouragement_generate",
   "ebible_folder_english",
   "ebible_languages",
   "ebible_references_parse_god_created_man_why",
   "ebible_references_parse_lines",
   "sandbox"
  ],
  "string_starts_with": [
   "app_reply_main",
   "folder_find_starts_with",
   "http",
   "js_imports_declarations",
   "list_any_starts_with",
   "list_filter_starts_with",
   "list_find_starts_with",
   "string_padded_is",
   "string_prefix_without",
   "string_starts_with",
   "string_starts_with_dot",
   "string_starts_with_not",
   "string_starts_with_space"
  ],
  "string_lower_to": [
   "app_reply_main",
   "list_map_lower",
   "string_lower_to"
  ],
  "html_on_keydown": [
   "app_reply_main",
   "html_on_keydown"
  ],
  "string_letters_only": [
   "app_reply_main",
   "string_letters_only"
  ],
  "list_includes": [
   "app_reply_main",
   "functions_names_includes",
   "js_block_child_graph",
   "js_identifier_unique",
   "js_if_blockify_generic",
   "js_let_add",
   "js_node_types_includes",
   "js_types_function_includes",
   "list_add_if_not_includes",
   "list_difference",
   "list_includes",
   "list_includes_assert",
   "list_intersect",
   "list_remove_all",
   "list_remove_if_exists",
   "list_unique",
   "marker_down_choices_lambda",
   "marker_functionize",
   "visit_unique_async"
  ],
  "list_concat": [
   "app_reply_main",
   "js_expand_generic",
   "js_identifier_unique",
   "js_imports_missing",
   "list_concat",
   "list_concat_multiple",
   "prompt_previous",
   "reply"
  ],
  "list_random_item": [
   "app_reply_main",
   "list_random_item"
  ],
  "html_p_text_multiple": [
   "app_reply_main",
   "html_p_text_multiple"
  ],
  "list_empty": [
   "app_reply_main",
   "function_list_generate",
   "function_params_consolidate",
   "list_empty",
   "list_replace_all"
  ],
  "list_join_newline_2": [
   "app_reply_main",
   "list_join_newline_2"
  ],
  "html_text_set": [
   "app_reply_main",
   "html_button",
   "html_clear",
   "html_p_text",
   "html_text_set",
   "html_text_set_if"
  ],
  "clipboard_copy": [
   "app_reply_main",
   "clipboard_copy",
   "ebible_references_parse",
   "function_dependencies_code_copy"
  ],
  "list_map_unordered_async": [
   "app_reply_main",
   "data_files_update",
   "ebible_references_parse_lines",
   "functions_combine_name",
   "function_dependencies_code",
   "js_block_child_graph_unparse",
   "js_call_new_code",
   "list_map_unordered_async",
   "list_to_dictionary_async",
   "marker_down_choices",
   "repos_gitignore_overwrite",
   "repos_paths_map_unordered",
   "sandbox_4_a"
  ],
  "en": [
   "app_reply_main",
   "firebase_storage_download_ebible",
   "js_await_add_inner",
   "list_remove_property",
   "sandbox"
  ],
  "languages": [
   "app_reply_main",
   "ebible_languages",
   "ebible_languages_to_bible_folders",
   "list_remove_property"
  ],
  "books": [
   "app_reply_main",
   "bible_verses_encouragement_generate",
   "ebible_books_to_chapter_codes",
   "ebible_chapter_codes",
   "ebible_index",
   "ebible_references_parse_lines",
   "ebible_version_books",
   "ebible_version_books_upload",
   "sandbox_2",
   "sandbox_4_a"
  ],
  "verses_list": [
   "app_reply_main"
  ],
  "verse_random_reset": [
   "app_reply_main"
  ],
  "copied": [
   "app_reply_main"
  ],
  "languages_chosens": [
   "app_reply_main"
  ],
  "buttons": [
   "app_reply_main"
  ],
  "preview": [
   "app_reply_main"
  ],
  "chosens": [
   "app_reply_main"
  ],
  "typed": [
   "app_reply_main",
   "string_size_less_1",
   "string_take_less_1"
  ],
  "encouragement": [
   "app_reply_main",
   "bible_verses_encouragement"
  ],
  "reference": [
   "app_reply_main",
   "reply"
  ],
  "verses": [
   "app_reply_main",
   "ebible_chapters_each_verses_check",
   "ebible_chapters_each_verses_list",
   "ebible_index",
   "ebible_index_flat",
   "ebible_verse",
   "ebible_verses_upload",
   "sandbox_2"
  ],
  "event": [
   "app_reply_main"
  ],
  "key": [
   "app_reply_main",
   "cache_generic",
   "html_attribute_set",
   "http_firebase",
   "js_property",
   "js_property_generic",
   "js_property_identifier",
   "js_property_parse_expression",
   "marker_screen_add",
   "object_invert",
   "storage_local_get",
   "storage_local_get_context",
   "storage_local_initialize",
   "storage_local_initialize_context",
   "storage_local_key_get",
   "storage_local_set",
   "storage_local_set_context"
  ],
  "buttons_refresh": [
   "app_reply_main"
  ],
  "preview_refresh": [
   "app_reply_main"
  ],
  "component3": [
   "app_reply_main"
  ],
  "component2": [
   "app_reply_main"
  ],
  "item2": [
   "app_reply_main",
   "bible_verses_encouragement_generate",
   "ebible_chapters",
   "list_any_starts_with",
   "list_find_starts_with",
   "sandbox_4_a",
   "string_starts_with_digit"
  ],
  "bible_folder2": [
   "app_reply_main"
  ],
  "language_code": [
   "app_reply_main",
   "ebible_languages"
  ],
  "verses_list_first": [
   "app_reply_main"
  ],
  "verses2": [
   "app_reply_main"
  ],
  "verse": [
   "app_reply_main",
   "ebible_verse",
   "ebible_verses_upload"
  ],
  "chapter_code2": [
   "app_reply_main"
  ],
  "verse_number2": [
   "app_reply_main"
  ],
  "d": [
   "app_reply_main",
   "data_files_update",
   "data_file_update",
   "data_file_update_inner",
   "data_transform",
   "date_iso_to",
   "digits",
   "ebible_chapters",
   "ebible_chapter_classes",
   "ebible_chapter_text",
   "ebible_versions",
   "ebible_version_books_testament",
   "function_aliases_restore",
   "html_parse",
   "html_parse_attr",
   "html_parse_classes_preview",
   "html_parse_descendants_classes",
   "html_parse_find_a_href_starts_with",
   "html_parse_find_list_href_text",
   "html_parse_href",
   "html_parse_href_text",
   "html_parse_href_text_map",
   "html_parse_text",
   "http",
   "js_calls_to_each",
   "string_starts_with_digit"
  ],
  "component4": [
   "app_reply_main"
  ],
  "choices": [
   "app_reply_main",
   "js_dollar",
   "js_dollar_choices",
   "marker_bottom",
   "marker_down_choices",
   "marker_down_choices_lambda",
   "marker_down_generic"
  ],
  "text2": [
   "app_reply_main"
  ],
  "letters": [
   "app_reply_main",
   "function_name_to_acronym",
   "list_join_empty",
   "string_letters_only"
  ],
  "lower": [
   "app_reply_main",
   "string_lower_to"
  ],
  "sw": [
   "app_reply_main",
   "folder_find_starts_with",
   "http",
   "list_any_starts_with",
   "list_filter_starts_with",
   "list_filter_starts_with_not",
   "list_filter_starts_with_not_multiple",
   "list_find_starts_with",
   "string_padded_is",
   "string_starts_with",
   "string_starts_with_not"
  ],
  "includes": [
   "app_reply_main",
   "catch_only_run_async",
   "js_block_child_graph",
   "js_if_blockify_generic",
   "js_let_add",
   "js_node_types_includes",
   "js_types_function_includes",
   "list_includes",
   "list_includes_assert",
   "list_remove_if_exists",
   "marker_down_choices_lambda",
   "string_includes"
  ],
  "condition": [
   "app_reply_main",
   "html_display_none_or_block",
   "html_enable_if",
   "html_style_set_or_remove",
   "html_text_set_if",
   "ternary"
  ],
  "choice": [
   "app_reply_main"
  ],
  "response2": [
   "app_reply_main"
  ],
  "lambda9": [
   "app_reply_main"
  ],
  "item3": [
   "app_reply_main"
  ],
  "list": [
   "app_reply_main",
   "data_file_update_inner",
   "data_identifiers_search",
   "each",
   "each_async",
   "each_index",
   "each_index_async",
   "each_object",
   "each_range",
   "each_range_from",
   "each_range_from_async",
   "each_reverse",
   "ebible_books_to_chapter_codes",
   "ebible_chapters_each_verses",
   "ebible_chapters_each_verses_list",
   "ebible_chapter_codes",
   "ebible_chapter_text",
   "ebible_index_flat",
   "ebible_references_parse",
   "ebible_references_parse_god_created_man_why",
   "ebible_references_parse_lines",
   "ebible_verses",
   "ebible_versions",
   "ebible_versions_download",
   "firebase_deploy_function_destination",
   "functions_combine",
   "functions_combine_test",
   "functions_names_includes",
   "function_acronym_to_names",
   "function_alias_add",
   "function_list_generate",
   "function_type_first",
   "html_parse_descendants_classes",
   "html_parse_find_a_href_starts_with",
   "html_parse_find_list_href_text",
   "html_parse_find_list_to",
   "html_parse_href_text_map",
   "html_p_text_multiple",
   "js_call_insert",
   "js_identifier_defineds",
   "js_marker_insert",
   "js_node_types_includes",
   "js_statement_return_add",
   "js_visit_children_get",
   "keyboard_type_delay",
   "lists_get",
   "list_add",
   "list_adder",
   "list_adder_async",
   "list_adder_generic",
   "list_adder_generic_async",
   "list_adder_multiple",
   "list_adder_multiple_async",
   "list_add_first",
   "list_add_if_not_includes",
   "list_add_multiple",
   "list_all",
   "list_any",
   "list_difference",
   "list_empty",
   "list_empty_is",
   "list_empty_not_is",
   "list_empty_not_is_assert",
   "list_filter",
   "list_filter_ends_with_any",
   "list_filter_ends_with_not_any",
   "list_filter_property",
   "list_filter_starts_with",
   "list_filter_starts_with_any",
   "list_find",
   "list_find_property",
   "list_first",
   "list_first_remaining",
   "list_first_second",
   "list_first_second_generic",
   "list_get",
   "list_includes",
   "list_index_is",
   "list_index_last",
   "list_index_of",
   "list_index_of_delta",
   "list_index_of_delta_outside",
   "list_index_of_last",
   "list_index_of_next",
   "list_index_of_next_outside",
   "list_index_of_previous",
   "list_insert",
   "list_insert_generic",
   "list_intersect",
   "list_is_assert",
   "list_join",
   "list_join_newline",
   "list_join_newline_2",
   "list_join_slash_forward",
   "list_last",
   "list_last_is",
   "list_last_or_null",
   "list_map",
   "list_map_combine",
   "list_map_filter_string_empty_not_is",
   "list_map_index",
   "list_map_name",
   "list_map_path_join",
   "list_map_prefix_any",
   "list_map_prefix_without",
   "list_map_prefix_without_any",
   "list_map_property",
   "list_map_property_to",
   "list_map_unordered_async",
   "list_multiple_is",
   "list_next",
   "list_next_index",
   "list_next_try",
   "list_pop",
   "list_previous",
   "list_range",
   "list_remove",
   "list_remove_all",
   "list_remove_all_multiple",
   "list_remove_at",
   "list_remove_if_exists",
   "list_remove_multiple",
   "list_replace",
   "list_reverse",
   "list_second",
   "list_set",
   "list_single",
   "list_size",
   "list_size_1",
   "list_size_1_assert",
   "list_size_1_assert_message",
   "list_skip",
   "list_skip_1",
   "list_slice",
   "list_slice_count",
   "list_sort_number_mapper",
   "list_sort_string",
   "list_sort_string_size",
   "list_splice",
   "list_squash",
   "list_swap",
   "list_take",
   "list_to_dictionary",
   "list_to_dictionary_async",
   "list_unique",
   "list_wait",
   "marker_assign_replace",
   "marker_call",
   "marker_call_replace_generic",
   "marker_functionize",
   "marker_next",
   "marker_next_await",
   "marker_next_delete",
   "marker_param_add",
   "object_invert",
   "object_merge_generic",
   "object_properties_delete_all",
   "reply",
   "sandbox",
   "sandbox_2",
   "sandbox_4_a",
   "search_generic",
   "string_list_to",
   "string_split_newline",
   "reduce"
  ],
  "book_code": [
   "app_reply_main",
   "ebible_books_to_chapter_codes",
   "ebible_chapters",
   "ebible_chapter_code_to_book",
   "ebible_index",
   "ebible_references_parse_lines",
   "ebible_version_books_testament",
   "ebible_version_download_path_combine",
   "html_parse_find_a_href_starts_with",
   "list_filter_starts_with_not",
   "string_starts_with_not"
  ],
  "chapter_name": [
   "app_reply_main",
   "ebible_chapter_code_to_name",
   "ebible_index",
   "ebible_references_parse_lines"
  ],
  "book": [
   "app_reply_main",
   "ebible_books_to_chapter_codes",
   "ebible_index",
   "ebible_references_parse_lines"
  ],
  "book_name": [
   "app_reply_main",
   "ebible_references_parse_lines"
  ],
  "reference2": [
   "app_reply_main"
  ],
  "squashed": [
   "app_reply_main",
   "list_squash",
   "functions_names",
   "functions_paths",
   "repos_paths_map_unordered_combine_squash",
   "functions_names_to_paths"
  ],
  "verse_texts": [
   "app_reply_main"
  ],
  "verse_text": [
   "app_reply_main"
  ],
  "other": [
   "app_reply_main",
   "js_declaration_asyncify",
   "list_difference",
   "list_intersect",
   "marker_functionize",
   "prompt_previous"
  ],
  "ne": [
   "app_reply_main",
   "ebible_verses",
   "equal_not",
   "js_dollar",
   "list_empty_not_is",
   "list_empty_not_is_assert",
   "marker_top",
   "string_empty_not_is",
   "string_empty_not_is_assert"
  ],
  "concated": [
   "app_reply_main",
   "list_concat",
   "reply"
  ],
  "joined": [
   "app_reply_main",
   "data_backup",
   "ebible_chapters",
   "ebible_chapter_classes",
   "ebible_chapter_text",
   "ebible_firebase_upload_path",
   "ebible_references_parse",
   "ebible_verses_upload_name",
   "ebible_verse_new",
   "ebible_version_books_testament",
   "ebible_version_download_path_combine",
   "file_name_json_folder",
   "firebase_storage_download_path",
   "firebase_storage_function_run",
   "folder_user_combine",
   "functions_path",
   "function_import",
   "git_push_folder",
   "html_name_to_path_dev",
   "http_firebase_file_path",
   "http_local_file_name",
   "js_code_call_args",
   "list_join",
   "list_join_empty",
   "list_join_newline",
   "list_join_newline_2",
   "list_join_slash_forward",
   "list_join_space",
   "list_map_path_join",
   "messenger_reply",
   "path_join",
   "path_repo_combine",
   "sandbox_2",
   "watch",
   "functions_names",
   "repos_paths_map_unordered_combine",
   "function_exists_inner",
   "function_name_to_path_search",
   "function_name_folder_to_path",
   "functions_names_to_paths"
  ],
  "string_may_the_lord": [
   "app_reply_pray",
   "string_lord_bless",
   "string_may_the_lord"
  ],
  "pray_title": [
   "app_reply_pray"
  ],
  "pray_request": [
   "app_reply_pray"
  ],
  "v2": [
   "app_reply_pray",
   "data_set",
   "ebible_folder_urdu",
   "ebible_references_parse_god_created_man_why",
   "emoji_church",
   "emoji_family",
   "emoji_handshake",
   "emoji_hands_raising",
   "emoji_heart_fire",
   "emoji_phone",
   "emoji_question",
   "emoji_rainbow",
   "emoji_rock",
   "emoji_voice",
   "folder_read_async",
   "function_aliases_restore",
   "function_dependencies",
   "function_identifier_replace",
   "http",
   "import_install",
   "js_await_add",
   "js_code_or",
   "js_identifier_unique",
   "js_keyword_await",
   "js_marker_is",
   "js_marker_named",
   "js_marker_name_get",
   "js_node_atomize",
   "js_operator_or",
   "js_stack_list_block_is",
   "js_statement_call_get",
   "js_unparse",
   "list_all",
   "marker_bottom",
   "marker_screen_add",
   "messenger_reply_messages",
   "puppeteer_hrefs",
   "puppeteer_matches",
   "roman_to_integer",
   "sandbox_2",
   "search_generic",
   "string_list_to",
   "string_the_servant_of_god",
   "undefined_not_is_assert"
  ],
  "error": [
   "assert",
   "assert_file_exists_not",
   "assert_message",
   "assert_not",
   "error",
   "error_json",
   "file_exists",
   "firebase_storage_exists",
   "function_alias_add",
   "function_alias_change",
   "function_alias_delete",
   "function_alias_replace",
   "function_name_to_path",
   "http",
   "js_declaration_params_names_node",
   "js_identifier_defineds",
   "js_marker_name_get",
   "js_unparse",
   "js_visit",
   "list_size_1_assert_message",
   "string_prefix_without",
   "string_suffix_without",
   "todo",
   "undefined_not_is_assert_lambda",
   "visit_filter_recursive",
   "visit_filter_recursive_async"
  ],
  "assert": [
   "assert",
   "equal_assert",
   "js_dollar_s",
   "js_node_type_is_assert",
   "list_concat",
   "list_empty_not_is_assert",
   "list_filter",
   "list_get",
   "list_includes_assert",
   "list_insert_generic",
   "marker_functionize",
   "messenger_reply_playwright",
   "null_not_is_assert",
   "object_property_exists_assert",
   "object_property_exists_not_assert",
   "string_empty_not_is_assert",
   "string_is_assert",
   "string_is_assert_message"
  ],
  "equal_assert": [
   "assert_arguments",
   "equal_assert"
  ],
  "assert_arguments": [
   "assert_arguments",
   "function_params_new",
   "js_assert_arguments_args",
   "js_dollar_aa",
   "path_join",
   "sandbox_5_a",
   "task_new"
  ],
  "args": [
   "assert_arguments",
   "command_line_node_g",
   "function_params_new",
   "function_run",
   "function_run_git",
   "function_run_line",
   "function_run_line_git",
   "function_run_line_parse",
   "function_run_log",
   "git_acp_call",
   "git_acp_call_folder",
   "js_assert_arguments_args",
   "js_code_call",
   "js_code_call_args",
   "js_code_declaration",
   "js_code_declaration_args",
   "js_visit_calls_named",
   "list_join_comma_space",
   "list_join_space",
   "list_replace_all",
   "watch"
  ],
  "count": [
   "assert_arguments",
   "each_range",
   "each_range_async",
   "ebible_chapter_code_to_book",
   "ebible_chapter_code_to_name",
   "js_assign_combine",
   "js_dollar_a",
   "js_dollar_a_generic",
   "js_dollar_s",
   "js_identifiers_named_count",
   "list_slice_count",
   "list_take",
   "marker_next_delete_multiple",
   "messenger_reply_playwright",
   "number_pad",
   "range",
   "range_from",
   "retry",
   "string_take"
  ],
  "length": [
   "assert_arguments",
   "list_size",
   "path_join",
   "roman_to_integer",
   "string_size"
  ],
  "file_exists": [
   "assert_file_exists_not",
   "data_all",
   "file_delete_if_exists",
   "file_exists",
   "http_local",
   "function_exists_inner",
   "function_name_to_path_search"
  ],
  "assert_file_exists_not": [
   "assert_file_exists_not",
   "file_copy",
   "file_write_generic",
   "html_new",
   "js_outside_move"
  ],
  "file_path_new": [
   "assert_file_exists_not",
   "file_copy",
   "file_copy_overwrite"
  ],
  "assert_message": [
   "assert_json",
   "assert_message",
   "js_identifiers_to_names",
   "list_get",
   "string_includes",
   "string_is_assert_message"
  ],
  "assert_json": [
   "assert_json",
   "function_current_set",
   "http",
   "integer_is_assert",
   "js_node_atomize",
   "list_empty_is_assert",
   "list_get",
   "list_is_assert"
  ],
  "o": [
   "assert_json",
   "ebible_version_books",
   "error_json",
   "firebase_storage_download_property",
   "function_aliases_restore",
   "js_unparse",
   "list_map_property_to",
   "sandbox_2",
   "string_includes",
   "string_is_assert_json"
  ],
  "message": [
   "assert_json",
   "assert_message",
   "catch_log_async",
   "catch_only_run_async",
   "error",
   "error_json",
   "function_transform_marker_specified",
   "git_acp",
   "git_acp_call_folder",
   "git_acp_folder",
   "git_acp_timestamp",
   "git_commit",
   "git_commit_folder",
   "js_declaration_params_names_node",
   "js_node_atomize",
   "keyboard_type_delay",
   "list_size_1_assert",
   "list_size_1_assert_message",
   "log",
   "log_json",
   "log_keep",
   "messenger_reply",
   "messenger_reply_messages",
   "retry",
   "string_is_assert_json",
   "string_is_assert_message",
   "string_trim",
   "undefined_not_is_assert_lambda"
  ],
  "assert_not": [
   "assert_not",
   "function_identifier_replace",
   "function_rename_suffix_add",
   "git_push_schedule_command"
  ],
  "function_list_generate": [
   "bible_verses_encouragement_generate",
   "function_list_generate"
  ],
  "list_filter_starts_with_any": [
   "bible_verses_encouragement_generate",
   "ebible_references_parse_lines",
   "list_filter_starts_with_any",
   "sandbox_4_a"
  ],
  "string_ends_with_space": [
   "bible_verses_encouragement_generate",
   "string_ends_with_space"
  ],
  "string_trim_right": [
   "bible_verses_encouragement_generate",
   "string_trim_right"
  ],
  "string_skip_while": [
   "bible_verses_encouragement_generate",
   "string_skip_while"
  ],
  "whitespace_normalize": [
   "bible_verses_encouragement_generate",
   "ebible_chapter_text",
   "ebible_verses",
   "list_map_whitespace_normalize",
   "reply",
   "whitespace_normalize"
  ],
  "string_starts_with_space": [
   "bible_verses_encouragement_generate",
   "string_starts_with_space"
  ],
  "string_starts_with_dot": [
   "bible_verses_encouragement_generate",
   "string_starts_with_dot"
  ],
  "string_starts_with_digit": [
   "bible_verses_encouragement_generate",
   "string_starts_with_digit"
  ],
  "string_split_newline": [
   "bible_verses_encouragement_generate",
   "ebible_references_parse",
   "messenger_reply",
   "sandbox_4_a",
   "string_split_newline"
  ],
  "file_read": [
   "bible_verses_encouragement_generate",
   "ebible_references_parse",
   "file_js_parse",
   "file_open",
   "file_read",
   "file_read_json",
   "function_format",
   "function_read",
   "html_parse_read",
   "sandbox_4_a"
  ],
  "folder_user_docs_path": [
   "bible_verses_encouragement_generate",
   "ebible_references_parse_god_created_man_why",
   "folder_user_docs_path",
   "messenger_reply_messages_transform",
   "messenger_reply_messages_urls_transform",
   "messenger_reply_playwright",
   "sandbox_4_a"
  ],
  "bible_verses_encouragement_generate": [
   "bible_verses_encouragement_generate"
  ],
  "file_path": [
   "bible_verses_encouragement_generate",
   "data_all",
   "data_get",
   "data_save",
   "ebible_references_parse",
   "ebible_references_parse_god_created_man_why",
   "ebible_versions_download",
   "ebible_version_books_testament",
   "ebible_version_download",
   "ebible_version_download_path_combine",
   "file_delete",
   "file_delete_if_exists",
   "file_exists",
   "file_overwrite",
   "file_overwrite_buffer",
   "file_overwrite_json",
   "file_parent_exists_ensure",
   "file_read",
   "file_read_buffer",
   "file_read_json",
   "file_write_json",
   "firebase_service_account",
   "function_alias_add_generic",
   "html_name_to_path",
   "html_name_to_path_dev",
   "html_new",
   "html_overwrite",
   "html_parse_read",
   "html_update_dev",
   "html_update_generic",
   "html_update_public",
   "path_name",
   "sandbox_4_a",
   "unzip"
  ],
  "contents": [
   "bible_verses_encouragement_generate",
   "data_all",
   "ebible_references_parse",
   "file_overwrite",
   "file_overwrite_buffer",
   "file_read",
   "file_write",
   "file_write_buffer",
   "file_write_generic",
   "function_new_declaration",
   "html_overwrite",
   "html_parse",
   "html_parse_read",
   "sandbox_2",
   "sandbox_4_a"
  ],
  "fns": [
   "bible_verses_encouragement_generate",
   "function_aliases_restore"
  ],
  "fn": [
   "bible_verses_encouragement_generate",
   "bind",
   "bind_property",
   "chalk_color",
   "function_run",
   "global_function_async",
   "global_function_property_async",
   "html_enable_if",
   "http_local_file_name",
   "js_dollar",
   "js_dollar_choices",
   "js_dollar_ib",
   "js_dollar_ie",
   "js_dollar_ien",
   "js_dollar_ien_generic",
   "js_dollar_if_call",
   "js_dollar_ine",
   "keyboard_type_delay",
   "list_adder",
   "list_adder_generic",
   "list_adder_generic_async",
   "list_adder_multiple",
   "list_adder_multiple_async",
   "list_map_squash",
   "list_squash",
   "local_function_path",
   "marker_above",
   "marker_below",
   "messenger_reply",
   "messenger_reply_playwright",
   "reply",
   "reply_on_match",
   "reply_sequence"
  ],
  "bible_folder": [
   "bible_verses_encouragement_generate",
   "ebible_books_to_chapter_codes",
   "ebible_chapters",
   "ebible_chapters_each_verses",
   "ebible_chapters_each_verses_check",
   "ebible_chapters_each_verses_check_with",
   "ebible_chapters_each_verses_list",
   "ebible_chapter_classes",
   "ebible_chapter_codes",
   "ebible_chapter_text",
   "ebible_firebase_upload",
   "ebible_firebase_upload_path",
   "ebible_index",
   "ebible_index_flat",
   "ebible_index_flat_upload",
   "ebible_index_upload",
   "ebible_languages",
   "ebible_languages_to_bible_folders",
   "ebible_references_parse_lines",
   "ebible_verse",
   "ebible_verses",
   "ebible_verses_upload",
   "ebible_verse_download",
   "ebible_version_books",
   "ebible_version_books_testament",
   "ebible_version_books_testament_apocrypha",
   "ebible_version_books_testament_new",
   "ebible_version_books_testament_old",
   "ebible_version_books_upload",
   "ebible_version_download",
   "ebible_version_download_path",
   "ebible_version_download_path_combine",
   "sandbox_2"
  ],
  "mapped2": [
   "bible_verses_encouragement_generate",
   "ebible_references_parse_lines",
   "ebible_version_books_testament",
   "function_dependencies_code",
   "html_parse_find_a_href_starts_with",
   "list_map_path_join",
   "list_map_split_comma",
   "list_map_split_space",
   "list_map_whitespace_normalize",
   "messenger_reply",
   "repos_gitignore_overwrite",
   "sandbox_4_a"
  ],
  "verse_references": [
   "bible_verses_encouragement_generate",
   "ebible_references_parse_lines",
   "list_filter_starts_with_any",
   "sandbox_4_a"
  ],
  "bind": [
   "bind",
   "bind_property"
  ],
  "bind_property": [
   "bind_property",
   "messenger_reply",
   "messenger_reply_playwright"
  ],
  "object": [
   "bind_property",
   "each_object",
   "ebible_firebase_upload",
   "file_overwrite_json",
   "file_write_json",
   "firebase_upload_object",
   "json_format_to",
   "json_to",
   "object_invert",
   "object_property_delete",
   "object_property_exists",
   "object_property_exists_assert",
   "object_property_exists_not",
   "object_property_exists_not_assert",
   "object_property_get",
   "object_property_initialize",
   "object_property_lambda",
   "object_property_lambda_async",
   "object_property_set",
   "object_property_set_exists_not",
   "undefined_not_is_assert_lambda"
  ],
  "property_name": [
   "bind_property",
   "data_boolean_set",
   "data_copy",
   "data_file_update_inner",
   "data_get",
   "data_marker_current_get",
   "data_partition",
   "data_property_get",
   "data_set",
   "data_terminal_get",
   "data_terminal_set",
   "data_transform",
   "data_value",
   "data_watch_get",
   "data_watch_set",
   "file_json_isolate",
   "file_json_property_delete",
   "firebase_storage_download_property",
   "function_current_get",
   "function_run_prompt",
   "git_push_folder",
   "global_function_property_async",
   "js_arrow_blockify",
   "js_dollar_g",
   "js_function_last_asyncify",
   "js_identifier_unique_ast",
   "js_if_blockify",
   "js_if_blockify_generic",
   "list_filter_property",
   "list_find_property",
   "list_first_remaining",
   "list_first_second",
   "list_first_second_generic",
   "list_map_name",
   "list_map_property",
   "list_remove_property",
   "messenger_reply",
   "messenger_reply_unreplied",
   "object_merge_generic",
   "object_property_delete",
   "object_property_equals",
   "object_property_equals_lambda",
   "object_property_exists",
   "object_property_exists_assert",
   "object_property_exists_not",
   "object_property_exists_not_assert",
   "object_property_from",
   "object_property_get",
   "object_property_initialize",
   "object_property_lambda",
   "object_property_lambda_async",
   "object_property_set",
   "object_property_set_exists_not"
  ],
  "browser_is": [
   "browser_is",
   "buffer_string_to",
   "clipboard_copy",
   "ebible_verse",
   "ebible_version_books",
   "firebase_storage_download",
   "http",
   "js_dollar_ib",
   "string_base64_to"
  ],
  "window": [
   "browser_is"
  ],
  "document": [
   "browser_is",
   "html_document_body",
   "html_document_head",
   "html_document_root",
   "html_element"
  ],
  "buffer_string_to": [
   "buffer_string_to",
   "firebase_storage_download_json",
   "firebase_storage_download_property",
   "http_json",
   "http_local_text"
  ],
  "buffer": [
   "buffer_string_to",
   "ebible_version_download",
   "firebase_storage_download",
   "firebase_storage_download_json",
   "firebase_storage_download_property",
   "firebase_upload_buffer",
   "firebase_upload_generic",
   "firebase_upload_string",
   "http",
   "http_json",
   "http_local_text",
   "unzip"
  ],
  "s": [
   "buffer_string_to",
   "data_identifiers_search",
   "ebible_chapter_code_to_name",
   "firebase_storage_download_json",
   "function_aliases_restore",
   "html_loading",
   "html_style_assign",
   "js_dollar_s",
   "js_string",
   "marker_rename",
   "messenger_reply",
   "messenger_reply_wait",
   "path_join",
   "range_from",
   "string_base64_to",
   "string_empty_is",
   "string_ends_with",
   "string_ends_with_space",
   "string_list_to",
   "string_lower_to",
   "string_pad",
   "string_padded_is",
   "string_prefix_without",
   "string_replace",
   "string_size",
   "string_skip",
   "string_skip_while",
   "string_slice",
   "string_split",
   "string_split_empty",
   "string_split_semicolon",
   "string_split_semicolon_space",
   "string_split_space",
   "string_starts_with",
   "string_starts_with_dot",
   "string_starts_with_space",
   "string_suffix_without",
   "string_take",
   "string_to",
   "string_trim_right",
   "string_upper_to",
   "trinity_green"
  ],
  "ArrayBuffer": [
   "buffer_string_to"
  ],
  "TextDecoder": [
   "buffer_string_to"
  ],
  "decode": [
   "buffer_string_to"
  ],
  "Uint8Array": [
   "buffer_string_to"
  ],
  "Error": [
   "buffer_string_to",
   "error",
   "function_import",
   "function_run_line_git"
  ],
  "toString": [
   "buffer_string_to",
   "string_base64_to",
   "string_to"
  ],
  "cache_generic": [
   "cache_generic",
   "http_firebase",
   "http_local"
  ],
  "key_get": [
   "cache_generic",
   "http_firebase",
   "http_local"
  ],
  "url": [
   "cache_generic",
   "ebible_versions",
   "ebible_version_download",
   "firebase_storage_download",
   "firebase_storage_url",
   "firebase_storage_url_project",
   "firebase_upload_generic",
   "function_import",
   "git_history_delete",
   "git_repo_clone",
   "http",
   "http_firebase",
   "http_firebase_file_name",
   "http_firebase_file_path",
   "http_json",
   "http_local",
   "http_local_file_name",
   "http_local_text",
   "messenger_reply_messages",
   "messenger_reply_messages_urls_add",
   "messenger_reply_messages_urls_add_multiple",
   "messenger_reply_unread_collect",
   "server"
  ],
  "cached_exists": [
   "cache_generic",
   "http_firebase",
   "http_local"
  ],
  "cached_get": [
   "cache_generic",
   "http_firebase",
   "http_local"
  ],
  "cache_save": [
   "cache_generic",
   "http_firebase",
   "http_local"
  ],
  "e": [
   "cache_generic",
   "catch_call",
   "catch_ignore",
   "catch_ignore_async",
   "catch_log",
   "catch_log_async",
   "catch_only_run_async",
   "data_file_update_inner",
   "firebase_storage_exists",
   "function_aliases_restore",
   "git_rebase",
   "html_element",
   "html_parse_classes_preview",
   "js_parse",
   "js_unparse",
   "list_empty_is",
   "list_empty_is_assert",
   "list_index_is",
   "list_join_empty",
   "messenger_reply_messages",
   "messenger_reply_unread_collect",
   "promise_wrap",
   "retry",
   "string_empty_is",
   "throws_not_async"
  ],
  "result": [
   "cache_generic",
   "catch_call",
   "command_line_node_g",
   "data_identifiers_search",
   "data_prompts",
   "ebible_chapter_text",
   "ebible_references_parse_lines",
   "ebible_verse",
   "file_temp",
   "folder_current_join",
   "folder_public_combine",
   "folder_read_files",
   "folder_user_combine",
   "functions_combine_name",
   "functions_search",
   "functions_search_open",
   "function_aliases_search",
   "function_new_js_inner",
   "function_params_consolidate",
   "function_params_new",
   "function_run",
   "function_run_git",
   "function_run_log",
   "function_transform_result",
   "git_push_schedule_command",
   "git_repo_rename_normalize",
   "html_loading",
   "html_parse",
   "html_parse_find",
   "html_parse_find_remove",
   "http",
   "http_firebase",
   "http_local",
   "js_code_call",
   "js_code_call_statement",
   "js_code_parenthesis_open_close",
   "js_declaration_param_named",
   "js_dollar_choice_arguments",
   "js_function_last_asyncify",
   "js_identifiers",
   "js_marker_named_ast",
   "js_node_types",
   "js_stack_filtered_multiple",
   "list_first_remaining",
   "list_first_second",
   "list_first_second_generic",
   "list_is_assert",
   "list_join_comma",
   "list_last_or_null",
   "list_map_name",
   "list_map_prefix_without",
   "list_map_prefix_without_any",
   "list_range",
   "list_slice_end",
   "marker_functionize",
   "messenger_reply_unreplied",
   "object_property_exists_assert",
   "object_property_exists_not",
   "object_property_exists_not_assert",
   "retry",
   "search_generic",
   "server",
   "tasks_run",
   "task_new",
   "ternary",
   "repos_paths_map_unordered",
   "functions_names",
   "repos_paths_map_unordered_combine",
   "function_exists_inner",
   "function_name_to_path_unalias",
   "function_exists_strict",
   "function_name_to_path_search",
   "functions_paths",
   "repos_paths_map_unordered_combine_squash"
  ],
  "catch_call": [
   "catch_call",
   "http"
  ],
  "reject": [
   "catch_call",
   "http",
   "promise_wrap"
  ],
  "i": [
   "catch_call",
   "counter",
   "ebible_chapter_code_to_name",
   "function_aliases_restore",
   "function_identifier_replace",
   "integer_to",
   "js_expand_generic",
   "js_identifiers_named",
   "js_identifier_defineds",
   "js_imports_paths_fix",
   "js_imports_unused",
   "list_intersect_empty_is_assert",
   "marker_above_generic",
   "marker_down",
   "marker_index",
   "marker_up",
   "range",
   "roman_to_integer"
  ],
  "inner": [
   "catch_call",
   "data_backup",
   "data_path"
  ],
  "arguments": [
   "catch_call",
   "functions_combine",
   "function_params_new",
   "js_expand_generic",
   "js_marker_name_get",
   "marker_call_replace_generic",
   "marker_rename",
   "path_join",
   "sandbox_5_a",
   "task_new"
  ],
  "catch_ignore": [
   "catch_ignore"
  ],
  "catch_ignore_async": [
   "catch_ignore_async",
   "ebible_versions_download"
  ],
  "log_keep": [
   "catch_log",
   "catch_log_async",
   "command_line_log",
   "command_line_node_g",
   "ebible_chapters_each_verses_list",
   "exit",
   "file_open",
   "firebase_upload_generic",
   "function_run_log",
   "git_push_folder",
   "git_rebase",
   "js_parse",
   "log",
   "log_error",
   "log_keep",
   "prompt_previous",
   "retry",
   "server"
  ],
  "catch_log": [
   "catch_log"
  ],
  "identity": [
   "catch_log_async",
   "identity",
   "marker_above"
  ],
  "catch_log_async": [
   "catch_log_async",
   "git_push_folder",
   "watch"
  ],
  "message_get": [
   "catch_log_async"
  ],
  "noop": [
   "catch_only_async",
   "function_transform_marker_empty",
   "js_expand_generic",
   "js_return_atomize",
   "marker",
   "noop"
  ],
  "catch_only_run_async": [
   "catch_only_async",
   "catch_only_run_async",
   "retry_on_error"
  ],
  "catch_only_async": [
   "catch_only_async",
   "git_commit_folder"
  ],
  "message_fragment": [
   "catch_only_async",
   "catch_only_run_async"
  ],
  "on_error": [
   "catch_only_run_async"
  ],
  "json": [
   "catch_only_run_async",
   "file_overwrite_json",
   "file_read_json",
   "file_write_json",
   "firebase_storage_download_property",
   "json_from",
   "storage_local_get"
  ],
  "a2": [
   "catch_only_run_async",
   "js_imports_declarations",
   "js_marker_name_get",
   "js_stack_list_block_is",
   "js_unparse"
  ],
  "import_install": [
   "chalk_color",
   "html_parse",
   "import_install",
   "messenger_reply_login",
   "messenger_reply_playwright",
   "unzip",
   "uuid",
   "watch"
  ],
  "chalk_color": [
   "chalk_color",
   "chalk_green",
   "chalk_red"
  ],
  "color": [
   "chalk_color",
   "chalk_green",
   "chalk_red"
  ],
  "prompt": [
   "chalk_color",
   "chalk_green",
   "chalk_red",
   "command_line_read",
   "function_run_prompt",
   "log_error"
  ],
  "chalk": [
   "chalk_color"
  ],
  "default": [
   "chalk_color",
   "clipboard_copy",
   "firebase_admin_get",
   "unzip",
   "watch"
  ],
  "colored": [
   "chalk_color",
   "chalk_red",
   "log_error"
  ],
  "chalk_green": [
   "chalk_green",
   "function_run_prompt",
   "trinity_green"
  ],
  "chalk_red": [
   "chalk_red",
   "log_error"
  ],
  "navigator": [
   "clipboard_copy"
  ],
  "clipboard": [
   "clipboard_copy"
  ],
  "writeText": [
   "clipboard_copy"
  ],
  "write": [
   "clipboard_copy"
  ],
  "command_line_generic": [
   "command_line",
   "command_line_cmd",
   "command_line_generic"
  ],
  "command_line": [
   "command_line",
   "command_line_git_folder",
   "command_line_log",
   "command_line_node_g",
   "command_line_schtasks",
   "file_open_editor",
   "firebase_deploy",
   "git_filter_repo_install",
   "git_repo_rename",
   "npm_install",
   "python_install",
   "schtasks_query"
  ],
  "command": [
   "command_line",
   "command_line_cmd",
   "command_line_generic",
   "command_line_log",
   "command_line_schtasks",
   "git_publish_initial",
   "git_push_schedule",
   "git_push_schedule_command",
   "messenger_reply_playwright",
   "retry_on_error",
   "schtasks_query"
  ],
  "extra": [
   "command_line",
   "command_line_generic",
   "ebible_chapter_text",
   "list_empty_is_assert"
  ],
  "stdout": [
   "command_line",
   "command_line_generic",
   "command_line_log",
   "command_line_node_g",
   "command_line_read",
   "command_line_schtasks",
   "firebase_deploy",
   "git_history_delete",
   "git_push_schedule",
   "git_repo_rename",
   "git_repo_rename_normalize",
   "retry_on_error",
   "sandbox_2"
  ],
  "command_line_cmd": [
   "command_line_cmd",
   "sandbox_2"
  ],
  "cmd": [
   "command_line_cmd"
  ],
  "v3": [
   "command_line_cmd",
   "http",
   "js_marker_named",
   "js_marker_name_get",
   "js_stack_list_block_is",
   "js_statement_call_get",
   "messenger_reply_messages",
   "puppeteer_hrefs",
   "roman_to_integer"
  ],
  "exec": [
   "command_line_generic"
  ],
  "promisify": [
   "command_line_generic"
  ],
  "execAsync": [
   "command_line_generic"
  ],
  "options": [
   "command_line_generic"
  ],
  "encoding": [
   "command_line_generic"
  ],
  "command_line_git_folder": [
   "command_line_git",
   "command_line_git_folder",
   "git_acp_folder",
   "git_commit_folder",
   "git_publish_initial",
   "git_push_folder"
  ],
  "command_line_git": [
   "command_line_git",
   "git_history_delete",
   "git_rebase",
   "git_repo_clone"
  ],
  "command_git": [
   "command_line_git",
   "command_line_git_folder",
   "git_push_folder"
  ],
  "folder": [
   "command_line_git",
   "command_line_git_folder",
   "data_path_generic",
   "file_name_json_folder",
   "firebase_storage_download_path",
   "folder_user",
   "folder_user_combine",
   "function_run_git",
   "git_acp",
   "git_acp_call",
   "git_acp_call_folder",
   "git_acp_folder",
   "git_commit",
   "git_commit_folder",
   "git_publish_initial",
   "git_push",
   "git_push_folder",
   "repos_paths_map_unordered",
   "repo_acronym_to_path",
   "sandbox_2",
   "repos_paths_map_unordered_combine",
   "function_name_to_path",
   "functions_paths",
   "function_name_folder_to_path",
   "functions_names_to_paths"
  ],
  "command_line_git_prefix": [
   "command_line_git_folder",
   "command_line_git_prefix",
   "git_push_schedule_command"
  ],
  "command_line_log": [
   "command_line_log",
   "retry_on_error"
  ],
  "command_line_node_g": [
   "command_line_node_g",
   "watch"
  ],
  "readline": [
   "command_line_read"
  ],
  "command_line_read": [
   "command_line_read",
   "command_line_read_empty",
   "function_run_prompt"
  ],
  "answer": [
   "command_line_read",
   "command_line_read_empty",
   "messenger_reply"
  ],
  "Promise": [
   "command_line_read",
   "list_wait",
   "promise_wrap",
   "sleep"
  ],
  "resolve": [
   "command_line_read",
   "http",
   "path_resolve",
   "promise_wrap",
   "sleep"
  ],
  "rl": [
   "command_line_read"
  ],
  "createInterface": [
   "command_line_read"
  ],
  "input": [
   "command_line_read",
   "integer_to",
   "list_map_lower",
   "marker_call_atomize",
   "marker_call_replace",
   "marker_call_replace_generic",
   "messenger_reply_playwright",
   "reply",
   "reply_test",
   "roman_to_integer",
   "string_suffix_change",
   "string_to"
  ],
  "process": [
   "command_line_read",
   "exit",
   "git_history_delete"
  ],
  "stdin": [
   "command_line_read"
  ],
  "close": [
   "command_line_read",
   "messenger_reply_login",
   "messenger_reply_playwright",
   "messenger_reply_puppeteer"
  ],
  "question": [
   "command_line_read"
  ],
  "command_line_read_empty": [
   "command_line_read_empty",
   "messenger_reply",
   "messenger_reply_login",
   "messenger_reply_playwright"
  ],
  "command_line_schtasks": [
   "command_line_schtasks",
   "git_push_schedule",
   "schtasks_query"
  ],
  "prefixed": [
   "command_line_schtasks",
   "marker_screen_add"
  ],
  "counter": [
   "counter",
   "js_identifiers_named_count"
  ],
  "lambda$c": [
   "counter"
  ],
  "c": [
   "counter",
   "ebible_languages_to_bible_folders",
   "function_aliases_restore",
   "html_parse_classes_preview",
   "html_parse_descendants_classes",
   "js_calls_to_each",
   "js_dollar",
   "js_identifiers_named_count",
   "messenger_reply_messages",
   "sandbox_2",
   "visit_filter_recursive",
   "visit_filter_recursive_async"
  ],
  "css_class_prefix_combine": [
   "css_class_prefix_combine",
   "ebible_chapter_text"
  ],
  "data_path_generic": [
   "data_aliases_path",
   "data_backup",
   "data_copy",
   "data_path",
   "data_path_generic",
   "data_prompts_path",
   "path_repo_about"
  ],
  "data_aliases_path": [
   "data_aliases_path",
   "function_aliases_restore",
   "function_alias_add_generic",
   "function_alias_rename"
  ],
  "f_path": [
   "data_aliases_path",
   "data_file_update",
   "data_file_update_inner",
   "data_path",
   "data_path_generic",
   "data_prompts_path",
   "file_json_isolate",
   "file_json_property_delete",
   "file_json_transform",
   "file_js_parse",
   "file_js_unparse",
   "file_name_json_folder",
   "file_open",
   "file_write",
   "file_write_buffer",
   "file_write_generic",
   "function_auto_path",
   "function_copy",
   "function_delete",
   "function_exists_inner",
   "function_format",
   "function_import",
   "function_new_declaration",
   "function_open",
   "function_open_editor",
   "function_parse",
   "function_parse_strict",
   "function_path_declaration_unparse",
   "function_path_to_name",
   "function_read",
   "git_history_delete",
   "html_update_generic",
   "js_outside_move",
   "path_repo_about",
   "path_repo_combine",
   "repo_path_combine",
   "user_repo_get",
   "user_repo_path",
   "user_repo_set",
   "function_name_to_path_search"
  ],
  "file_write": [
   "data_all",
   "file_write",
   "file_write_json",
   "function_new_declaration",
   "sandbox_2"
  ],
  "file_read_json": [
   "data_all",
   "file_json_transform",
   "file_read_json",
   "firebase_service_account",
   "messenger_reply_playwright"
  ],
  "json_format_to": [
   "data_all",
   "error_json",
   "file_overwrite_json",
   "file_write_json",
   "function_run_prompt",
   "json_format_to",
   "js_declaration_params_names_node"
  ],
  "data_all": [
   "data_all",
   "data_files_update",
   "data_file_update",
   "data_get",
   "data_value"
  ],
  "exists": [
   "data_all",
   "file_exists",
   "firebase_storage_exists",
   "function_alias_add",
   "function_alias_add_generic",
   "function_alias_change",
   "function_alias_delete",
   "function_alias_replace",
   "function_current_set",
   "function_delete_if_exists",
   "function_exists_inner",
   "function_list_generate",
   "function_name_unalias",
   "function_params_new",
   "git_push_schedule_check",
   "git_push_schedule_command",
   "js_node_atomize",
   "list_add_if_not_includes",
   "object_property_exists",
   "object_property_initialize",
   "object_property_lambda",
   "object_property_lambda_async",
   "function_name_to_path_search"
  ],
  "data": [
   "data_all",
   "data_files_update",
   "data_file_update_inner",
   "data_get",
   "data_property_get",
   "data_save",
   "data_transform",
   "data_value",
   "file_json_isolate",
   "file_json_property_delete",
   "file_json_transform",
   "file_read_json",
   "function_alias_add_generic",
   "messenger_reply_messages_transform",
   "messenger_reply_messages_urls_get",
   "messenger_reply_messages_urls_transform",
   "messenger_reply_playwright",
   "object_properties_delete"
  ],
  "null_not_is_assert": [
   "data_app_current_get",
   "null_not_is_assert"
  ],
  "data_property_get": [
   "data_app_current_get",
   "data_functions_get",
   "data_identifiers_get",
   "data_marker_current_get",
   "data_property_get",
   "data_terminal_get",
   "data_watch_get",
   "function_current_get",
   "function_run_prompt",
   "git_push_folder"
  ],
  "user_repo_path": [
   "data_app_current_get",
   "data_marker_current_get",
   "function_current_get",
   "function_current_set",
   "function_open_app",
   "git_push_folder",
   "user_repo_get",
   "user_repo_path",
   "user_repo_set"
  ],
  "data_app_current_get": [
   "data_app_current_get",
   "firebase_deploy_function_app_current",
   "function_new_app_screen",
   "marker_screen_add"
  ],
  "d_path": [
   "data_app_current_get",
   "data_boolean_set",
   "data_files_update",
   "data_file_update",
   "data_functions_get",
   "data_get",
   "data_identifiers_get",
   "data_marker_current_get",
   "data_prompts",
   "data_property_get",
   "data_set",
   "data_terminal_get",
   "data_transform",
   "data_value",
   "data_watch_get",
   "error_attention_set",
   "function_aliases_restore",
   "function_alias_add_generic",
   "function_alias_rename",
   "function_current_get",
   "function_current_set",
   "function_open_app",
   "function_run_line_parse",
   "function_run_prompt",
   "git_push_folder",
   "marker_current_set"
  ],
  "path_join": [
   "data_backup",
   "ebible_version_books_testament",
   "ebible_version_download_path_combine",
   "file_name_json_folder",
   "firebase_service_account",
   "folder_public_combine",
   "folder_read_files",
   "folder_user",
   "folder_user_combine",
   "function_import",
   "git_push_folder",
   "html_name_to_path_dev",
   "html_update_generic",
   "http_firebase_file_path",
   "list_map_path_join",
   "local_function_path",
   "path_join",
   "path_repo_combine",
   "repo_path",
   "repo_path_combine",
   "sandbox_2",
   "server",
   "repos_paths_map_unordered_combine",
   "function_name_folder_to_path"
  ],
  "file_copy": [
   "data_backup",
   "data_copy",
   "file_copy",
   "function_copy"
  ],
  "date_now_file": [
   "data_backup",
   "date_now_file",
   "firebase_deploy_function"
  ],
  "data_path": [
   "data_backup",
   "data_boolean_set",
   "data_copy",
   "data_files_update",
   "data_file_update",
   "data_functions_get",
   "data_identifiers_get",
   "data_partition",
   "data_path",
   "data_terminal_get",
   "error_attention_set",
   "function_run_prompt",
   "marker_current_set"
  ],
  "data_backup": [
   "data_backup"
  ],
  "f_path_from": [
   "data_backup",
   "data_copy",
   "data_partition"
  ],
  "f_path_to": [
   "data_backup",
   "data_copy",
   "data_partition"
  ],
  "data_set": [
   "data_boolean_set",
   "data_set",
   "function_open_app",
   "git_push_folder",
   "repo_acronym_set",
   "user_repo_set"
  ],
  "data_boolean_set": [
   "data_boolean_set",
   "data_terminal_set",
   "data_watch_set"
  ],
  "previous": [
   "data_boolean_set",
   "data_set",
   "error_attention_set",
   "folder_previous",
   "function_aliases_restore",
   "function_current_set",
   "function_open_app",
   "function_run_line_parse",
   "git_history_delete",
   "html_update_dev",
   "list_copy_reverse",
   "list_previous",
   "list_unique_reverse",
   "marker_current_set",
   "path_join",
   "prompt_previous",
   "repos_folder",
   "repo_acronym_set",
   "repo_path",
   "server",
   "user_repo_set"
  ],
  "data_copy": [
   "data_copy",
   "data_partition"
  ],
  "object_properties_delete": [
   "data_files_update",
   "object_properties_delete"
  ],
  "file_js_parse": [
   "data_files_update",
   "data_file_update",
   "file_js_parse",
   "function_parse",
   "function_parse_strict"
  ],
  "data_save": [
   "data_files_update",
   "data_file_update",
   "data_save",
   "data_transform",
   "function_alias_generic"
  ],
  "data_file_update_inner": [
   "data_files_update",
   "data_file_update",
   "data_file_update_inner"
  ],
  "functions_paths": [
   "data_files_update",
   "functions_paths"
  ],
  "each_async": [
   "data_files_update",
   "each_async",
   "each_index_async",
   "each_range_async",
   "each_range_from_async",
   "ebible_books_to_chapter_codes",
   "ebible_chapters_each_verses_list",
   "ebible_versions_download",
   "functions_combine",
   "function_imports_add",
   "function_params_new",
   "function_rename_identifiers",
   "function_transform_marker_all",
   "function_transform_marker_specified",
   "git_publish_initial",
   "js_atomize",
   "js_atomize_function",
   "js_auto",
   "js_calls_to_each",
   "js_dollar",
   "js_function_last_asyncify",
   "js_outside_move",
   "js_return_atomize",
   "js_visit_each_async",
   "js_visit_type_each_async",
   "keyboard_type_delay",
   "sandbox_4_a",
   "tasks_run",
   "visit_filter_recursive_async"
  ],
  "data_files_update": [
   "data_files_update",
   "function_delete"
  ],
  "f_paths": [
   "data_files_update"
  ],
  "parseds": [
   "data_files_update"
  ],
  "properties": [
   "data_files_update",
   "functions_search_open",
   "function_params_consolidate",
   "function_params_new",
   "js_declaration_params_names_node",
   "js_dollar_choice_arguments_names",
   "js_dollar_new",
   "js_function_last_asyncify",
   "js_identifier_defineds",
   "js_property_parse_expression_add",
   "list_map_squash",
   "marker_screen_add",
   "messenger_reply",
   "object_properties",
   "object_properties_delete",
   "reply_test",
   "tasks_run",
   "function_parse_declaration_js_unparse"
  ],
  "data_file_update": [
   "data_file_update",
   "watch"
  ],
  "object_property_set": [
   "data_file_update_inner",
   "data_transform",
   "file_json_isolate",
   "function_alias_add",
   "function_alias_change",
   "function_alias_rename",
   "function_alias_replace",
   "html_disable_set",
   "js_arrow_to_function",
   "js_assign_combine",
   "js_await",
   "js_await_wrap",
   "js_declaration_asyncify",
   "js_declare_assign",
   "js_declare_init_set",
   "js_dollar_ien_generic",
   "js_dollar_if_call",
   "js_dollar_r",
   "js_function_id_add",
   "js_function_last_asyncify",
   "js_identifier_replace",
   "js_if_else_if_combine",
   "js_imports_paths_fix",
   "js_left_right_set",
   "js_return_code_replace",
   "js_stack_declaration_asyncify",
   "js_statement_return_add",
   "js_string",
   "list_empty",
   "list_map_property_to",
   "list_to_dictionary",
   "list_to_dictionary_async",
   "marker_if_test_replace",
   "marker_next_await",
   "messenger_reply",
   "messenger_reply_messages_urls_add_multiple",
   "object_merge_generic",
   "object_property_from",
   "object_property_initialize",
   "object_property_lambda",
   "object_property_lambda_async",
   "object_property_set",
   "object_property_set_exists_not",
   "search_generic",
   "watch",
   "function_exists_inner",
   "function_name_to_path_search"
  ],
  "object_property_delete": [
   "data_file_update_inner",
   "file_json_property_delete",
   "function_alias_change",
   "function_alias_delete",
   "function_alias_replace",
   "js_string",
   "object_properties_delete",
   "object_properties_delete_all",
   "object_property_delete"
  ],
  "list_empty_is": [
   "data_file_update_inner",
   "function_identifier_replace",
   "js_marker_name_get",
   "list_empty_is",
   "list_empty_is_assert",
   "list_empty_not_is",
   "list_index_is",
   "list_last_or_null",
   "messenger_reply_messages",
   "messenger_reply_unread_collect"
  ],
  "list_remove_all": [
   "data_file_update_inner",
   "list_remove_all",
   "list_remove_all_multiple"
  ],
  "list_difference": [
   "data_file_update_inner",
   "ebible_chapter_text",
   "js_function_last_asyncify",
   "js_imports_missing",
   "list_difference",
   "marker_functionize",
   "prompt_previous",
   "visit_unique_async"
  ],
  "list_add_if_not_includes": [
   "data_file_update_inner",
   "ebible_index",
   "list_add_if_not_includes",
   "messenger_reply_unread_collect",
   "visit_unique_async"
  ],
  "object_property_initialize": [
   "data_file_update_inner",
   "data_get",
   "ebible_index",
   "global_function_property_async",
   "messenger_reply_messages_transform",
   "messenger_reply_messages_urls_get",
   "object_invert",
   "object_property_initialize"
  ],
  "js_identifiers_names": [
   "data_file_update_inner",
   "js_atomize",
   "js_call_new_code",
   "js_expand_generic",
   "js_identifiers_names",
   "js_identifier_unique_ast",
   "js_imports_missing",
   "js_return_atomize"
  ],
  "function_path_to_name": [
   "data_file_update_inner",
   "function_auto_path",
   "function_path_declaration_unparse",
   "function_path_to_name"
  ],
  "f_identifiers_new": [
   "data_file_update_inner"
  ],
  "identifiers": [
   "data_file_update_inner",
   "data_identifiers_search",
   "function_rename_identifiers",
   "js_expand_generic",
   "js_identifiers_named",
   "js_identifiers_to_names",
   "js_imports_missing"
  ],
  "i_name": [
   "data_file_update_inner",
   "js_identifiers_named_count"
  ],
  "functions": [
   "data_file_update_inner",
   "data_functions_get",
   "js_await_add",
   "js_await_add_inner",
   "js_call_fill",
   "js_function_last_asyncify"
  ],
  "f_this": [
   "data_file_update_inner"
  ],
  "async_is": [
   "data_file_update_inner",
   "js_await_add_inner",
   "js_calls_to_each",
   "js_call_fill",
   "js_call_new",
   "js_call_new_code",
   "js_code_declaration",
   "js_code_declaration_args",
   "js_function_last_asyncify",
   "marker_functionize"
  ],
  "f_identifiers_old": [
   "data_file_update_inner"
  ],
  "removals": [
   "data_file_update_inner",
   "list_remove_all_multiple",
   "list_remove_multiple"
  ],
  "data_functions_get": [
   "data_functions_get",
   "js_await_add",
   "js_call_fill"
  ],
  "function_current_set": [
   "data_function_current_restore",
   "function_copy",
   "function_current_set",
   "function_current_set_task_new",
   "function_open"
  ],
  "function_current_get": [
   "data_function_current_restore",
   "function_current_declaration_code",
   "function_current_get",
   "function_identifier_replace",
   "function_open_editor_current",
   "function_params_new",
   "function_transform_current",
   "function_transform_marker_current",
   "function_transform_marker_empty",
   "function_types",
   "function_type_first",
   "marker_assign_replace",
   "marker_call",
   "marker_call_replace_generic",
   "marker_down_choices",
   "marker_expand",
   "marker_functionize",
   "marker_move",
   "marker_new",
   "marker_next",
   "marker_next_await",
   "marker_next_delete",
   "marker_param_add",
   "marker_remove",
   "marker_rename",
   "marker_top",
   "task_new"
  ],
  "data_function_current_restore": [
   "data_function_current_restore",
   "task_new"
  ],
  "f_name_current": [
   "data_function_current_restore",
   "function_current_declaration_code",
   "function_current_get",
   "function_open_editor_current",
   "function_params_new",
   "function_transform_marker_current",
   "marker_call",
   "marker_param_add",
   "marker_rename"
  ],
  "data_get": [
   "data_get",
   "data_property_get",
   "data_transform",
   "function_alias_add_generic",
   "repo_acronym_get",
   "user_repo_get"
  ],
  "value_initial": [
   "data_get",
   "data_transform",
   "object_property_initialize",
   "storage_local_initialize",
   "storage_local_initialize_context"
  ],
  "data_identifiers_get": [
   "data_identifiers_get",
   "data_identifiers_search",
   "function_rename_identifiers"
  ],
  "function_name_to_path": [
   "data_identifiers_search",
   "functions_search",
   "function_delete",
   "function_name_to_path",
   "function_new_declaration",
   "function_parse_strict",
   "js_outside_move",
   "function_name_to_path_search",
   "function_copy"
  ],
  "list_to_dictionary": [
   "data_identifiers_search",
   "function_names_to_acronyms",
   "html_parse_classes_preview",
   "list_to_dictionary",
   "search_generic",
   "functions_names_to_paths"
  ],
  "data_identifiers_search": [
   "data_identifiers_search",
   "function_params_new",
   "js_function_last_asyncify"
  ],
  "data_marker_current_get": [
   "data_marker_current_get",
   "function_transform_marker"
  ],
  "file_json_property_delete": [
   "data_partition",
   "file_json_property_delete"
  ],
  "file_json_isolate": [
   "data_partition",
   "file_json_isolate"
  ],
  "data_partition": [
   "data_partition"
  ],
  "file_name_json_folder": [
   "data_path_generic",
   "file_name_json_folder",
   "user_repo_path"
  ],
  "suffix": [
   "data_path_generic",
   "functions_names_from_path",
   "function_copy_suffix_add",
   "function_rename_suffix_add",
   "function_wrap_suffix_add",
   "js_identifier_unique",
   "list_filter_ends_with_any",
   "list_filter_ends_with_not_any",
   "roman_to_integer",
   "string_ends_with",
   "string_ends_with_not",
   "string_suffix_without"
  ],
  "f_name_unsuffixed": [
   "data_path_generic"
  ],
  "data_prompts_path": [
   "data_prompts",
   "data_prompts_path",
   "function_run_line_parse"
  ],
  "list_slice_end": [
   "data_prompts",
   "list_slice_end"
  ],
  "data_value": [
   "data_prompts",
   "data_value"
  ],
  "data_prompts": [
   "data_prompts",
   "prompt_previous"
  ],
  "prompts": [
   "data_prompts",
   "list_slice_end",
   "prompt_previous"
  ],
  "offset": [
   "data_prompts",
   "list_slice_end"
  ],
  "data_property_new": [
   "data_property_new"
  ],
  "file_overwrite_json": [
   "data_save",
   "file_json_transform",
   "file_overwrite_json"
  ],
  "data_transform": [
   "data_set",
   "data_transform",
   "error_attention_set",
   "function_aliases_restore",
   "function_alias_rename",
   "function_current_set",
   "function_run_line_parse",
   "marker_current_set"
  ],
  "lambda$previous": [
   "data_set",
   "data_transform",
   "git_push_folder"
  ],
  "data_terminal_get": [
   "data_terminal_get",
   "file_open"
  ],
  "w": [
   "data_terminal_get",
   "data_watch_get",
   "function_aliases_restore"
  ],
  "data_terminal_set": [
   "data_terminal_set"
  ],
  "value_previous": [
   "data_transform"
  ],
  "data_watch_get": [
   "data_watch_get"
  ],
  "data_watch_set": [
   "data_watch_set"
  ],
  "todo": [
   "data_watch_set_task_add_return",
   "function_params_consolidate_task_simple",
   "function_param_swap_task_simple",
   "function_run_log_task_duplicate_lines_to_each",
   "git_history_delete",
   "js_await_add_task_simple",
   "js_calls_to_each_task_simple",
   "js_dollar_task_each_code_own_fn",
   "js_dollar_task_if_else_to_generic",
   "js_import_inside_task_simple",
   "js_let_add_task_simple",
   "task_new",
   "todo"
  ],
  "data_watch_set_task_add_return": [
   "data_watch_set_task_add_return"
  ],
  "date_ms_to_hours": [
   "date_diff_hours",
   "date_ms_to_hours"
  ],
  "date_diff_ms": [
   "date_diff_hours",
   "date_diff_ms"
  ],
  "date_diff_hours": [
   "date_diff_hours",
   "git_push_folder"
  ],
  "now": [
   "date_diff_hours",
   "date_diff_ms",
   "date_now",
   "date_now_iso",
   "git_push_folder"
  ],
  "ms": [
   "date_diff_hours",
   "date_ms_to_hours",
   "function_aliases_restore",
   "s5_inner",
   "sleep"
  ],
  "hours": [
   "date_diff_hours",
   "git_push_folder"
  ],
  "Math": [
   "date_diff_ms",
   "floor",
   "random",
   "round"
  ],
  "abs": [
   "date_diff_ms"
  ],
  "date_iso_to": [
   "date_iso_to",
   "date_now_iso",
   "git_push_folder"
  ],
  "toISOString": [
   "date_iso_to"
  ],
  "date_now": [
   "date_now",
   "date_now_iso",
   "git_push_folder"
  ],
  "Date": [
   "date_now",
   "date_to"
  ],
  "date_now_iso": [
   "date_now_file",
   "date_now_iso",
   "git_acp_timestamp"
  ],
  "now_iso": [
   "date_now_file",
   "date_now_iso",
   "git_push_folder"
  ],
  "now_file": [
   "date_now_file",
   "firebase_deploy_function"
  ],
  "replace": [
   "date_now_file",
   "string_letters_only",
   "urdu_allah_to_god",
   "whitespace_normalize"
  ],
  "date_to": [
   "date_to",
   "git_push_folder"
  ],
  "before_iso": [
   "date_to",
   "git_push_folder"
  ],
  "digits": [
   "digits",
   "string_starts_with_digit"
  ],
  "lambda$item": [
   "each",
   "each_async",
   "equal_by",
   "equal_by_async",
   "js_visit_each",
   "list_all",
   "list_any",
   "list_filter",
   "list_map",
   "list_map_unordered_async",
   "list_sort_number_mapper",
   "list_to_dictionary",
   "list_to_dictionary_async"
  ],
  "lambda$item$index": [
   "each_index",
   "each_index_async",
   "list_map_index"
  ],
  "each_index_async": [
   "each_index_async",
   "each_multiple_async"
  ],
  "lists_get": [
   "each_multiple",
   "each_multiple_async",
   "lists_get"
  ],
  "each_multiple": [
   "each_multiple",
   "each_pair"
  ],
  "lists": [
   "each_multiple",
   "each_multiple_async",
   "each_pair",
   "each_pair_async",
   "lists_get",
   "list_concat_multiple"
  ],
  "first": [
   "each_multiple",
   "each_multiple_async",
   "ebible_references_parse_lines",
   "function_alias_add",
   "function_type_first",
   "js_dollar",
   "js_dollar_a",
   "js_dollar_g",
   "list_first",
   "list_first_second_generic",
   "messenger_reply",
   "reply_test",
   "sandbox_4_a"
  ],
  "items": [
   "each_multiple",
   "each_multiple_async",
   "each_pair",
   "each_pair_async",
   "lists_get",
   "list_adder_unique",
   "list_adder_unique_async",
   "list_add_multiple",
   "marker_functionize",
   "reply"
  ],
  "each_multiple_async": [
   "each_multiple_async",
   "each_pair_async"
  ],
  "object_properties": [
   "each_object",
   "functions_search_open",
   "function_aliases_search",
   "function_params_new",
   "js_function_last_asyncify",
   "js_visit_children_get",
   "messenger_reply",
   "object_merge_generic",
   "object_properties",
   "object_properties_delete_all",
   "reply_test",
   "tasks_run",
   "function_parse_declaration_js_unparse"
  ],
  "each_object": [
   "each_object",
   "object_invert"
  ],
  "each_pair": [
   "each_pair",
   "js_expand_generic"
  ],
  "list_a": [
   "each_pair",
   "each_pair_async"
  ],
  "list_b": [
   "each_pair",
   "each_pair_async"
  ],
  "lambda$a$b": [
   "each_pair",
   "each_pair_async"
  ],
  "each_pair_async": [
   "each_pair_async",
   "ebible_references_parse_lines"
  ],
  "each_range": [
   "each_range",
   "js_dollar_a_generic",
   "js_identifier_defineds"
  ],
  "each_range_async": [
   "each_range_async",
   "marker_next_delete_multiple",
   "retry"
  ],
  "range_from": [
   "each_range_from",
   "each_range_from_async",
   "range_from"
  ],
  "each_range_from": [
   "each_range_from"
  ],
  "from": [
   "each_range_from",
   "each_range_from_async",
   "firebase_upload_buffer",
   "firebase_upload_string",
   "folder_current_join_code",
   "function_identifier_replace",
   "function_imports_add",
   "function_name_to_path_import",
   "git_repo_rename",
   "html_update_generic",
   "js_code_import_single",
   "js_dollar_i",
   "js_dollar_r",
   "js_imports_paths_fix",
   "js_return_code_replace",
   "js_return_empty",
   "list_to",
   "marker_rename",
   "object_assign",
   "object_copy",
   "object_merge",
   "object_merge_generic",
   "object_property_from",
   "object_replace",
   "range_from",
   "repos_gitignore_overwrite",
   "string_base64_to",
   "string_list_to",
   "string_replace"
  ],
  "to": [
   "each_range_from",
   "each_range_from_async",
   "ebible_version_books_testament",
   "function_imports_missing",
   "function_parse",
   "function_parse_declaration",
   "function_parse_declaration_inner",
   "function_parse_strict_declaration",
   "git_repo_rename",
   "js_dollar_r",
   "js_imports_unused",
   "marker_call_replace_generic",
   "marker_next_get",
   "marker_next_index",
   "marker_rename",
   "object_assign",
   "object_merge",
   "object_merge_generic",
   "object_property_from",
   "object_replace",
   "range_from",
   "repos_gitignore_overwrite",
   "string_replace",
   "function_name_to_path_unalias"
  ],
  "each_range_from_async": [
   "each_range_from_async",
   "ebible_references_parse_lines"
  ],
  "list_copy_reverse": [
   "each_reverse",
   "list_copy_reverse",
   "list_unique_reverse"
  ],
  "each_reverse": [
   "each_reverse",
   "ebible_verses",
   "js_dollar_g",
   "js_expand_generic"
  ],
  "reversed": [
   "each_reverse",
   "list_unique_reverse"
  ],
  "list_adder_multiple_async": [
   "ebible_books_to_chapter_codes",
   "list_adder_multiple_async"
  ],
  "ebible_chapters": [
   "ebible_books_to_chapter_codes",
   "ebible_chapters"
  ],
  "ebible_books_to_chapter_codes": [
   "ebible_books_to_chapter_codes",
   "ebible_chapter_codes",
   "sandbox_2"
  ],
  "la": [
   "ebible_books_to_chapter_codes",
   "ebible_index_flat",
   "ebible_references_parse_lines",
   "ebible_verses",
   "function_aliases_restore",
   "function_dependencies",
   "function_transform_marker_specified",
   "function_type_first",
   "html_parse_descendants_classes",
   "js_block_child_graph",
   "js_declaration_single",
   "js_identifiers",
   "js_identifiers_names",
   "js_identifier_defineds",
   "js_imports_declarations",
   "js_node_types",
   "js_type",
   "js_visitors",
   "js_visit_each",
   "js_visit_each_async",
   "js_visit_match",
   "js_visit_type_each_async",
   "list_difference",
   "list_intersect",
   "list_squash",
   "marker_assign_replace",
   "marker_call",
   "marker_call_replace_generic",
   "marker_down_choices_lambda",
   "marker_functionize",
   "marker_next",
   "marker_next_await",
   "marker_next_delete",
   "marker_param_add",
   "messenger_reply_messages",
   "retry"
  ],
  "chapters": [
   "ebible_books_to_chapter_codes",
   "ebible_chapters",
   "ebible_index"
  ],
  "ebible_book_code_size": [
   "ebible_book_code_size",
   "ebible_chapter_code_to_book",
   "ebible_chapter_code_to_name"
  ],
  "string_suffix_without": [
   "ebible_chapters",
   "functions_names_from_path",
   "function_identifier_replace_ending_remove",
   "function_list_generate",
   "string_suffix_change",
   "string_suffix_without"
  ],
  "ebible_version_download_path_combine": [
   "ebible_chapters",
   "ebible_chapter_classes",
   "ebible_chapter_text",
   "ebible_version_download_path_combine"
  ],
  "html_parse_find_a_href_starts_with": [
   "ebible_chapters",
   "ebible_versions",
   "html_parse_find_a_href_starts_with"
  ],
  "list_filter_starts_with_not_multiple": [
   "ebible_chapters",
   "list_filter_starts_with_not_multiple"
  ],
  "html_parse_read": [
   "ebible_chapters",
   "ebible_chapter_classes",
   "ebible_chapter_text",
   "ebible_version_books_testament",
   "html_parse_read"
  ],
  "filtered": [
   "ebible_chapters",
   "ebible_verses",
   "html_parse_find_a_href_starts_with",
   "js_marker_named_ast",
   "js_stack_filtered",
   "js_stack_filtered_multiple",
   "js_stack_filtered_multiple_each",
   "js_stack_last_multiple",
   "list_all",
   "list_any",
   "list_filter",
   "list_filter_ends_with_any",
   "list_filter_ends_with_not_any",
   "list_filter_property",
   "list_filter_starts_with",
   "list_filter_starts_with_not",
   "list_filter_starts_with_not_multiple",
   "list_find",
   "messenger_reply",
   "puppeteer_hrefs_starts_with",
   "function_exists_inner",
   "function_name_to_path_search"
  ],
  "prefixes": [
   "ebible_chapters",
   "list_any_starts_with",
   "list_filter_starts_with_any",
   "list_filter_starts_with_not_multiple",
   "list_find_starts_with",
   "list_map_prefix_any",
   "list_map_prefix_without_any"
  ],
  "without": [
   "ebible_chapters",
   "functions_names_from_path",
   "messenger_reply_unread_collect",
   "string_suffix_change",
   "string_suffix_without"
  ],
  "ebible_chapters_each_verses_list": [
   "ebible_chapters_each_verses",
   "ebible_chapters_each_verses_list",
   "sandbox_2"
  ],
  "ebible_chapter_codes": [
   "ebible_chapters_each_verses",
   "ebible_chapter_codes"
  ],
  "ebible_chapters_each_verses": [
   "ebible_chapters_each_verses",
   "ebible_chapters_each_verses_check",
   "ebible_chapters_each_verses_check_with",
   "ebible_index",
   "ebible_index_flat"
  ],
  "each_chapter": [
   "ebible_chapters_each_verses",
   "ebible_chapters_each_verses_check_with",
   "ebible_chapters_each_verses_list",
   "ebible_index",
   "ebible_index_flat",
   "ebible_verses_upload",
   "sandbox_2"
  ],
  "ebible_chapters_each_verses_check": [
   "ebible_chapters_each_verses_check",
   "ebible_chapters_each_verses_check_with",
   "sandbox_2"
  ],
  "each_chapter2": [
   "ebible_chapters_each_verses_check"
  ],
  "chapter_code": [
   "ebible_chapters_each_verses_check",
   "ebible_chapters_each_verses_list",
   "ebible_chapter_classes",
   "ebible_chapter_code_normalize",
   "ebible_chapter_code_to_book",
   "ebible_chapter_code_to_name",
   "ebible_chapter_text",
   "ebible_index",
   "ebible_index_flat",
   "ebible_references_parse_lines",
   "ebible_verse",
   "ebible_verses",
   "ebible_verses_upload",
   "ebible_verses_upload_name",
   "ebible_verse_download",
   "sandbox_2"
  ],
  "ebible_chapters_each_verses_check_with": [
   "ebible_chapters_each_verses_check_with",
   "ebible_verses_upload"
  ],
  "ebible_verses": [
   "ebible_chapters_each_verses_list",
   "ebible_verse",
   "ebible_verses",
   "sandbox_2"
  ],
  "html_parse_classes_preview": [
   "ebible_chapter_classes",
   "ebible_chapter_text",
   "html_parse_classes_preview"
  ],
  "html_parse_descendants_classes": [
   "ebible_chapter_classes",
   "ebible_chapter_text",
   "html_parse_descendants_classes"
  ],
  "html_parse_find": [
   "ebible_chapter_classes",
   "ebible_chapter_text",
   "ebible_version_books_testament",
   "html_parse_classes_preview",
   "html_parse_find",
   "html_parse_find_list_to",
   "html_parse_find_remove"
  ],
  "ebible_chapter_classes": [
   "ebible_chapter_classes"
  ],
  "main": [
   "ebible_chapter_classes",
   "ebible_chapter_text",
   "html_parse_classes_preview",
   "html_parse_find_remove"
  ],
  "classes": [
   "ebible_chapter_classes",
   "ebible_chapter_text",
   "ebible_version_books",
   "html_parse_classes_preview",
   "html_parse_descendants_classes"
  ],
  "dictionary": [
   "ebible_chapter_classes",
   "ebible_chapter_text",
   "function_names_to_acronyms",
   "html_parse_classes_preview",
   "list_to_dictionary",
   "list_to_dictionary_async",
   "repos_acronyms_to_names",
   "functions_names_to_paths"
  ],
  "string_upper_to": [
   "ebible_chapter_code_normalize",
   "string_upper_to"
  ],
  "ebible_chapter_code_normalize": [
   "ebible_chapter_code_normalize"
  ],
  "u": [
   "ebible_chapter_code_normalize",
   "file_temp",
   "function_aliases_restore",
   "function_exists",
   "function_exists_inner",
   "string_upper_to",
   "uuid",
   "function_name_to_path_unalias"
  ],
  "string_take": [
   "ebible_chapter_code_to_book",
   "string_take",
   "string_take_less_1",
   "string_trim_right"
  ],
  "string_to": [
   "ebible_chapter_code_to_name",
   "ebible_references_parse_lines",
   "list_size_1_assert",
   "marker_first",
   "string_to"
  ],
  "integer_to": [
   "ebible_chapter_code_to_name",
   "integer_to",
   "js_dollar_a",
   "marker_call_replace_generic",
   "marker_down",
   "marker_up",
   "range_from"
  ],
  "string_skip": [
   "ebible_chapter_code_to_name",
   "string_prefix_without",
   "string_skip",
   "string_skip_while"
  ],
  "roman_to_integer": [
   "ebible_chapter_text",
   "roman_to_integer"
  ],
  "list_intersect_empty_is_assert": [
   "ebible_chapter_text",
   "list_intersect_empty_is_assert"
  ],
  "list_empty_is_assert": [
   "ebible_chapter_text",
   "list_empty_is_assert",
   "list_intersect_empty_is_assert"
  ],
  "html_parse_find_list_to": [
   "ebible_chapter_text",
   "html_parse_descendants_classes",
   "html_parse_find_a_href_starts_with",
   "html_parse_find_list_href_text",
   "html_parse_find_list_to"
  ],
  "html_parse_text": [
   "ebible_chapter_text",
   "html_parse_classes_preview",
   "html_parse_href_text",
   "html_parse_text"
  ],
  "ebible_verses_exclude": [
   "ebible_chapter_text",
   "ebible_verses_exclude"
  ],
  "ebible_verses_include": [
   "ebible_chapter_text",
   "ebible_verses_include"
  ],
  "html_parse_find_remove": [
   "ebible_chapter_text",
   "html_parse_find_remove"
  ],
  "ebible_chapter_text": [
   "ebible_chapter_text",
   "ebible_verses"
  ],
  "include": [
   "ebible_chapter_text",
   "list_intersect_empty_is_assert"
  ],
  "exclude": [
   "ebible_chapter_text",
   "list_intersect_empty_is_assert"
  ],
  "list2": [
   "ebible_chapter_text",
   "list_all",
   "list_intersect"
  ],
  "selector2": [
   "ebible_chapter_text"
  ],
  "t": [
   "ebible_chapter_text",
   "function_aliases_restore",
   "js_auto"
  ],
  "n": [
   "ebible_chapter_text",
   "ebible_verse_download",
   "ebible_version_books",
   "function_aliases_restore",
   "function_aliases_search",
   "function_alias_rename",
   "js_await_add_inner",
   "js_calls_to_each",
   "js_declare_assign",
   "js_node_is",
   "js_node_type",
   "js_null",
   "js_stack_filtered",
   "js_visit_children_get",
   "js_visit_filter",
   "marker_next_get",
   "not",
   "null_is",
   "object_property_exists_not",
   "promise_not_is",
   "puppeteer_matches",
   "round",
   "search_generic",
   "storage_local_get",
   "storage_local_initialize"
  ],
  "verse_numbers": [
   "ebible_chapter_text",
   "ebible_index",
   "ebible_index_flat",
   "ebible_verses"
  ],
  "ebible_class_apocrypha": [
   "ebible_class_apocrypha",
   "ebible_version_books",
   "ebible_version_books_testament_apocrypha"
  ],
  "ebible_class_new": [
   "ebible_class_new",
   "ebible_version_books",
   "ebible_version_books_testament_new"
  ],
  "ebible_class_old": [
   "ebible_class_old",
   "ebible_version_books",
   "ebible_version_books_testament_old"
  ],
  "ebible_firebase_upload_path": [
   "ebible_firebase_upload",
   "ebible_firebase_upload_path",
   "firebase_storage_download_ebible"
  ],
  "firebase_upload_object": [
   "ebible_firebase_upload",
   "firebase_deploy_function",
   "firebase_upload_object"
  ],
  "ebible_firebase_upload": [
   "ebible_firebase_upload",
   "ebible_index_flat_upload",
   "ebible_index_upload",
   "ebible_verses_upload",
   "ebible_version_books_upload"
  ],
  "destination": [
   "ebible_firebase_upload",
   "ebible_firebase_upload_path",
   "firebase_deploy_function",
   "firebase_deploy_function_destination",
   "firebase_storage_download",
   "firebase_storage_download_ebible",
   "firebase_storage_download_json",
   "firebase_storage_download_path",
   "firebase_storage_function_run",
   "firebase_upload_buffer",
   "firebase_upload_generic",
   "firebase_upload_object",
   "firebase_upload_string",
   "folder_user_combine"
  ],
  "list_join_slash_forward": [
   "ebible_firebase_upload_path",
   "ebible_index_flat_upload_name",
   "ebible_verses_upload_name",
   "firebase_deploy_function_destination",
   "list_join_slash_forward"
  ],
  "file_name_json": [
   "ebible_firebase_upload_path",
   "file_name_json",
   "file_name_json_folder",
   "firebase_deploy_function_destination"
  ],
  "file_name_with_extension": [
   "ebible_firebase_upload_path"
  ],
  "ebible_folder_urdu": [
   "ebible_folder_urdu",
   "ebible_languages",
   "ebible_references_parse_god_created_man_why"
  ],
  "ebible_index": [
   "ebible_index",
   "ebible_index_upload"
  ],
  "chapter": [
   "ebible_index"
  ],
  "list_adder_async": [
   "ebible_index_flat",
   "ebible_references_parse_lines",
   "function_transform_marker_specified",
   "list_adder_async",
   "list_adder_unique_async",
   "marker_assign_replace",
   "marker_call",
   "marker_call_replace_generic",
   "marker_next",
   "marker_next_await",
   "marker_next_delete",
   "marker_param_add",
   "messenger_reply_messages",
   "retry"
  ],
  "ebible_index_flat": [
   "ebible_index_flat",
   "ebible_index_flat_upload"
  ],
  "verse_number": [
   "ebible_index_flat",
   "ebible_references_parse_lines",
   "ebible_verse",
   "ebible_verses",
   "ebible_verses_upload",
   "ebible_verses_upload_name",
   "ebible_verse_download",
   "ebible_verse_new",
   "string_pad_space"
  ],
  "ebible_index_flat_upload": [
   "ebible_index_flat_upload"
  ],
  "ebible_index_upload_name": [
   "ebible_index_flat_upload_name",
   "ebible_index_upload",
   "ebible_index_upload_name"
  ],
  "ebible_index_upload": [
   "ebible_index_upload"
  ],
  "ebible_languages_to_bible_folders": [
   "ebible_languages_to_bible_folders",
   "reply"
  ],
  "language_codes": [
   "ebible_languages_to_bible_folders",
   "reply",
   "reply_test"
  ],
  "bible_folders": [
   "ebible_languages_to_bible_folders",
   "ebible_references_parse",
   "ebible_references_parse_god_created_man_why",
   "ebible_references_parse_lines",
   "reply",
   "sandbox_4_a"
  ],
  "list_join_newline": [
   "ebible_references_parse",
   "firebase_storage_function_run",
   "function_dependencies_code",
   "list_join_newline"
  ],
  "ebible_references_parse": [
   "ebible_references_parse",
   "ebible_references_parse_god_created_man_why"
  ],
  "ebible_references_parse_god_created_man_why": [
   "ebible_references_parse_god_created_man_why"
  ],
  "ebible_verse": [
   "ebible_references_parse_lines",
   "ebible_verse"
  ],
  "list_second": [
   "ebible_references_parse_lines",
   "js_dollar_r",
   "list_first_second",
   "list_second",
   "sandbox_4_a"
  ],
  "list_multiple_is": [
   "ebible_references_parse_lines",
   "js_statement_call_get",
   "list_first_second_generic",
   "list_multiple_is",
   "function_exists_inner",
   "function_name_to_path_search"
  ],
  "string_split_dash": [
   "ebible_references_parse_lines",
   "string_split_dash"
  ],
  "number_pad": [
   "ebible_references_parse_lines",
   "number_pad"
  ],
  "list_first_second": [
   "ebible_references_parse_lines",
   "js_dollar",
   "list_first_second"
  ],
  "string_split_colon": [
   "ebible_references_parse_lines",
   "string_split_colon"
  ],
  "list_map_first": [
   "ebible_references_parse_lines",
   "list_map_first"
  ],
  "list_map_filter_string_empty_not_is": [
   "ebible_references_parse_lines",
   "list_map_filter_string_empty_not_is"
  ],
  "list_map_split_space": [
   "ebible_references_parse_lines",
   "list_map_split_space"
  ],
  "list_map_prefix_without_any": [
   "ebible_references_parse_lines",
   "list_map_prefix_without_any"
  ],
  "list_map_prefix_any": [
   "ebible_references_parse_lines",
   "list_map_prefix_any"
  ],
  "lines": [
   "ebible_references_parse_lines",
   "function_transform_marker_specified"
  ],
  "books_all": [
   "ebible_references_parse_lines",
   "sandbox_4_a"
  ],
  "book_names": [
   "ebible_references_parse_lines"
  ],
  "mapped3": [
   "ebible_references_parse_lines",
   "list_map_split_comma",
   "list_map_split_space",
   "sandbox_4_a"
  ],
  "mapped4": [
   "ebible_references_parse_lines",
   "list_map_filter_string_empty_not_is",
   "list_map_first"
  ],
  "chapter_verses_list": [
   "ebible_references_parse_lines"
  ],
  "chapter_verses": [
   "ebible_references_parse_lines",
   "string_split_colon"
  ],
  "split2": [
   "ebible_references_parse_lines",
   "list_map_split_space",
   "sandbox_4_a"
  ],
  "second": [
   "ebible_references_parse_lines",
   "folder_public_combine",
   "functions_path",
   "function_alias_add",
   "js_dollar",
   "js_dollar_r",
   "list_first_second_generic",
   "list_second",
   "sandbox_4_a",
   "string_split_dash",
   "function_name_folder_to_path"
  ],
  "pad_count": [
   "ebible_references_parse_lines"
  ],
  "chapter_padded": [
   "ebible_references_parse_lines"
  ],
  "verse_range": [
   "ebible_references_parse_lines"
  ],
  "verse_start": [
   "ebible_references_parse_lines"
  ],
  "verse_end": [
   "ebible_references_parse_lines"
  ],
  "m": [
   "ebible_references_parse_lines",
   "function_aliases_restore",
   "messenger_reply_unread_click",
   "reply_test",
   "function_exists_inner",
   "function_name_to_path_search"
  ],
  "book2": [
   "ebible_references_parse_lines"
  ],
  "urdu_allah_to_god": [
   "ebible_verses",
   "urdu_allah_to_god"
  ],
  "list_index_of_last": [
   "ebible_verses",
   "list_index_of_last"
  ],
  "ebible_verse_new": [
   "ebible_verses",
   "ebible_verse_new"
  ],
  "list_adder": [
   "ebible_verses",
   "function_type_first",
   "html_parse_descendants_classes",
   "js_block_child_graph",
   "js_declaration_single",
   "js_type",
   "js_visitors",
   "js_visit_each",
   "js_visit_each_async",
   "js_visit_match",
   "js_visit_type_each_async",
   "list_adder",
   "list_adder_unique",
   "list_difference",
   "list_intersect",
   "list_squash",
   "marker_down_choices_lambda"
  ],
  "string_empty_not_is": [
   "ebible_verses",
   "js_dollar",
   "js_identifier_unique",
   "list_filter_empty_not_is",
   "string_empty_not_is",
   "string_empty_not_is_assert"
  ],
  "list_filter": [
   "ebible_verses",
   "js_identifiers_named",
   "js_markers",
   "js_marker_named_ast",
   "js_stack_filtered",
   "js_stack_filtered_multiple",
   "list_all",
   "list_any",
   "list_filter",
   "list_filter_empty_not_is",
   "list_filter_ends_with_any",
   "list_filter_ends_with_not_any",
   "list_filter_property",
   "list_filter_starts_with",
   "list_filter_starts_with_any",
   "list_filter_starts_with_not",
   "list_filter_starts_with_not_multiple",
   "list_find",
   "search_generic",
   "function_exists_inner",
   "function_name_to_path_search"
  ],
  "list_reverse": [
   "ebible_verses",
   "list_copy_reverse",
   "list_reverse",
   "list_unique_reverse"
  ],
  "skipped": [
   "ebible_verses",
   "list_skip",
   "list_skip_1",
   "string_prefix_without",
   "string_skip"
  ],
  "ebible_version_download": [
   "ebible_verses_upload",
   "ebible_versions_download",
   "ebible_version_books_testament",
   "ebible_version_download",
   "ebible_version_download_path"
  ],
  "ebible_verses_upload_name": [
   "ebible_verses_upload",
   "ebible_verses_upload_name",
   "ebible_verse_download"
  ],
  "list_wait": [
   "ebible_verses_upload",
   "functions_format",
   "functions_transform",
   "function_dependencies_code",
   "list_map_unordered_async",
   "list_wait"
  ],
  "ebible_verses_upload": [
   "ebible_verses_upload"
  ],
  "joined2": [
   "ebible_verses_upload",
   "ebible_version_download_path",
   "local_function_path"
  ],
  "tokens": [
   "ebible_verse_new",
   "reply_sequence"
  ],
  "list_unique": [
   "ebible_versions",
   "html_parse_descendants_classes",
   "js_imports_declarations",
   "list_adder_unique",
   "list_adder_unique_async",
   "list_unique",
   "list_unique_reverse"
  ],
  "list_map_prefix_without": [
   "ebible_versions",
   "list_map_prefix_without"
  ],
  "html_parse": [
   "ebible_versions",
   "html_parse",
   "html_parse_read"
  ],
  "http_local_text": [
   "ebible_versions",
   "http_local_text"
  ],
  "ebible_versions": [
   "ebible_versions",
   "ebible_versions_download"
  ],
  "unique": [
   "ebible_versions",
   "function_run_line_parse",
   "js_call_new",
   "js_call_new_code",
   "js_dollar_g",
   "js_expand_generic",
   "js_function_id_add",
   "js_identifier_unique",
   "js_identifier_unique_ast",
   "js_imports_declarations",
   "js_node_atomize",
   "list_adder_unique",
   "list_adder_unique_async",
   "list_unique"
  ],
  "ebible_versions_download": [
   "ebible_versions_download"
  ],
  "ebible_version_books_upload_name": [
   "ebible_version_books",
   "ebible_version_books_upload",
   "ebible_version_books_upload_name"
  ],
  "ebible_version_books_testament": [
   "ebible_version_books",
   "ebible_version_books_testament",
   "ebible_version_books_testament_apocrypha",
   "ebible_version_books_testament_new",
   "ebible_version_books_testament_old"
  ],
  "list_join_comma_space": [
   "ebible_version_books",
   "js_code_call_args",
   "list_join_comma_space"
  ],
  "file_name2": [
   "ebible_version_books"
  ],
  "html_parse_find_list_href_text": [
   "ebible_version_books_testament",
   "html_parse_find_list_href_text"
  ],
  "selector": [
   "ebible_version_books_testament",
   "ebible_version_books_testament_apocrypha",
   "html_parse_find",
   "html_parse_find_list_href_text",
   "html_parse_find_list_to",
   "html_parse_find_remove",
   "messenger_reply_unread_collect"
  ],
  "bl": [
   "ebible_version_books_testament",
   "html_parse_find_list_href_text",
   "html_parse_find_list_to"
  ],
  "href": [
   "ebible_version_books_testament",
   "html_parse_href",
   "html_parse_href_text",
   "puppeteer_hrefs"
  ],
  "taken": [
   "ebible_version_books_testament",
   "list_take",
   "string_take"
  ],
  "ebible_version_books_testament_apocrypha": [
   "ebible_version_books_testament_apocrypha",
   "sandbox_2"
  ],
  "ebible_version_books_testament_new": [
   "ebible_version_books_testament_new"
  ],
  "class_new": [
   "ebible_version_books_testament_new"
  ],
  "ebible_version_books_testament_old": [
   "ebible_version_books_testament_old"
  ],
  "class_old": [
   "ebible_version_books_testament_old"
  ],
  "ebible_version_books_upload": [
   "ebible_version_books_upload"
  ],
  "ebible_version_download_path": [
   "ebible_version_download",
   "ebible_version_download_path",
   "ebible_version_download_path_combine"
  ],
  "unzip": [
   "ebible_version_download",
   "unzip"
  ],
  "http_local": [
   "ebible_version_download",
   "http_local",
   "http_local_file_name",
   "http_local_text"
  ],
  "local_function_path": [
   "ebible_version_download_path",
   "http_local_file_name",
   "local_function_path"
  ],
  "chapters_name": [
   "ebible_version_download_path_combine"
  ],
  "emoji_heart_fire": [
   "emoji_heart_fire",
   "emoji_trinity"
  ],
  "emoji_thumbs_up": [
   "emoji_thumbs_up"
  ],
  "equal_by_async": [
   "equal_by_async",
   "js_if_else_if_combine"
  ],
  "equal_not": [
   "equal_not",
   "js_dollar_ine",
   "js_visit_calls_named",
   "repos_gitignore_overwrite"
  ],
  "error_attention_set": [
   "error_attention_clear",
   "error_attention_set"
  ],
  "error_attention_clear": [
   "error_attention_clear"
  ],
  "error_json": [
   "error_json",
   "js_unparse",
   "list_index_of",
   "list_index_of_last",
   "object_merge_generic",
   "retry"
  ],
  "exit": [
   "exit"
  ],
  "file_copy_overwrite": [
   "file_copy",
   "file_copy_overwrite",
   "repos_gitignore_overwrite"
  ],
  "file_path_old": [
   "file_copy",
   "file_copy_overwrite"
  ],
  "file_parent_exists_ensure": [
   "file_copy_overwrite",
   "file_overwrite",
   "file_overwrite_buffer",
   "file_parent_exists_ensure"
  ],
  "fs": [
   "file_copy_overwrite",
   "file_delete",
   "file_exists",
   "file_overwrite",
   "file_overwrite_buffer",
   "file_parent_exists_ensure",
   "file_read",
   "file_read_buffer",
   "folder_delete",
   "folder_read",
   "folder_read_async",
   "folder_read_files",
   "function_aliases_restore"
  ],
  "promises": [
   "file_copy_overwrite",
   "file_delete",
   "file_exists",
   "file_overwrite",
   "file_overwrite_buffer",
   "file_parent_exists_ensure",
   "file_read",
   "file_read_buffer",
   "folder_delete",
   "folder_read"
  ],
  "copyFile": [
   "file_copy_overwrite"
  ],
  "file_delete": [
   "file_delete",
   "file_delete_if_exists",
   "function_delete"
  ],
  "unlink": [
   "file_delete"
  ],
  "file_delete_if_exists": [
   "file_delete_if_exists",
   "file_temp"
  ],
  "throws_not_async": [
   "file_exists",
   "schtasks_query",
   "throws_not_async"
  ],
  "promise_is": [
   "file_exists",
   "promise_is",
   "promise_not_is"
  ],
  "access": [
   "file_exists"
  ],
  "constants": [
   "file_exists"
  ],
  "F_OK": [
   "file_exists"
  ],
  "object_properties_delete_all": [
   "file_json_isolate",
   "object_properties_delete_all",
   "object_replace"
  ],
  "file_json_transform": [
   "file_json_isolate",
   "file_json_property_delete",
   "file_json_transform",
   "messenger_reply_messages_transform",
   "messenger_reply_messages_urls_transform"
  ],
  "lambda$data": [
   "file_json_transform"
  ],
  "js_parse": [
   "file_js_parse",
   "function_new_declaration",
   "js_parse",
   "js_parse_statement",
   "js_parse_statement_module"
  ],
  "file_overwrite": [
   "file_js_unparse",
   "file_overwrite",
   "file_overwrite_json",
   "file_write",
   "function_format",
   "html_overwrite"
  ],
  "js_unparse": [
   "file_js_unparse",
   "function_dependencies_code",
   "function_new_declaration",
   "function_parse_declaration_js_unparse",
   "js_block_child_graph_unparse",
   "js_calls_to_each",
   "js_call_new_code",
   "js_code_string",
   "js_expand_generic",
   "js_if_else_if_combine",
   "js_unparse",
   "log_unparse",
   "marker_assign_replace",
   "marker_call",
   "marker_call_replace_generic",
   "marker_down_choices",
   "marker_next",
   "marker_next_await"
  ],
  "js_format": [
   "file_js_unparse",
   "function_format",
   "function_new_declaration",
   "js_format"
  ],
  "file_js_unparse": [
   "file_js_unparse",
   "function_imports_fix",
   "function_imports_missing_add",
   "function_transform_result"
  ],
  "code_unparsed": [
   "file_js_unparse"
  ],
  "code_new": [
   "file_js_unparse"
  ],
  "function_path_declaration_unparse": [
   "file_open",
   "function_path_declaration_unparse"
  ],
  "function_name_extension": [
   "file_open",
   "functions_names_from_path",
   "function_name_extension",
   "function_name_to_base"
  ],
  "string_ends_with": [
   "file_open",
   "list_filter_ends_with_any",
   "string_ends_with",
   "string_ends_with_not",
   "string_ends_with_space",
   "string_padded_is",
   "string_prefix_without",
   "string_suffix_without"
  ],
  "file_open_editor": [
   "file_open",
   "file_open_editor",
   "function_open_editor"
  ],
  "terminal": [
   "file_open"
  ],
  "ext": [
   "file_open",
   "function_name_extension"
  ],
  "ew": [
   "file_open",
   "list_filter_ends_with_any",
   "string_ends_with",
   "string_padded_is"
  ],
  "filePath": [
   "file_open_editor"
  ],
  "writeFile": [
   "file_overwrite",
   "file_overwrite_buffer"
  ],
  "file_overwrite_buffer": [
   "file_overwrite_buffer",
   "file_write_buffer"
  ],
  "path": [
   "file_parent_exists_ensure",
   "firebase_path_fix",
   "firebase_storage_exists",
   "folder_read_async",
   "functions_names",
   "functions_names_from_path",
   "function_import",
   "messenger_reply_login",
   "object_property_exists_equals",
   "path_name",
   "path_resolve",
   "server",
   "watch",
   "repos_paths_map_unordered_combine",
   "functions_paths",
   "repos_paths_map_unordered_combine_squash"
  ],
  "dir": [
   "file_parent_exists_ensure"
  ],
  "dirname": [
   "file_parent_exists_ensure",
   "function_import",
   "server"
  ],
  "mkdir": [
   "file_parent_exists_ensure"
  ],
  "recursive": [
   "file_parent_exists_ensure",
   "folder_delete"
  ],
  "file_path_safe_to": [
   "file_path_safe_to"
  ],
  "fp": [
   "file_path_safe_to",
   "function_aliases_restore"
  ],
  "safe": [
   "file_path_safe_to",
   "http_firebase_file_name"
  ],
  "encodeURIComponent": [
   "file_path_safe_to"
  ],
  "readFile": [
   "file_read",
   "file_read_buffer"
  ],
  "file_read_buffer": [
   "file_read_buffer",
   "http_local"
  ],
  "json_from": [
   "file_read_json",
   "firebase_storage_download_json",
   "firebase_storage_download_property",
   "http_json",
   "json_from",
   "storage_local_get"
  ],
  "folder_user_combine": [
   "file_temp",
   "firebase_storage_download_path",
   "folder_user_combine"
  ],
  "uuid": [
   "file_temp",
   "git_history_delete",
   "uuid"
  ],
  "file_temp": [
   "file_temp",
   "sandbox_2"
  ],
  "lambda$temp_path": [
   "file_temp"
  ],
  "temp_path": [
   "file_temp",
   "sandbox_2"
  ],
  "file_write_generic": [
   "file_write",
   "file_write_buffer",
   "file_write_generic"
  ],
  "overwrite": [
   "file_write",
   "file_write_generic"
  ],
  "file_write_buffer": [
   "file_write_buffer",
   "http_local"
  ],
  "file_write_json": [
   "file_write_json"
  ],
  "global_function_async": [
   "firebase_admin",
   "global_function_async"
  ],
  "firebase_admin_get": [
   "firebase_admin",
   "firebase_admin_get"
  ],
  "firebase_admin": [
   "firebase_admin",
   "firebase_bucket"
  ],
  "admin": [
   "firebase_admin",
   "firebase_admin_get",
   "firebase_bucket"
  ],
  "firebase_storage_url_project": [
   "firebase_admin_get",
   "firebase_storage_url",
   "firebase_storage_url_project"
  ],
  "firebase_service_account": [
   "firebase_admin_get",
   "firebase_service_account"
  ],
  "service_account": [
   "firebase_admin_get",
   "firebase_service_account"
  ],
  "initializeApp": [
   "firebase_admin_get"
  ],
  "credential": [
   "firebase_admin_get"
  ],
  "cert": [
   "firebase_admin_get"
  ],
  "storageBucket": [
   "firebase_admin_get"
  ],
  "firebase_bucket": [
   "firebase_bucket",
   "firebase_storage_download",
   "firebase_storage_exists",
   "firebase_upload_generic"
  ],
  "bucket": [
   "firebase_bucket",
   "firebase_storage_download",
   "firebase_storage_exists",
   "firebase_upload_generic"
  ],
  "storage": [
   "firebase_bucket"
  ],
  "firebase_deploy": [
   "firebase_deploy"
  ],
  "firebase_deploy_function_destination_version": [
   "firebase_deploy_function",
   "firebase_deploy_function_destination_version",
   "firebase_storage_function_run"
  ],
  "firebase_deploy_function_destination": [
   "firebase_deploy_function",
   "firebase_deploy_function_destination",
   "firebase_deploy_function_destination_version"
  ],
  "function_dependencies_code": [
   "firebase_deploy_function",
   "function_dependencies_code",
   "function_dependencies_code_copy"
  ],
  "firebase_deploy_function": [
   "firebase_deploy_function",
   "firebase_deploy_function_app_current"
  ],
  "version": [
   "firebase_deploy_function"
  ],
  "destination_version": [
   "firebase_deploy_function",
   "firebase_storage_function_run"
  ],
  "firebase_deploy_function_app_current": [
   "firebase_deploy_function_app_current"
  ],
  "destination2": [
   "firebase_deploy_function_destination_version"
  ],
  "string_replace": [
   "firebase_path_fix",
   "firebase_storage_url",
   "git_repo_rename_normalize",
   "string_replace"
  ],
  "firebase_path_fix": [
   "firebase_path_fix",
   "firebase_storage_download",
   "firebase_storage_exists",
   "firebase_upload_generic",
   "http_firebase_file_path"
  ],
  "replaced": [
   "firebase_path_fix",
   "firebase_storage_url",
   "marker_call_atomize",
   "marker_call_replace",
   "marker_call_replace_generic",
   "string_replace"
  ],
  "folder_find_starts_with": [
   "firebase_service_account",
   "folder_find_starts_with"
  ],
  "folder_previous": [
   "firebase_service_account",
   "folder_previous",
   "git_history_delete",
   "html_update_dev",
   "path_join",
   "repos_folder",
   "server"
  ],
  "prefix": [
   "firebase_service_account",
   "folder_find_starts_with",
   "js_code_declaration_args",
   "list_filter_starts_with",
   "list_filter_starts_with_not_multiple",
   "list_map_prefix_any",
   "list_map_prefix_without",
   "list_map_prefix_without_any",
   "messenger_reply_messages_urls_add_page",
   "messenger_reply_unread_collect",
   "puppeteer_hrefs_starts_with",
   "string_prefix_without",
   "string_starts_with"
  ],
  "path_folder": [
   "firebase_service_account",
   "folder_find_starts_with",
   "folder_read",
   "folder_read_async",
   "folder_read_files",
   "repos_names"
  ],
  "only": [
   "firebase_service_account",
   "folder_find_starts_with",
   "list_find",
   "list_single",
   "function_exists_inner",
   "function_name_to_path_search"
  ],
  "http": [
   "firebase_storage_download",
   "http",
   "http_firebase",
   "http_json"
  ],
  "firebase_storage_url": [
   "firebase_storage_download",
   "firebase_storage_url"
  ],
  "firebase_storage_download": [
   "firebase_storage_download",
   "firebase_storage_download_json",
   "firebase_storage_download_property",
   "http_firebase"
  ],
  "file": [
   "firebase_storage_download",
   "firebase_storage_exists",
   "firebase_upload_generic",
   "folder_read_files"
  ],
  "download": [
   "firebase_storage_download"
  ],
  "firebase_storage_download_json": [
   "firebase_storage_download_ebible",
   "firebase_storage_download_json"
  ],
  "firebase_storage_download_path": [
   "firebase_storage_download_path"
  ],
  "firebase_storage_download_property": [
   "firebase_storage_download_property",
   "firebase_storage_function_run"
  ],
  "storage_path": [
   "firebase_storage_download_property",
   "firebase_storage_url"
  ],
  "firebase_storage_exists": [
   "firebase_storage_exists",
   "http_firebase"
  ],
  "err": [
   "firebase_storage_exists",
   "import_install"
  ],
  "js_code_call_statement": [
   "firebase_storage_function_run",
   "html_update_generic",
   "js_code_call_statement"
  ],
  "call": [
   "firebase_storage_function_run",
   "html_update_generic",
   "js_calls_to_each"
  ],
  "eval": [
   "firebase_storage_function_run"
  ],
  "firebase_upload_generic": [
   "firebase_upload_buffer",
   "firebase_upload_generic",
   "firebase_upload_string"
  ],
  "firebase_upload_buffer": [
   "firebase_upload_buffer",
   "http_firebase"
  ],
  "content": [
   "firebase_upload_buffer",
   "firebase_upload_object",
   "firebase_upload_string"
  ],
  "Buffer": [
   "firebase_upload_buffer",
   "firebase_upload_string",
   "http",
   "string_base64_to"
  ],
  "contentType": [
   "firebase_upload_buffer",
   "firebase_upload_string"
  ],
  "resumable": [
   "firebase_upload_buffer"
  ],
  "retry": [
   "firebase_upload_generic",
   "retry"
  ],
  "merged": [
   "firebase_upload_generic"
  ],
  "metadata": [
   "firebase_upload_generic"
  ],
  "cacheControl": [
   "firebase_upload_generic"
  ],
  "save": [
   "firebase_upload_generic"
  ],
  "firebase_upload_string": [
   "firebase_upload_object",
   "firebase_upload_string"
  ],
  "gzip": [
   "firebase_upload_string"
  ],
  "floor": [
   "floor",
   "integer_random",
   "list_random_item"
  ],
  "floored": [
   "floor"
  ],
  "folder_current": [
   "folder_current",
   "folder_current_join",
   "git_push_schedule_command"
  ],
  "folder_current_join": [
   "folder_current_join",
   "folder_current_join_code"
  ],
  "value_string": [
   "folder_current_join",
   "folder_current_join_code",
   "js_code_string",
   "js_string"
  ],
  "js_code_string": [
   "folder_current_join_code",
   "js_code_string",
   "js_dollar_g",
   "js_dollar_new",
   "js_marker_insert",
   "marker_assign_replace_string"
  ],
  "folder_current_join_code": [
   "folder_current_join_code",
   "function_name_to_path_import",
   "html_update_generic"
  ],
  "f_name_ext": [
   "folder_current_join_code",
   "function_name_to_base",
   "function_name_to_path_import",
   "html_update_dev",
   "html_update_generic",
   "html_update_public"
  ],
  "folder_delete": [
   "folder_delete",
   "git_history_delete"
  ],
  "folder_path": [
   "folder_delete"
  ],
  "rm": [
   "folder_delete"
  ],
  "force": [
   "folder_delete"
  ],
  "folder_read_async": [
   "folder_find_starts_with",
   "folder_read_async"
  ],
  "list_find": [
   "folder_find_starts_with",
   "list_find",
   "list_find_property",
   "list_find_starts_with"
  ],
  "files": [
   "folder_find_starts_with",
   "folder_read_async",
   "folder_read_files"
  ],
  "folder_read": [
   "folder_read",
   "repos_names"
  ],
  "all": [
   "folder_read",
   "folder_read_files",
   "list_includes_assert",
   "list_wait",
   "repos_paths_map_unordered",
   "repo_exists_assert"
  ],
  "readdir": [
   "folder_read",
   "folder_read_async"
  ],
  "entries": [
   "folder_read_async"
  ],
  "withFileTypes": [
   "folder_read_async"
  ],
  "entry": [
   "folder_read_async"
  ],
  "isFile": [
   "folder_read_async",
   "folder_read_files"
  ],
  "filter": [
   "folder_read_async",
   "folder_read_files",
   "list_filter",
   "list_filter_property",
   "list_find_property",
   "messenger_reply_messages",
   "puppeteer_hrefs",
   "visit_filter",
   "visit_filter_async",
   "visit_filter_recursive",
   "visit_filter_recursive_async"
  ],
  "map": [
   "folder_read_async",
   "list_map",
   "messenger_reply_messages",
   "puppeteer_hrefs",
   "roman_to_integer"
  ],
  "statSync": [
   "folder_read_files"
  ],
  "readdirSync": [
   "folder_read_files"
  ],
  "folder_src": [
   "folder_src",
   "functions_path",
   "html_update_dev",
   "html_update_public"
  ],
  "src": [
   "folder_src",
   "html_update_dev",
   "html_update_public",
   "messenger_reply_messages"
  ],
  "folder_user": [
   "folder_user",
   "folder_user_combine",
   "sandbox_2"
  ],
  "f": [
   "folder_user",
   "function_aliases_restore",
   "js_await_add_inner",
   "js_function_last_asyncify",
   "js_stack_last_function",
   "marker_param_add",
   "sandbox_2"
  ],
  "list_to": [
   "functions_combine",
   "list_to"
  ],
  "list_size_1_assert": [
   "functions_combine",
   "js_dollar_g",
   "list_single",
   "list_size_1_assert"
  ],
  "js_auto": [
   "functions_combine",
   "function_auto",
   "js_auto",
   "marker_above_generic"
  ],
  "functions_combine_name": [
   "functions_combine",
   "functions_combine_name",
   "functions_combine_test"
  ],
  "function_new_transform": [
   "functions_combine",
   "function_new_transform",
   "function_wrap"
  ],
  "functions_combine": [
   "functions_combine",
   "functions_combine_test"
  ],
  "f_names_comma": [
   "functions_combine",
   "functions_combine_name",
   "functions_combine_test"
  ],
  "f_names": [
   "functions_combine",
   "functions_combine_name",
   "functions_names_from_path",
   "functions_search",
   "function_names_to_acronyms",
   "function_params_consolidate",
   "function_rename_identifiers",
   "js_expand_generic",
   "js_imports_missing",
   "string_split_comma",
   "functions_names",
   "repos_paths_map_unordered_combine",
   "functions_paths",
   "functions_names_to_paths"
  ],
  "function_name_unalias": [
   "functions_combine_name",
   "function_copy_suffix_add",
   "function_import",
   "function_name_to_path_unalias",
   "function_name_unalias",
   "function_run_log",
   "function_watch_ending_change",
   "function_wrap_suffix_add",
   "js_call_fill",
   "task_new",
   "function_copy"
  ],
  "string_split_comma": [
   "functions_combine_name",
   "list_map_split_comma",
   "string_split_comma"
  ],
  "results": [
   "functions_combine_name"
  ],
  "list_join_comma": [
   "functions_combine_test",
   "list_join_comma"
  ],
  "function_delete_if_exists": [
   "functions_combine_test",
   "function_delete_if_exists"
  ],
  "list_map_name": [
   "functions_combine_test",
   "list_map_name"
  ],
  "functions_combine_test": [
   "functions_combine_test"
  ],
  "names": [
   "functions_combine_test",
   "function_aliases_search",
   "js_declaration_params_names_node",
   "js_dollar_choice_arguments_names",
   "js_dollar_new_args_inner",
   "js_identifiers_names",
   "js_identifiers_to_names",
   "js_identifier_defineds",
   "list_join_comma",
   "list_map_squash",
   "marker_top"
  ],
  "function_format": [
   "functions_format",
   "function_format"
  ],
  "functions_names": [
   "functions_format",
   "functions_names",
   "functions_names_includes",
   "functions_search",
   "functions_transform",
   "function_names_to_acronyms",
   "function_params_consolidate",
   "js_expand_generic",
   "js_imports_missing",
   "marker_functionize"
  ],
  "functions_format": [
   "functions_format"
  ],
  "functions_transform": [
   "functions_log_remove",
   "functions_transform"
  ],
  "js_log_remove": [
   "functions_log_remove",
   "js_log_remove"
  ],
  "functions_log_remove": [
   "functions_log_remove"
  ],
  "functions_names_from_path": [
   "functions_names",
   "functions_names_from_path",
   "functions_paths",
   "functions_names_to_paths"
  ],
  "repos_names": [
   "repos_acronyms_to_names",
   "repos_gitignore_overwrite",
   "repos_names",
   "repos_paths_map_unordered",
   "repo_exists_assert"
  ],
  "sleep": [
   "http_sleep",
   "keyboard_type_delay",
   "retry",
   "s5_inner",
   "sleep"
  ],
  "functions_path": [
   "functions_names",
   "functions_path",
   "function_name_to_path",
   "watch",
   "functions_paths",
   "repos_paths_map_unordered_combine_squash"
  ],
  "rns": [
   "repos_names"
  ],
  "paths": [
   "functions_names_from_path",
   "git_push_schedule_command",
   "path_resolve"
  ],
  "functions_names_includes": [
   "functions_names_includes",
   "js_call_fill",
   "js_call_function_if"
  ],
  "search_generic": [
   "functions_search",
   "function_aliases_search",
   "search_generic"
  ],
  "functions_search": [
   "functions_search",
   "functions_search_open",
   "tasks_run"
  ],
  "search": [
   "functions_search",
   "functions_search_open",
   "function_aliases_search",
   "js_visit_match",
   "search_generic",
   "tasks_run"
  ],
  "function_open": [
   "functions_search_open",
   "function_list_generate",
   "function_new",
   "function_open",
   "function_open_app",
   "function_open_dollar_choice",
   "js_auto_transform_new_inner"
  ],
  "list_single": [
   "functions_search_open",
   "function_acronym_to_name",
   "js_declaration_single",
   "js_declare_single",
   "js_imports_declarations",
   "js_marker_named_ast",
   "js_statement_call_get",
   "js_visit_match",
   "list_find",
   "list_single",
   "marker_rename",
   "repo_acronym_to_name",
   "function_exists_inner",
   "function_name_to_path_search"
  ],
  "functions_search_open": [
   "functions_search_open"
  ],
  "list_size_1": [
   "function_acronym_to_name",
   "js_declare_single",
   "js_dollar_a",
   "js_dollar_s",
   "js_imports_declarations",
   "list_size_1",
   "list_size_1_assert_message",
   "marker_rename",
   "function_exists_inner",
   "function_name_to_path_search"
  ],
  "object_property_exists": [
   "function_acronym_to_name",
   "function_alias_add_generic",
   "js_node_is",
   "object_merge_generic",
   "object_property_exists",
   "object_property_exists_assert",
   "object_property_exists_equals",
   "object_property_exists_not",
   "object_property_initialize",
   "object_property_lambda",
   "object_property_lambda_async"
  ],
  "function_names_to_acronyms": [
   "function_acronym_to_name",
   "function_acronym_to_names",
   "function_names_to_acronyms"
  ],
  "function_acronym_to_name": [
   "function_acronym_to_name",
   "function_name_unalias"
  ],
  "alias": [
   "function_acronym_to_name",
   "function_alias_add",
   "function_alias_add_generic",
   "function_alias_generic",
   "function_new_aliased"
  ],
  "expanded": [
   "function_acronym_to_name",
   "function_name_unalias"
  ],
  "expandeds": [
   "function_acronym_to_name",
   "function_name_unalias"
  ],
  "acronyms": [
   "function_acronym_to_name",
   "function_acronym_to_names",
   "function_alias_rename",
   "function_names_to_acronyms"
  ],
  "exists2": [
   "function_acronym_to_name",
   "function_exists_inner",
   "function_name_to_path_search"
  ],
  "s1": [
   "function_acronym_to_name",
   "js_declare_single",
   "js_dollar_a",
   "js_dollar_s",
   "list_size_1",
   "marker_rename"
  ],
  "function_acronym_to_names": [
   "function_acronym_to_names"
  ],
  "acronym": [
   "function_acronym_to_names",
   "function_alias_rename",
   "function_name_to_acronym",
   "git_publish_initial",
   "repo_acronym_to_name",
   "repo_acronym_to_path"
  ],
  "function_alias_add_generic": [
   "function_aliases",
   "function_alias_add_generic",
   "function_alias_generic",
   "function_name_unalias"
  ],
  "function_aliases": [
   "function_aliases",
   "function_aliases_inverted"
  ],
  "aliases": [
   "function_aliases",
   "function_aliases_inverted",
   "function_alias_add",
   "function_alias_add_generic",
   "function_alias_change",
   "function_alias_delete",
   "function_alias_rename",
   "function_alias_replace"
  ],
  "object_invert": [
   "function_aliases_inverted",
   "function_alias_rename",
   "function_names_to_acronyms",
   "object_invert",
   "repos_acronyms_to_names"
  ],
  "function_aliases_inverted": [
   "function_aliases_inverted",
   "function_aliases_search",
   "prompt_previous"
  ],
  "inverted": [
   "function_aliases_inverted",
   "function_alias_rename",
   "object_invert",
   "prompt_previous",
   "repos_acronyms_to_names",
   "repo_acronym_to_name"
  ],
  "function_aliases_restore": [
   "function_aliases_restore"
  ],
  "ts": [
   "function_aliases_restore"
  ],
  "tf": [
   "function_aliases_restore"
  ],
  "ac": [
   "function_aliases_restore"
  ],
  "al": [
   "function_aliases_restore"
  ],
  "ni": [
   "function_aliases_restore",
   "js_node_is",
   "marker_enter",
   "marker_next_get",
   "marker_up"
  ],
  "fa": [
   "function_aliases_restore"
  ],
  "mr": [
   "function_aliases_restore"
  ],
  "md": [
   "function_aliases_restore"
  ],
  "ma": [
   "function_aliases_restore"
  ],
  "mc": [
   "function_aliases_restore"
  ],
  "ft": [
   "function_aliases_restore"
  ],
  "fm": [
   "function_aliases_restore"
  ],
  "ai": [
   "function_aliases_restore",
   "list_swap"
  ],
  "np": [
   "function_aliases_restore"
  ],
  "ps": [
   "function_aliases_restore"
  ],
  "pn": [
   "function_aliases_restore"
  ],
  "ad": [
   "function_aliases_restore"
  ],
  "ar": [
   "function_aliases_restore"
  ],
  "fd": [
   "function_aliases_restore",
   "js_outside_move"
  ],
  "de": [
   "function_aliases_restore"
  ],
  "ir": [
   "function_aliases_restore"
  ],
  "au": [
   "function_aliases_restore"
  ],
  "fw": [
   "function_aliases_restore"
  ],
  "psn": [
   "function_aliases_restore"
  ],
  "irs": [
   "function_aliases_restore"
  ],
  "ftc": [
   "function_aliases_restore"
  ],
  "mcr": [
   "function_aliases_restore"
  ],
  "mnd": [
   "function_aliases_restore"
  ],
  "fts": [
   "function_aliases_restore"
  ],
  "ire": [
   "function_aliases_restore"
  ],
  "mx": [
   "function_aliases_restore"
  ],
  "mn": [
   "function_aliases_restore"
  ],
  "mca": [
   "function_aliases_restore"
  ],
  "as": [
   "function_aliases_restore"
  ],
  "mg": [
   "function_aliases_restore"
  ],
  "mm": [
   "function_aliases_restore"
  ],
  "mf": [
   "function_aliases_restore"
  ],
  "fws": [
   "function_aliases_restore"
  ],
  "nj": [
   "function_aliases_restore"
  ],
  "na": [
   "function_aliases_restore"
  ],
  "so": [
   "function_aliases_restore"
  ],
  "tr": [
   "function_aliases_restore"
  ],
  "op": [
   "function_aliases_restore"
  ],
  "ea": [
   "function_aliases_restore",
   "function_run_prompt"
  ],
  "tns": [
   "function_aliases_restore"
  ],
  "sei": [
   "function_aliases_restore"
  ],
  "lf": [
   "function_aliases_restore"
  ],
  "ls": [
   "function_aliases_restore"
  ],
  "or": [
   "function_aliases_restore"
  ],
  "st": [
   "function_aliases_restore"
  ],
  "ntn": [
   "function_aliases_restore"
  ],
  "oc": [
   "function_aliases_restore",
   "js_code_arrow"
  ],
  "jpe": [
   "function_aliases_restore"
  ],
  "lg": [
   "function_aliases_restore"
  ],
  "l1": [
   "function_aliases_restore"
  ],
  "lal": [
   "function_aliases_restore"
  ],
  "l2": [
   "function_aliases_restore"
  ],
  "fnu": [
   "function_aliases_restore"
  ],
  "lin": [
   "function_aliases_restore"
  ],
  "li": [
   "function_aliases_restore"
  ],
  "l": [
   "function_aliases_restore",
   "js_dollar_a_generic",
   "js_dollar_x",
   "list_concat",
   "list_difference",
   "list_filter",
   "list_intersect",
   "list_is",
   "list_squash",
   "marker_down_choices"
  ],
  "at": [
   "function_aliases_restore"
  ],
  "ld": [
   "function_aliases_restore"
  ],
  "ss": [
   "function_aliases_restore"
  ],
  "ssc": [
   "function_aliases_restore"
  ],
  "fnt": [
   "function_aliases_restore"
  ],
  "jps": [
   "function_aliases_restore"
  ],
  "fc": [
   "function_aliases_restore"
  ],
  "lm": [
   "function_aliases_restore"
  ],
  "lmu": [
   "function_aliases_restore"
  ],
  "lmp": [
   "function_aliases_restore"
  ],
  "fst": [
   "function_aliases_restore"
  ],
  "fsp": [
   "function_aliases_restore"
  ],
  "atn": [
   "function_aliases_restore"
  ],
  "cs": [
   "function_aliases_restore"
  ],
  "er": [
   "function_aliases_restore"
  ],
  "fsts": [
   "function_aliases_restore"
  ],
  "nt": [
   "function_aliases_restore",
   "js_if_blockify_generic",
   "js_node_type",
   "js_node_types",
   "marker_enter"
  ],
  "nti": [
   "function_aliases_restore",
   "js_assign_combine",
   "js_calls_to_each",
   "js_if_blockify_generic",
   "js_node_type_not_is",
   "marker_rename"
  ],
  "oe": [
   "function_aliases_restore",
   "js_dollar_choice_arguments_names",
   "js_dollar_new",
   "marker_next_declare_single_init",
   "marker_screen_add"
  ],
  "oec": [
   "function_aliases_restore"
  ],
  "cd": [
   "function_aliases_restore"
  ],
  "ars": [
   "function_aliases_restore"
  ],
  "mdc": [
   "function_aliases_restore"
  ],
  "lz": [
   "function_aliases_restore"
  ],
  "mrt": [
   "function_aliases_restore"
  ],
  "fy": [
   "function_aliases_restore"
  ],
  "lk": [
   "function_aliases_restore"
  ],
  "ll": [
   "function_aliases_restore"
  ],
  "jnt": [
   "function_aliases_restore"
  ],
  "lx": [
   "function_aliases_restore"
  ],
  "x": [
   "function_aliases_restore"
  ],
  "ini": [
   "function_aliases_restore"
  ],
  "lu": [
   "function_aliases_restore"
  ],
  "ntsi": [
   "function_aliases_restore"
  ],
  "jv": [
   "function_aliases_restore"
  ],
  "jvt": [
   "function_aliases_restore"
  ],
  "fcp": [
   "function_aliases_restore"
  ],
  "me": [
   "function_aliases_restore"
  ],
  "lr": [
   "function_aliases_restore"
  ],
  "lis": [
   "function_aliases_restore"
  ],
  "mab": [
   "function_aliases_restore"
  ],
  "mda": [
   "function_aliases_restore"
  ],
  "ja": [
   "function_aliases_restore"
  ],
  "lax": [
   "function_aliases_restore"
  ],
  "lj": [
   "function_aliases_restore"
  ],
  "opd": [
   "function_aliases_restore"
  ],
  "fwc": [
   "function_aliases_restore"
  ],
  "fntp": [
   "function_aliases_restore"
  ],
  "is": [
   "function_aliases_restore",
   "js_dollar_a"
  ],
  "lfp": [
   "function_aliases_restore"
  ],
  "ml": [
   "function_aliases_restore"
  ],
  "mu": [
   "function_aliases_restore",
   "messenger_reply"
  ],
  "mb": [
   "function_aliases_restore"
  ],
  "mna": [
   "function_aliases_restore"
  ],
  "mpa": [
   "function_aliases_restore"
  ],
  "ox": [
   "function_aliases_restore"
  ],
  "mi": [
   "function_aliases_restore"
  ],
  "mbt": [
   "function_aliases_restore"
  ],
  "rg": [
   "function_aliases_restore"
  ],
  "mdm": [
   "function_aliases_restore"
  ],
  "mdd": [
   "function_aliases_restore"
  ],
  "muu": [
   "function_aliases_restore"
  ],
  "for": [
   "function_aliases_restore"
  ],
  "fpc": [
   "function_aliases_restore"
  ],
  "oh": [
   "function_aliases_restore"
  ],
  "an": [
   "function_aliases_restore"
  ],
  "function_aliases_search": [
   "function_aliases_search"
  ],
  "names_to_aliases": [
   "function_aliases_search"
  ],
  "undefined_not_is_assert": [
   "function_alias_add",
   "object_invert",
   "undefined_not_is_assert"
  ],
  "list_sort_string_size": [
   "function_alias_add",
   "list_sort_string_size"
  ],
  "function_alias_generic": [
   "function_alias_add",
   "function_alias_change",
   "function_alias_delete",
   "function_alias_generic",
   "function_alias_replace"
  ],
  "function_alias_add": [
   "function_alias_add",
   "function_new_aliased"
  ],
  "unaliased": [
   "function_alias_add",
   "function_alias_add_generic",
   "function_alias_change",
   "function_copy",
   "function_copy_suffix_add",
   "function_current_set",
   "function_import",
   "function_name_to_path_unalias",
   "function_name_unalias",
   "function_parse",
   "function_run_log",
   "function_watch_ending_change",
   "function_wrap",
   "function_wrap_suffix_add",
   "js_call_fill",
   "js_call_new_code",
   "js_code_call_args_await_maybe",
   "task_new",
   "function_name_to_path_search"
  ],
  "function_alias_change": [
   "function_alias_change"
  ],
  "alias_old": [
   "function_alias_change",
   "function_alias_delete",
   "function_alias_replace"
  ],
  "alias_new": [
   "function_alias_change"
  ],
  "function_alias_delete": [
   "function_alias_delete"
  ],
  "object_property_exists_not": [
   "function_alias_rename",
   "js_await_add_inner",
   "object_property_exists_not",
   "object_property_exists_not_assert"
  ],
  "function_alias_rename": [
   "function_alias_rename",
   "function_rename"
  ],
  "function_alias_replace": [
   "function_alias_replace"
  ],
  "function_auto": [
   "function_auto",
   "function_auto_path"
  ],
  "function_auto_path": [
   "function_auto_path",
   "watch"
  ],
  "js_identifier_replace": [
   "function_copy",
   "function_rename_identifiers",
   "js_expand_generic",
   "js_identifier_replace"
  ],
  "function_name_to_path_unalias": [
   "function_copy",
   "function_exists",
   "function_format",
   "function_name_to_path_unalias",
   "function_open",
   "function_open_editor",
   "function_parse",
   "function_read"
  ],
  "function_copy": [
   "function_copy",
   "function_copy_suffix_add",
   "function_rename"
  ],
  "f_name_old": [
   "function_copy",
   "function_copy_suffix_add"
  ],
  "f_name_new": [
   "function_copy",
   "function_watch_ending_change",
   "marker_functionize"
  ],
  "f_path_old": [
   "function_copy"
  ],
  "unaliased_old": [
   "function_copy"
  ],
  "f_path_new": [
   "function_copy"
  ],
  "unaliased_new": [
   "function_copy"
  ],
  "function_copy_suffix_add": [
   "function_copy_suffix_add"
  ],
  "function_parse_declaration_js_unparse": [
   "function_current_declaration_code",
   "function_current_set",
   "function_parse_declaration_js_unparse",
   "function_path_declaration_unparse",
   "function_transform"
  ],
  "function_current_declaration_code": [
   "function_current_declaration_code"
  ],
  "marker_top": [
   "function_current_set",
   "marker_remove_marker_top",
   "marker_top"
  ],
  "function_exists": [
   "function_current_set",
   "function_delete_if_exists",
   "function_exists",
   "function_list_generate",
   "function_params_new"
  ],
  "marker_first": [
   "function_current_set",
   "marker_first"
  ],
  "marker_current_set": [
   "function_current_set",
   "marker_current_set",
   "marker_new"
  ],
  "task_new": [
   "function_current_set_task_new",
   "task_new",
   "task_new_simple"
  ],
  "function_current_set_task_new": [
   "function_current_set_task_new",
   "function_current_set_task_new_simple"
  ],
  "task_name": [
   "function_current_set_task_new",
   "string_empty_not_is_assert",
   "task_new"
  ],
  "function_current_set_task_new_simple": [
   "function_current_set_task_new_simple"
  ],
  "function_delete": [
   "function_delete",
   "function_delete_if_exists",
   "function_rename"
  ],
  "list_adder_unique_async": [
   "function_dependencies",
   "list_adder_unique_async"
  ],
  "visit_unique_async": [
   "function_dependencies",
   "visit_unique_async"
  ],
  "function_imports": [
   "function_dependencies",
   "function_imports"
  ],
  "function_dependencies": [
   "function_dependencies",
   "function_dependencies_code"
  ],
  "node": [
   "function_dependencies",
   "function_type_first",
   "js_arrow_to_function",
   "js_assign_combine",
   "js_atomize_function",
   "js_await_add_inner",
   "js_bang_to_not",
   "js_block_child_graph",
   "js_calls_to_each",
   "js_call_fill",
   "js_call_function_if",
   "js_declaration_params_names_node",
   "js_declaration_single",
   "js_declare_assign",
   "js_dollar",
   "js_dollar_aa",
   "js_dollar_f",
   "js_dollar_g",
   "js_dollar_ien",
   "js_dollar_ine",
   "js_dollar_ir",
   "js_dollar_l",
   "js_dollar_x",
   "js_function_id_add",
   "js_identifiers",
   "js_identifiers_named_count",
   "js_identifiers_names",
   "js_identifier_defineds",
   "js_identifier_is",
   "js_identifier_replace",
   "js_if_blockify_generic",
   "js_if_else_if_combine",
   "js_imports_declarations",
   "js_let_add",
   "js_log_remove",
   "js_marker_name_get",
   "js_node_atomize",
   "js_node_types",
   "js_node_type_is",
   "js_node_type_is_assert",
   "js_node_type_is_if",
   "js_node_type_is_if_async",
   "js_node_type_not_is",
   "js_node_type_not_is_if",
   "js_return_atomize",
   "js_return_on",
   "js_return_on_async",
   "js_statement_call_get",
   "js_statement_expression_get",
   "js_unparse",
   "js_visit_calls_named",
   "js_visit_match",
   "js_visit_nodes",
   "js_visit_types",
   "log_unparse",
   "marker_down_choices_lambda",
   "marker_functionize",
   "marker_rename",
   "messenger_reply_messages",
   "visit",
   "visit_async",
   "visit_filter",
   "visit_filter_async",
   "visit_filter_recursive",
   "visit_filter_recursive_async",
   "visit_unique_async"
  ],
  "function_parse_declaration": [
   "function_dependencies_code",
   "function_imports_missing",
   "function_parse_declaration",
   "function_parse_declaration_js_unparse",
   "function_wrap",
   "js_call_new_code",
   "js_expand_generic"
  ],
  "ds": [
   "function_dependencies_code"
  ],
  "waited": [
   "function_dependencies_code",
   "js_block_child_graph_unparse",
   "list_map_unordered_async",
   "repos_gitignore_overwrite"
  ],
  "waited2": [
   "function_dependencies_code"
  ],
  "function_dependencies_code_copy": [
   "function_dependencies_code_copy"
  ],
  "function_exists_inner": [
   "function_exists_inner"
  ],
  "function_exists_strict": [
   "function_exists_strict",
   "js_node_atomize"
  ],
  "formatted": [
   "function_format",
   "function_new_declaration",
   "js_format"
  ],
  "object_replace": [
   "function_identifier_replace",
   "js_atomize_function",
   "js_await_add_inner",
   "js_bang_to_not",
   "js_call_fill",
   "js_dollar_a",
   "js_dollar_f",
   "js_dollar_g",
   "js_dollar_i",
   "js_dollar_r",
   "js_dollar_s",
   "js_if_blockify_generic",
   "js_let_add",
   "js_node_atomize",
   "js_return_code_replace",
   "marker_call_replace",
   "marker_rename",
   "object_replace"
  ],
  "js_identifiers_named": [
   "function_identifier_replace",
   "js_dollar_a",
   "js_identifiers_named"
  ],
  "function_identifier_replace": [
   "function_identifier_replace",
   "function_identifier_replace_ending_remove",
   "function_identifier_replace_suffix_add"
  ],
  "identifier_name": [
   "function_identifier_replace",
   "function_identifier_replace_ending_remove",
   "function_identifier_replace_suffix_add",
   "js_identifiers_named"
  ],
  "replacement": [
   "function_identifier_replace",
   "function_identifier_replace_suffix_add",
   "js_dollar_a",
   "marker_call_replace",
   "marker_if_test_replace"
  ],
  "identifiers_named": [
   "function_identifier_replace",
   "js_identifiers_named"
  ],
  "function_identifier_replace_ending_remove": [
   "function_identifier_replace_ending_remove"
  ],
  "ending_to_remove": [
   "function_identifier_replace_ending_remove"
  ],
  "removed": [
   "function_identifier_replace_ending_remove",
   "visit_filter_recursive",
   "visit_filter_recursive_async"
  ],
  "function_identifier_replace_suffix_add": [
   "function_identifier_replace_suffix_add"
  ],
  "suffix_to_add": [
   "function_identifier_replace_suffix_add"
  ],
  "fileURLToPath": [
   "function_import",
   "server"
  ],
  "function_name_to_base": [
   "function_import",
   "function_name_to_base",
   "function_name_to_path_import",
   "html_update_generic",
   "function_name_folder_to_path"
  ],
  "function_import": [
   "function_import",
   "function_run",
   "function_transform_command"
  ],
  "__filename": [
   "function_import",
   "server"
  ],
  "import": [
   "function_import",
   "server"
  ],
  "meta": [
   "function_import",
   "server"
  ],
  "__dirname": [
   "function_import",
   "server"
  ],
  "imported": [
   "function_import",
   "js_imports_declarations"
  ],
  "imported_fn": [
   "function_import"
  ],
  "js_imports": [
   "function_imports",
   "js_imports",
   "js_imports_missing"
  ],
  "function_parse": [
   "function_imports",
   "function_parse",
   "function_parse_declaration",
   "function_transform_result",
   "function_types",
   "function_type_first",
   "js_node_atomize"
  ],
  "imports": [
   "function_imports",
   "function_imports_add",
   "js_imports",
   "js_imports_all",
   "js_imports_declarations",
   "js_imports_missing",
   "js_imports_unused"
  ],
  "function_name_to_path_import": [
   "function_imports_add",
   "function_name_to_path_import",
   "js_imports_paths_fix"
  ],
  "js_code_import_single": [
   "function_imports_add",
   "html_update_generic",
   "js_code_import_single"
  ],
  "js_parse_statement_module": [
   "function_imports_add",
   "function_new",
   "js_call_new_code",
   "js_parse_statement_module",
   "marker_functionize"
  ],
  "function_imports_add": [
   "function_imports_add",
   "function_imports_fix",
   "function_imports_missing_add",
   "js_imports_missing_add"
  ],
  "import_": [
   "function_imports_add",
   "function_name_to_path_import",
   "js_code_import_single"
  ],
  "statement": [
   "function_imports_add",
   "js_parse_expression",
   "js_parse_statement",
   "js_parse_statement_module",
   "marker_above_generic"
  ],
  "js_imports_unused_remove": [
   "function_imports_fix",
   "js_imports_unused_remove"
  ],
  "function_imports_missing": [
   "function_imports_fix",
   "function_imports_missing",
   "function_imports_missing_add"
  ],
  "function_imports_fix": [
   "function_imports_fix"
  ],
  "imports_missing": [
   "function_imports_fix",
   "function_imports_missing",
   "function_imports_missing_add",
   "js_imports_missing",
   "js_imports_missing_add"
  ],
  "js_imports_missing": [
   "function_imports_missing",
   "js_imports_missing",
   "js_imports_missing_add"
  ],
  "function_imports_missing_add": [
   "function_imports_missing_add"
  ],
  "js_statement_return_add": [
   "function_list_generate",
   "js_if_blockify_generic",
   "js_statement_return_add"
  ],
  "f_generate": [
   "function_list_generate"
  ],
  "f_generate_name": [
   "function_list_generate"
  ],
  "function_name_to_acronym": [
   "function_names_to_acronyms",
   "function_name_to_acronym"
  ],
  "function_name_separator": [
   "function_name_combine_multiple",
   "function_name_separator",
   "function_name_to_parts",
   "tasks_run"
  ],
  "list_join": [
   "function_name_combine_multiple",
   "list_join",
   "list_join_comma",
   "list_join_comma_space",
   "list_join_empty",
   "list_join_newline",
   "list_join_newline_2",
   "list_join_slash_forward",
   "list_join_space",
   "string_replace"
  ],
  "parts": [
   "function_name_combine_multiple",
   "function_name_to_acronym",
   "function_name_to_parts",
   "path_join"
  ],
  "separator": [
   "function_name_combine_multiple",
   "function_name_separator",
   "function_name_to_parts",
   "js_dollar",
   "list_join",
   "list_join_newline",
   "list_join_newline_2",
   "string_split",
   "string_split_newline",
   "tasks_run"
  ],
  "list_join_empty": [
   "function_name_to_acronym",
   "list_join_empty"
  ],
  "function_name_to_parts": [
   "function_name_to_acronym",
   "function_name_to_parts"
  ],
  "string_split": [
   "function_name_to_parts",
   "function_params_new",
   "html_parse_descendants_classes",
   "js_call_new_code",
   "js_dollar",
   "search_generic",
   "string_replace",
   "string_split",
   "string_split_colon",
   "string_split_comma",
   "string_split_dash",
   "string_split_empty",
   "string_split_newline",
   "string_split_semicolon",
   "string_split_semicolon_space",
   "string_split_space"
  ],
  "string_includes": [
   "function_name_to_path",
   "search_generic",
   "string_includes"
  ],
  "unaliased_actual": [
   "function_name_unalias"
  ],
  "function_new_declaration": [
   "function_new",
   "function_new_declaration",
   "js_outside_move"
  ],
  "js_code_declaration": [
   "function_new",
   "js_call_new_code",
   "js_code_declaration",
   "js_parse_statement",
   "marker_functionize"
  ],
  "code_declaration": [
   "function_new",
   "function_new_declaration",
   "js_code_export",
   "marker_functionize"
  ],
  "function_new_aliased": [
   "function_new_aliased"
  ],
  "function_new_app_screen": [
   "function_new_app_screen"
  ],
  "repo_path_combine": [
   "function_new_declaration",
   "repo_path_combine",
   "function_copy"
  ],
  "user_repo_get": [
   "function_new_declaration",
   "user_repo_get",
   "function_copy",
   "user_repo_set"
  ],
  "js_code_export": [
   "function_new_declaration",
   "js_code_export"
  ],
  "js_declaration_name": [
   "function_new_declaration",
   "js_atomize_function",
   "js_declaration_name",
   "js_declaration_single_name",
   "js_expand_generic",
   "js_function_last_asyncify",
   "js_outside_move"
  ],
  "js_imports_missing_add": [
   "function_new_declaration",
   "function_wrap",
   "js_auto_transform_new_inner",
   "js_dollar_new",
   "js_imports_fix",
   "js_imports_missing_add",
   "marker_call",
   "marker_call_replace_generic",
   "marker_top"
  ],
  "contents_import": [
   "function_new_declaration"
  ],
  "repo_name": [
   "function_new_declaration",
   "list_includes_assert",
   "repos_paths_map_unordered",
   "repo_acronym_to_name",
   "repo_acronym_to_path",
   "repo_exists_assert",
   "repo_path",
   "repo_path_combine",
   "user_repo_get",
   "user_repo_set",
   "function_copy"
  ],
  "function_new_js_inner": [
   "function_new_js",
   "function_new_js_inner"
  ],
  "function_new_js_name": [
   "function_new_js",
   "function_new_js_name",
   "js_auto_transform_new_inner"
  ],
  "function_new_js": [
   "function_new_js",
   "js_auto_transform_new"
  ],
  "f_name_unprefixed": [
   "function_new_js",
   "function_new_js_name",
   "js_auto_transform_new",
   "js_auto_transform_new_inner"
  ],
  "js_declaration_single_params_add": [
   "function_new_js_inner",
   "function_params_new",
   "js_declaration_single_params_add"
  ],
  "combined2": [
   "function_new_js_name",
   "js_dollar_new_name"
  ],
  "lambda$ast": [
   "function_new_transform",
   "function_transform",
   "function_transform_result"
  ],
  "function_open_app": [
   "function_open_app"
  ],
  "js_dollar_new_name": [
   "function_open_dollar_choice",
   "js_dollar_new",
   "js_dollar_new_args",
   "js_dollar_new_name"
  ],
  "function_open_dollar_choice": [
   "function_open_dollar_choice"
  ],
  "function_open_editor": [
   "function_open_editor",
   "function_open_editor_current"
  ],
  "function_open_editor_current": [
   "function_open_editor_current"
  ],
  "js_property_identifier": [
   "function_params_consolidate",
   "js_property_identifier"
  ],
  "js_identifiers_to_names": [
   "function_params_consolidate",
   "js_declaration_params_names",
   "js_dollar_choice_arguments_names",
   "js_expand_generic",
   "js_identifiers_to_names",
   "js_identifier_defineds"
  ],
  "js_declaration_params_get": [
   "function_params_consolidate",
   "js_assert_arguments_args",
   "js_declaration_params_get",
   "js_declaration_params_names",
   "js_declaration_param_add_node"
  ],
  "function_params_consolidate": [
   "function_params_consolidate"
  ],
  "params": [
   "function_params_consolidate",
   "function_param_swap",
   "js_assert_arguments_args",
   "js_declaration_params_get",
   "js_declaration_params_names",
   "js_declaration_param_add_node",
   "js_declaration_param_named",
   "js_node_atomize"
  ],
  "params_names": [
   "function_params_consolidate",
   "js_declaration_params_names",
   "js_expand_generic",
   "js_identifier_defineds"
  ],
  "param_name": [
   "function_params_consolidate",
   "function_param_new",
   "function_param_new_double",
   "js_declaration_param_add",
   "js_declaration_param_named",
   "js_declaration_single_params_add",
   "js_expand_generic",
   "js_property_identifier",
   "marker_param_add"
  ],
  "arg_new": [
   "function_params_consolidate"
  ],
  "type": [
   "function_params_consolidate",
   "function_type_first",
   "js_arrow_blockify",
   "js_dollar_new",
   "js_if_blockify",
   "js_if_blockify_generic",
   "js_node_types_is",
   "js_node_type_is",
   "js_node_type_is_assert",
   "js_node_type_is_if",
   "js_node_type_is_if_async",
   "js_node_type_not_is",
   "js_node_type_not_is_if",
   "js_property_generic",
   "js_stack_filtered",
   "js_stack_filtered_each",
   "js_stack_last",
   "js_visit_type",
   "js_visit_type_each_async"
  ],
  "function_params_consolidate_task_simple": [
   "function_params_consolidate_task_simple"
  ],
  "js_visit_calls_named": [
   "function_params_new",
   "js_assert_arguments_args",
   "js_visit_calls_named"
  ],
  "function_transform_current": [
   "function_params_new",
   "function_transform_current"
  ],
  "function_params_new": [
   "function_params_new",
   "function_param_new",
   "function_param_new_double"
  ],
  "param_names_comma": [
   "function_params_new"
  ],
  "values_default_comma": [
   "function_params_new"
  ],
  "param_names": [
   "function_params_new",
   "js_declaration_single_params_add"
  ],
  "lambda1": [
   "function_params_new"
  ],
  "values_default": [
   "function_params_new"
  ],
  "value_default": [
   "function_params_new"
  ],
  "expression2": [
   "function_params_new",
   "js_calls_to_each"
  ],
  "function_param_new": [
   "function_param_new",
   "marker_screen_add"
  ],
  "default_value": [
   "function_param_new"
  ],
  "function_param_new_double": [
   "function_param_new_double"
  ],
  "list_swap": [
   "function_param_swap",
   "list_swap"
  ],
  "js_declaration_param_named": [
   "function_param_swap",
   "js_declaration_param_named"
  ],
  "function_param_swap": [
   "function_param_swap",
   "function_param_swap_task_simple"
  ],
  "param_name_a": [
   "function_param_swap",
   "function_param_swap_task_simple"
  ],
  "param_name_b": [
   "function_param_swap",
   "function_param_swap_task_simple"
  ],
  "a_index": [
   "function_param_swap"
  ],
  "b_index": [
   "function_param_swap"
  ],
  "function_param_swap_task_simple": [
   "function_param_swap_task_simple"
  ],
  "f_name2": [
   "function_param_swap_task_simple"
  ],
  "function_parse_declaration_inner": [
   "function_parse_declaration",
   "function_parse_declaration_inner",
   "function_parse_strict_declaration"
  ],
  "function_parse_strict": [
   "function_parse_strict",
   "function_parse_strict_declaration"
  ],
  "function_parse_strict_declaration": [
   "function_parse_strict_declaration",
   "js_node_atomize"
  ],
  "path_name": [
   "function_path_to_name",
   "path_name"
  ],
  "function_read": [
   "function_read"
  ],
  "function_rename_identifiers": [
   "function_rename",
   "function_rename_identifiers"
  ],
  "function_rename": [
   "function_rename",
   "function_rename_suffix_add"
  ],
  "f_name_before": [
   "function_rename",
   "function_rename_identifiers",
   "function_rename_suffix_add"
  ],
  "f_name_after": [
   "function_rename",
   "function_rename_identifiers",
   "function_rename_suffix_add"
  ],
  "list_remove_if_exists": [
   "function_rename_identifiers",
   "list_remove_if_exists",
   "messenger_reply_messages_urls_add_page"
  ],
  "js_imports_paths_fix": [
   "function_rename_identifiers",
   "js_imports_paths_fix"
  ],
  "string_padded_is": [
   "function_rename_suffix_add",
   "string_padded_is"
  ],
  "function_rename_suffix_add": [
   "function_rename_suffix_add"
  ],
  "function_run": [
   "function_run",
   "function_run_line",
   "function_run_log",
   "tasks_run"
  ],
  "git_acp_call_folder": [
   "function_run_git",
   "git_acp_call",
   "git_acp_call_folder"
  ],
  "function_run_log": [
   "function_run_git",
   "function_run_log"
  ],
  "function_run_git": [
   "function_run_git",
   "function_run_line_git"
  ],
  "each_folder": [
   "function_run_git",
   "repos_paths_map_unordered_combine"
  ],
  "function_run_line_parse": [
   "function_run_line",
   "function_run_line_git",
   "function_run_line_parse"
  ],
  "function_run_line": [
   "function_run_line",
   "prompt_previous"
  ],
  "line": [
   "function_run_line",
   "function_run_line_git",
   "function_run_line_parse",
   "function_run_prompt"
  ],
  "stackTraceLimit": [
   "function_run_line_git"
  ],
  "Infinity": [
   "function_run_line_git"
  ],
  "function_run_line_git": [
   "function_run_line_git",
   "function_run_prompt"
  ],
  "list_unique_reverse": [
   "function_run_line_parse",
   "list_unique_reverse"
  ],
  "function_run_log_task_duplicate_lines_to_each": [
   "function_run_log_task_duplicate_lines_to_each"
  ],
  "log_error": [
   "function_run_prompt",
   "log_error"
  ],
  "function_run_prompt": [
   "function_run_prompt"
  ],
  "prompt_colored": [
   "function_run_prompt"
  ],
  "function_transform_result": [
   "function_transform",
   "function_transform_command",
   "function_transform_result"
  ],
  "function_transform_command": [
   "function_transform_command",
   "function_transform_command_self"
  ],
  "transformer_name": [
   "function_transform_command"
  ],
  "transformer": [
   "function_transform_command"
  ],
  "function_transform_command_self": [
   "function_transform_command_self"
  ],
  "function_transform_marker_specified": [
   "function_transform_marker",
   "function_transform_marker_specified",
   "js_auto_transform_new_inner",
   "js_dollar_choice_arguments",
   "js_dollar_new",
   "marker_rename",
   "marker_screen_add"
  ],
  "function_transform_marker": [
   "function_transform_marker",
   "function_transform_marker_current",
   "function_transform_marker_empty",
   "marker_assign_replace",
   "marker_call",
   "marker_call_replace_generic",
   "marker_down_choices",
   "marker_expand",
   "marker_new",
   "marker_next",
   "marker_next_await",
   "marker_next_delete",
   "marker_param_add"
  ],
  "lambda$a": [
   "function_transform_marker",
   "function_transform_marker_all",
   "function_transform_marker_current",
   "function_transform_marker_specified",
   "marker_call_replace_generic"
  ],
  "marker_name": [
   "function_transform_marker",
   "function_transform_marker_specified",
   "js_marker_named",
   "marker"
  ],
  "js_markers": [
   "function_transform_marker_all",
   "js_markers",
   "marker_top"
  ],
  "function_transform_marker_arg": [
   "function_transform_marker_all",
   "function_transform_marker_arg",
   "function_transform_marker_specified",
   "js_marker_named_ast_arg"
  ],
  "function_transform_marker_all": [
   "function_transform_marker_all",
   "marker_remove"
  ],
  "lambda_marker": [
   "function_transform_marker_all",
   "function_transform_marker_specified",
   "marker_functionize",
   "marker_move"
  ],
  "markers": [
   "function_transform_marker_all",
   "js_markers",
   "marker_top"
  ],
  "list_get_end": [
   "function_transform_marker_arg",
   "js_declare_assign",
   "js_marker_name_get",
   "js_node_atomize",
   "js_stack_list_block_is",
   "list_get_end",
   "list_get_end_1",
   "list_get_end_2",
   "list_get_end_3",
   "list_last",
   "marker_functionize",
   "marker_leave"
  ],
  "stack": [
   "function_transform_marker_arg",
   "js_assign_combine",
   "js_atomize",
   "js_atomize_function",
   "js_await_add_inner",
   "js_block_child_graph",
   "js_block_insert",
   "js_calls_to_each",
   "js_call_fill",
   "js_declare_assign",
   "js_dollar",
   "js_function_last_asyncify",
   "js_identifier_defineds",
   "js_if_else_if_combine",
   "js_let_add",
   "js_log_remove",
   "js_marker_name_get",
   "js_node_atomize",
   "js_stack_declaration_asyncify",
   "js_stack_filtered",
   "js_stack_filtered_each",
   "js_stack_filtered_multiple",
   "js_stack_filtered_multiple_each",
   "js_stack_last",
   "js_stack_last_function",
   "js_stack_last_multiple",
   "js_stack_list_block_is",
   "list_get_end",
   "list_get_end_1",
   "list_get_end_2",
   "list_get_end_3",
   "marker_call",
   "marker_down_choices_lambda",
   "marker_functionize",
   "marker_if_test_replace",
   "marker_leave",
   "marker_param_add",
   "visit_filter_recursive",
   "visit_filter_recursive_async"
  ],
  "stack1": [
   "function_transform_marker_arg",
   "js_atomize",
   "js_atomize_function",
   "js_await_add_inner",
   "js_dollar",
   "js_dollar_a",
   "js_dollar_aa",
   "js_dollar_a_generic",
   "js_dollar_g",
   "js_dollar_i",
   "js_dollar_ib",
   "js_dollar_ie",
   "js_dollar_ien",
   "js_dollar_ien_generic",
   "js_dollar_if_call",
   "js_dollar_ine",
   "js_dollar_ir",
   "js_dollar_l",
   "js_dollar_r",
   "js_dollar_rf",
   "js_dollar_rt",
   "js_dollar_s",
   "js_dollar_x",
   "js_if_else_if_combine",
   "js_let_add",
   "js_marker_name_get",
   "js_node_atomize",
   "js_stack_list_block_is",
   "marker_down_choices_lambda",
   "marker_down_generic",
   "marker_enter",
   "marker_functionize",
   "marker_index",
   "marker_leave",
   "marker_next_index",
   "marker_previous_index",
   "marker_remove"
  ],
  "stack2": [
   "function_transform_marker_arg",
   "js_atomize_function",
   "js_dollar",
   "js_dollar_a",
   "js_dollar_aa",
   "js_dollar_a_generic",
   "js_dollar_g",
   "js_dollar_ien",
   "js_dollar_ine",
   "js_dollar_ir",
   "js_dollar_l",
   "js_dollar_r",
   "js_dollar_s",
   "js_dollar_x",
   "js_expand_generic",
   "js_marker_name_get",
   "js_node_atomize",
   "js_stack_list_block_is",
   "marker_above_delete",
   "marker_above_generic",
   "marker_call",
   "marker_down_choices_lambda",
   "marker_down_generic",
   "marker_enter",
   "marker_expand",
   "marker_functionize",
   "marker_index",
   "marker_leave",
   "marker_move",
   "marker_new",
   "marker_next_delete",
   "marker_next_get",
   "marker_next_index",
   "marker_previous_index",
   "marker_remove"
  ],
  "function_transform_marker_current": [
   "function_transform_marker_current",
   "marker_above_delete",
   "marker_above_generic",
   "marker_down_generic",
   "marker_enter",
   "marker_if_test_replace",
   "marker_leave"
  ],
  "function_transform_marker_empty": [
   "function_transform_marker_empty"
  ],
  "list_size_1_assert_message": [
   "function_transform_marker_specified",
   "list_size_1_assert",
   "list_size_1_assert_message"
  ],
  "js_marker_named": [
   "function_transform_marker_specified",
   "js_marker_named",
   "js_marker_named_ast"
  ],
  "js_type": [
   "function_transform_marker_specified",
   "js_atomize",
   "js_atomize_function",
   "js_imports_all",
   "js_markers",
   "js_marker_named_ast",
   "js_return_atomize",
   "js_type"
  ],
  "visitors": [
   "function_transform_marker_specified",
   "js_markers",
   "js_marker_named_ast"
  ],
  "list_sort_string": [
   "function_types",
   "html_parse_descendants_classes",
   "list_sort_string"
  ],
  "js_node_types": [
   "function_types",
   "js_node_types",
   "js_node_types_includes"
  ],
  "function_types": [
   "function_types"
  ],
  "f_types": [
   "function_types",
   "js_types_function_includes"
  ],
  "js_visit_nodes": [
   "function_type_first",
   "js_node_types",
   "js_visit_nodes"
  ],
  "js_node_type": [
   "function_type_first",
   "js_if_blockify_generic",
   "js_node_type",
   "js_node_types",
   "js_node_type_is",
   "marker_enter"
  ],
  "function_type_first": [
   "function_type_first"
  ],
  "string_suffix_change": [
   "function_watch_ending_change",
   "string_suffix_change"
  ],
  "function_wrap": [
   "function_watch_ending_change",
   "function_wrap",
   "function_wrap_suffix_add"
  ],
  "function_watch_ending_change": [
   "function_watch_ending_change"
  ],
  "ending_old": [
   "function_watch_ending_change",
   "string_suffix_change"
  ],
  "ending_new": [
   "function_watch_ending_change",
   "string_suffix_change"
  ],
  "js_statement_return": [
   "function_wrap",
   "js_statement_return",
   "js_statement_return_empty"
  ],
  "object_property_from": [
   "function_wrap",
   "object_property_from"
  ],
  "js_declaration_asyncify": [
   "function_wrap",
   "js_declaration_asyncify"
  ],
  "js_code_call_args_await_maybe": [
   "function_wrap",
   "js_call_new_code",
   "js_code_call_args_await_maybe",
   "marker_functionize"
  ],
  "js_declaration_params_names": [
   "function_wrap",
   "js_call_new_code",
   "js_declaration_params_names",
   "js_expand_generic",
   "js_identifier_defineds"
  ],
  "f_name_wrapped": [
   "function_wrap",
   "function_wrap_suffix_add"
  ],
  "declaration_call": [
   "function_wrap",
   "js_expand_generic"
  ],
  "arg_names": [
   "function_wrap",
   "js_call_new_code"
  ],
  "function_wrap_suffix_add": [
   "function_wrap_suffix_add"
  ],
  "git_acp_folder": [
   "git_acp",
   "git_acp_call_folder",
   "git_acp_folder"
  ],
  "git_acp": [
   "git_acp",
   "git_acp_timestamp"
  ],
  "git_acp_call": [
   "git_acp_call"
  ],
  "concat": [
   "git_acp_call_folder",
   "http",
   "list_concat"
  ],
  "join": [
   "git_acp_call_folder",
   "list_join",
   "path_join",
   "roman_to_integer"
  ],
  "git_push_folder": [
   "git_acp_folder",
   "git_push",
   "git_push_folder"
  ],
  "git_commit_folder": [
   "git_acp_folder",
   "git_commit",
   "git_commit_folder"
  ],
  "git_acp_timestamp": [
   "git_acp_timestamp"
  ],
  "git_commit": [
   "git_commit"
  ],
  "git_filter_repo_install": [
   "git_filter_repo_install"
  ],
  "git_repo_url": [
   "git_history_delete",
   "git_repo_clone",
   "git_repo_url"
  ],
  "git_history_delete": [
   "git_history_delete"
  ],
  "user": [
   "git_history_delete",
   "git_repo_clone",
   "git_repo_url"
  ],
  "repo": [
   "git_history_delete",
   "git_repo_clone",
   "git_repo_url",
   "path_repo_about",
   "path_repo_combine",
   "repo_acronym_get",
   "repo_acronym_set"
  ],
  "repo_folder": [
   "git_history_delete"
  ],
  "chdir": [
   "git_history_delete"
  ],
  "stdout2": [
   "git_history_delete"
  ],
  "repo_acronym_to_path": [
   "git_publish_initial",
   "repo_acronym_to_path"
  ],
  "list_map_combine": [
   "git_publish_initial",
   "list_map_combine"
  ],
  "git_publish_initial": [
   "git_publish_initial"
  ],
  "branch_name": [
   "git_publish_initial"
  ],
  "commands": [
   "git_publish_initial"
  ],
  "git_push": [
   "git_push",
   "git_push_folder"
  ],
  "git_push_command": [
   "git_push_command",
   "git_push_folder",
   "git_push_schedule_command"
  ],
  "lambda_get": [
   "git_push_folder",
   "lambda_get"
  ],
  "git_push_schedule_command": [
   "git_push_schedule",
   "git_push_schedule_command"
  ],
  "git_push_schedule": [
   "git_push_schedule"
  ],
  "schtasks_query": [
   "git_push_schedule_check",
   "schtasks_query"
  ],
  "git_push_schedule_task_name": [
   "git_push_schedule_check",
   "git_push_schedule_command",
   "git_push_schedule_task_name"
  ],
  "git_push_schedule_check": [
   "git_push_schedule_check",
   "git_push_schedule_command"
  ],
  "path_resolve": [
   "git_push_schedule_command",
   "path_resolve",
   "repos_gitignore_overwrite"
  ],
  "git_rebase": [
   "git_rebase"
  ],
  "abortErr": [
   "git_rebase"
  ],
  "repo_path": [
   "git_repo_clone",
   "path_repo_combine",
   "repos_gitignore_overwrite",
   "repos_paths_map_unordered",
   "repo_path",
   "repo_path_combine"
  ],
  "git_repo_clone": [
   "git_repo_clone"
  ],
  "folder_name": [
   "git_repo_clone",
   "repo_path_combine"
  ],
  "git_repo_rename": [
   "git_repo_rename",
   "git_repo_rename_normalize"
  ],
  "owner": [
   "git_repo_rename",
   "git_repo_rename_normalize"
  ],
  "git_repo_rename_normalize": [
   "git_repo_rename_normalize"
  ],
  "name_old": [
   "git_repo_rename_normalize"
  ],
  "object_property_lambda": [
   "global_function_async",
   "object_property_lambda"
  ],
  "global_get": [
   "global_function_async",
   "global_function_property_async",
   "global_get"
  ],
  "global": [
   "global_function_async",
   "global_function_property_async",
   "global_get"
  ],
  "awaited": [
   "global_function_async",
   "js_await",
   "js_await_add_inner",
   "js_await_wrap",
   "marker_next_await"
  ],
  "object_property_lambda_async": [
   "global_function_property_async",
   "object_property_lambda_async"
  ],
  "global_function_property_async": [
   "global_function_property_async"
  ],
  "fn_object": [
   "global_function_property_async"
  ],
  "html_component_element_get": [
   "html_attribute_set",
   "html_component_element_get",
   "html_disable_set",
   "html_element",
   "html_on",
   "html_remove",
   "html_style_assign",
   "html_style_remove",
   "html_style_set",
   "html_text_set"
  ],
  "html_attribute_set": [
   "html_attribute_set",
   "html_meta_viewport"
  ],
  "element": [
   "html_attribute_set",
   "html_clear",
   "html_component_wrap",
   "html_display_block",
   "html_display_none",
   "html_on",
   "html_remove",
   "html_text_set"
  ],
  "setAttribute": [
   "html_attribute_set"
  ],
  "html_on_click": [
   "html_button",
   "html_on_click"
  ],
  "html_button_element": [
   "html_button",
   "html_button_element"
  ],
  "parent": [
   "html_button",
   "html_button_element",
   "html_button_screen",
   "html_element",
   "html_p_text_multiple"
  ],
  "html_element": [
   "html_button_element",
   "html_div",
   "html_document_root",
   "html_element",
   "html_meta_viewport",
   "html_p"
  ],
  "tag_name": [
   "html_button_element",
   "html_element",
   "messenger_reply_unread_click",
   "puppeteer_matches"
  ],
  "html_component_wrap": [
   "html_component_wrap",
   "html_document_body",
   "html_document_head",
   "html_document_root",
   "html_element"
  ],
  "html_disable_set": [
   "html_disable",
   "html_disable_set",
   "html_enable"
  ],
  "disabled": [
   "html_disable",
   "html_disable_set",
   "html_enable"
  ],
  "b_element": [
   "html_disable_set",
   "html_style_assign",
   "html_style_remove",
   "html_style_set"
  ],
  "html_style_set": [
   "html_display_block",
   "html_display_none",
   "html_style_font_size",
   "html_style_set",
   "html_style_set_or_remove"
  ],
  "html_display_block": [
   "html_display_block",
   "html_display_none_or_block"
  ],
  "html_display_none": [
   "html_display_none",
   "html_display_none_or_block"
  ],
  "body_element": [
   "html_document_body"
  ],
  "html_document_head": [
   "html_document_head",
   "html_meta_viewport"
  ],
  "head": [
   "html_document_head",
   "html_meta_viewport"
  ],
  "documentElement": [
   "html_document_root"
  ],
  "parent_element": [
   "html_element"
  ],
  "createElement": [
   "html_element"
  ],
  "appendChild": [
   "html_element"
  ],
  "html_enable": [
   "html_enable",
   "html_enable_if"
  ],
  "html_remove": [
   "html_loading",
   "html_remove"
  ],
  "html_style_assign": [
   "html_loading",
   "html_style_assign"
  ],
  "html_loading": [
   "html_loading",
   "http"
  ],
  "position": [
   "html_loading"
  ],
  "top": [
   "html_loading"
  ],
  "width": [
   "html_loading"
  ],
  "height": [
   "html_loading"
  ],
  "background": [
   "html_loading"
  ],
  "display": [
   "html_loading"
  ],
  "justifyContent": [
   "html_loading"
  ],
  "alignItems": [
   "html_loading"
  ],
  "zIndex": [
   "html_loading"
  ],
  "html_name_to_path": [
   "html_name_to_path",
   "html_new",
   "html_update_public"
  ],
  "html_name_to_path_dev": [
   "html_name_to_path_dev",
   "html_update_dev"
  ],
  "html_update": [
   "html_new",
   "html_update"
  ],
  "html_on": [
   "html_on",
   "html_on_click",
   "html_on_keydown"
  ],
  "name_event": [
   "html_on",
   "html_on_click",
   "html_on_keydown"
  ],
  "addEventListener": [
   "html_on"
  ],
  "html_overwrite": [
   "html_overwrite",
   "html_update_generic"
  ],
  "cheerio": [
   "html_parse"
  ],
  "load": [
   "html_parse"
  ],
  "html_parse_attr": [
   "html_parse_attr",
   "html_parse_descendants_classes",
   "html_parse_href"
  ],
  "attr": [
   "html_parse_attr"
  ],
  "string_is": [
   "html_parse_descendants_classes",
   "js_visit_children_get",
   "string_is",
   "string_is_assert",
   "string_is_assert_message"
  ],
  "descendants": [
   "html_parse_descendants_classes"
  ],
  "find": [
   "html_parse_find"
  ],
  "list_filter_starts_with": [
   "html_parse_find_a_href_starts_with",
   "list_filter_starts_with",
   "puppeteer_hrefs_starts_with"
  ],
  "html_parse_href_text_map": [
   "html_parse_find_a_href_starts_with",
   "html_parse_find_list_href_text",
   "html_parse_href_text_map"
  ],
  "html_parse_list_to": [
   "html_parse_find_list_to",
   "html_parse_list_to"
  ],
  "query": [
   "html_parse_find_list_to",
   "html_parse_list_to"
  ],
  "remove": [
   "html_parse_find_remove",
   "html_remove"
  ],
  "html_parse_href": [
   "html_parse_href",
   "html_parse_href_text"
  ],
  "html_parse_href_text": [
   "html_parse_href_text",
   "html_parse_href_text_map"
  ],
  "both": [
   "html_parse_href_text",
   "html_parse_href_text_map",
   "js_imports_declarations"
  ],
  "get": [
   "html_parse_list_to",
   "http"
  ],
  "object_assign": [
   "html_style_assign",
   "object_assign"
  ],
  "style": [
   "html_style_assign",
   "html_style_remove",
   "html_style_set"
  ],
  "html_style_remove": [
   "html_style_remove",
   "html_style_set_or_remove"
  ],
  "style_key": [
   "html_style_remove",
   "html_style_set",
   "html_style_set_or_remove"
  ],
  "removeProperty": [
   "html_style_remove"
  ],
  "style_value": [
   "html_style_set",
   "html_style_set_or_remove"
  ],
  "innerHTML": [
   "html_text_set"
  ],
  "ternary": [
   "html_text_set_if",
   "ternary"
  ],
  "on_true": [
   "html_text_set_if",
   "ternary"
  ],
  "on_false": [
   "html_text_set_if",
   "ternary"
  ],
  "label_rules_text": [
   "html_text_set_if"
  ],
  "html_update_dev": [
   "html_update",
   "html_update_dev"
  ],
  "html_update_public": [
   "html_update",
   "html_update_public"
  ],
  "html_update_generic": [
   "html_update_dev",
   "html_update_generic",
   "html_update_public"
  ],
  "paths_get": [
   "html_update_dev",
   "html_update_public"
  ],
  "from_paths": [
   "html_update_dev",
   "html_update_generic",
   "html_update_public"
  ],
  "lambda$f_name_ext": [
   "html_update_generic"
  ],
  "lambda$fn_get": [
   "html_update_generic"
  ],
  "name_prefixed": [
   "html_update_generic"
  ],
  "http_sleep": [
   "http",
   "http_sleep",
   "messenger_reply_unread_collect"
  ],
  "promise_wrap": [
   "http",
   "promise_wrap"
  ],
  "round": [
   "http",
   "round"
  ],
  "fetch": [
   "http"
  ],
  "ok": [
   "http"
  ],
  "buf": [
   "http"
  ],
  "arrayBuffer": [
   "http"
  ],
  "h": [
   "http"
  ],
  "res": [
   "http"
  ],
  "chunks": [
   "http"
  ],
  "on_data": [
   "http"
  ],
  "chunk": [
   "http"
  ],
  "push": [
   "http",
   "list_add",
   "list_add_multiple",
   "path_join",
   "puppeteer_matches"
  ],
  "on": [
   "http",
   "watch"
  ],
  "on_end": [
   "http"
  ],
  "statusCode": [
   "http"
  ],
  "rounded": [
   "http",
   "round"
  ],
  "result2": [
   "http",
   "server",
   "tasks_run",
   "task_new"
  ],
  "http_firebase_file_path": [
   "http_firebase",
   "http_firebase_file_path"
  ],
  "http_firebase": [
   "http_firebase",
   "http_local"
  ],
  "string_base64_to": [
   "http_firebase_file_name",
   "string_base64_to"
  ],
  "http_firebase_file_name": [
   "http_firebase_file_name",
   "http_firebase_file_path",
   "http_local_file_name"
  ],
  "http_json": [
   "http_json"
  ],
  "http_local_file_name": [
   "http_local",
   "http_local_file_name"
  ],
  "integer_random": [
   "http_sleep",
   "integer_random",
   "keyboard_typing_delay"
  ],
  "npm_install": [
   "import_install",
   "npm_install"
  ],
  "integer_is": [
   "integer_is",
   "integer_is_assert",
   "list_get"
  ],
  "ii": [
   "integer_is",
   "integer_is_assert",
   "js_declaration_params_names_node",
   "js_identifier_is",
   "js_let_add",
   "list_index_is",
   "list_index_of_delta"
  ],
  "Number": [
   "integer_is",
   "integer_to"
  ],
  "isInteger": [
   "integer_is"
  ],
  "integer_is_assert": [
   "integer_is_assert",
   "list_get"
  ],
  "random": [
   "integer_random",
   "list_random_item",
   "random"
  ],
  "min": [
   "integer_random"
  ],
  "max": [
   "integer_random"
  ],
  "parseInt": [
   "integer_to"
  ],
  "isNaN": [
   "integer_to"
  ],
  "JSON": [
   "json_format_to",
   "json_from",
   "json_to"
  ],
  "stringify": [
   "json_format_to",
   "json_to"
  ],
  "parse": [
   "json_from",
   "js_parse",
   "path_name"
  ],
  "js_if_blockify_generic": [
   "js_arrow_blockify",
   "js_if_blockify",
   "js_if_blockify_generic"
  ],
  "js_arrow_blockify": [
   "js_arrow_blockify",
   "js_auto_transforms"
  ],
  "js_visit_type": [
   "js_arrow_to_function",
   "js_assign_combine",
   "js_bang_to_not",
   "js_calls_to_each",
   "js_declaration_single",
   "js_declare_assign",
   "js_function_id_add",
   "js_identifiers",
   "js_identifiers_named_count",
   "js_identifiers_names",
   "js_identifier_replace",
   "js_let_add",
   "js_log_remove",
   "js_type",
   "js_visit_calls_named",
   "js_visit_type",
   "js_visit_type_each_async",
   "marker_functionize"
  ],
  "js_arrow_to_function": [
   "js_arrow_to_function",
   "js_auto_transforms"
  ],
  "list_replace_all": [
   "js_assert_arguments_args",
   "list_replace_all"
  ],
  "js_keyword_arguments": [
   "js_assert_arguments_args",
   "js_identifier_unique",
   "js_keyword_arguments"
  ],
  "js_assert_arguments_args": [
   "js_assert_arguments_args",
   "js_auto_transforms"
  ],
  "code_expression": [
   "js_assert_arguments_args",
   "js_await",
   "js_await_wrap",
   "js_if_else_if_combine",
   "js_parse_expression"
  ],
  "args_expression": [
   "js_assert_arguments_args"
  ],
  "size_expression": [
   "js_assert_arguments_args"
  ],
  "args_new": [
   "js_assert_arguments_args",
   "list_replace_all"
  ],
  "js_identifiers_named_count": [
   "js_assign_combine",
   "js_identifiers_named_count",
   "js_imports_unused"
  ],
  "list_not_is": [
   "js_assign_combine",
   "list_not_is"
  ],
  "js_identifier_not_is": [
   "js_assign_combine",
   "js_call_callee_name",
   "js_identifier_not_is"
  ],
  "list_next_try": [
   "js_assign_combine",
   "js_calls_to_each",
   "list_next_try"
  ],
  "list_remove": [
   "js_assign_combine",
   "js_dollar_aa",
   "js_dollar_g",
   "js_dollar_s",
   "js_dollar_x",
   "js_expand_generic",
   "js_imports_fix",
   "js_imports_unused_remove",
   "js_log_remove",
   "js_outside_move",
   "list_remove",
   "list_remove_all",
   "list_remove_if_exists",
   "list_remove_multiple",
   "list_remove_property",
   "marker_down_generic",
   "marker_enter",
   "marker_functionize",
   "marker_leave",
   "marker_move",
   "marker_remove",
   "messenger_reply_unread_collect"
  ],
  "js_node_type_not_is": [
   "js_assign_combine",
   "js_calls_to_each",
   "js_call_callee_name",
   "js_declare_assign",
   "js_identifier_not_is",
   "js_if_blockify_generic",
   "js_node_type_not_is",
   "js_node_type_not_is_if",
   "marker_rename"
  ],
  "null_is": [
   "js_assign_combine",
   "js_calls_to_each",
   "js_dollar_ien",
   "js_dollar_s",
   "list_next_try",
   "null_is",
   "storage_local_get",
   "storage_local_initialize"
  ],
  "list_get_end_1": [
   "js_assign_combine",
   "js_atomize",
   "js_atomize_function",
   "js_await_add_inner",
   "js_calls_to_each",
   "js_dollar",
   "js_if_else_if_combine",
   "js_let_add",
   "js_log_remove",
   "list_get_end_1",
   "marker_leave"
  ],
  "js_declare_single": [
   "js_assign_combine",
   "js_declare_init_set",
   "js_declare_single",
   "js_declare_single_init"
  ],
  "js_assign_combine": [
   "js_assign_combine",
   "js_auto_transforms"
  ],
  "e1": [
   "js_assign_combine",
   "js_calls_to_each",
   "js_log_remove",
   "list_get_end_1"
  ],
  "nl": [
   "js_assign_combine",
   "list_not_is"
  ],
  "next": [
   "js_assign_combine",
   "js_calls_to_each",
   "js_declare_single_init",
   "js_dollar_a",
   "js_dollar_a_generic",
   "js_dollar_s",
   "js_dollar_x",
   "js_expand_generic",
   "list_next",
   "list_next_index",
   "list_next_try",
   "marker_assign_replace",
   "marker_call_replace_generic",
   "marker_enter",
   "marker_expand",
   "marker_move",
   "marker_next",
   "marker_next_await",
   "marker_next_declare_single_init",
   "marker_next_get"
  ],
  "declaration2": [
   "js_assign_combine"
  ],
  "init2": [
   "js_assign_combine",
   "js_dollar_s"
  ],
  "id": [
   "js_assign_combine",
   "js_dollar_a",
   "js_dollar_s",
   "js_function_id_add",
   "js_identifier_defineds",
   "js_identifier_not_is"
  ],
  "nti2": [
   "js_assign_combine"
  ],
  "init": [
   "js_assign_combine",
   "js_declare",
   "js_declare_assign",
   "js_declare_init_set",
   "js_declare_single_init",
   "js_dollar_a",
   "js_dollar_s",
   "marker_assign_replace"
  ],
  "js_node_atomize": [
   "js_atomize",
   "js_node_atomize",
   "js_return_atomize",
   "marker_call_atomize"
  ],
  "list_is": [
   "js_atomize",
   "js_atomize_function",
   "js_dollar_a_generic",
   "js_dollar_x",
   "js_marker_name_get",
   "js_node_atomize",
   "js_stack_list_block_is",
   "js_visit_children_get",
   "js_visit_filter",
   "list_concat",
   "list_filter",
   "list_is",
   "list_is_assert",
   "list_not_is",
   "list_squash",
   "log_unparse_try",
   "marker_down_choices"
  ],
  "js_atomize": [
   "js_atomize",
   "js_auto_transforms"
  ],
  "existing": [
   "js_atomize",
   "js_call_new",
   "js_call_new_code",
   "js_identifier_unique",
   "js_identifier_unique_ast",
   "js_node_atomize",
   "js_return_atomize",
   "marker_call_atomize"
  ],
  "ces": [
   "js_atomize"
  ],
  "js_block_insert": [
   "js_atomize_function",
   "js_block_insert",
   "js_node_atomize"
  ],
  "list_get_end_2": [
   "js_atomize_function",
   "js_dollar",
   "js_log_remove",
   "list_get_end_2",
   "marker_leave"
  ],
  "object_copy": [
   "js_atomize_function",
   "js_await_add_inner",
   "js_bang_to_not",
   "js_dollar_a",
   "js_if_blockify_generic",
   "js_node_atomize",
   "object_copy"
  ],
  "js_node_type_is": [
   "js_atomize_function",
   "js_call_function_if",
   "js_declaration_params_names_node",
   "js_declare_single",
   "js_dollar_a_generic",
   "js_dollar_g",
   "js_dollar_r",
   "js_dollar_s",
   "js_identifier_defineds",
   "js_identifier_is",
   "js_imports_declarations",
   "js_let_add",
   "js_marker_name_get",
   "js_node_atomize",
   "js_node_types_is",
   "js_node_type_is",
   "js_node_type_is_assert",
   "js_node_type_is_if",
   "js_node_type_is_if_async",
   "js_node_type_not_is",
   "js_return_on",
   "js_return_on_async",
   "js_stack_filtered",
   "js_stack_list_block_is",
   "js_statement_call_get",
   "marker_functionize"
  ],
  "js_atomize_function": [
   "js_atomize_function",
   "js_auto_transforms"
  ],
  "fes": [
   "js_atomize_function"
  ],
  "type_is": [
   "js_atomize_function",
   "js_declaration_params_names_node",
   "js_dollar_a_generic",
   "js_dollar_r",
   "js_dollar_s",
   "js_let_add",
   "js_node_types_is",
   "js_node_type_is",
   "js_node_type_is_assert",
   "js_node_type_is_if",
   "js_node_type_is_if_async",
   "js_node_type_not_is",
   "js_node_type_not_is_if",
   "js_stack_filtered"
  ],
  "copy": [
   "js_atomize_function",
   "js_await_add_inner",
   "js_bang_to_not",
   "js_if_blockify_generic",
   "js_node_atomize",
   "list_copy",
   "list_copy_reverse",
   "list_unique_reverse",
   "object_copy",
   "visit_filter_recursive",
   "visit_filter_recursive_async"
  ],
  "js_auto_transforms": [
   "js_auto",
   "js_auto_transforms",
   "js_auto_transform_new_inner"
  ],
  "transforms": [
   "js_auto",
   "js_auto_transforms"
  ],
  "js_outside_move": [
   "js_auto_transforms",
   "js_outside_move",
   "marker_functionize"
  ],
  "js_dollar": [
   "js_auto_transforms",
   "js_dollar",
   "js_dollar_choice_arguments",
   "js_dollar_new_name"
  ],
  "js_call_fill": [
   "js_auto_transforms",
   "js_call_fill"
  ],
  "js_return_atomize": [
   "js_auto_transforms",
   "js_return_atomize"
  ],
  "js_if_else_if_combine": [
   "js_auto_transforms",
   "js_if_else_if_combine"
  ],
  "js_declare_assign_null": [
   "js_auto_transforms",
   "js_declare_assign_null"
  ],
  "js_let_add": [
   "js_auto_transforms",
   "js_let_add"
  ],
  "js_function_id_add": [
   "js_auto_transforms",
   "js_function_id_add"
  ],
  "js_if_blockify": [
   "js_auto_transforms",
   "js_if_blockify"
  ],
  "js_await_add": [
   "js_auto_transforms",
   "js_await_add"
  ],
  "js_bang_to_not": [
   "js_auto_transforms",
   "js_bang_to_not"
  ],
  "js_auto_transform_new_inner": [
   "js_auto_transform_new",
   "js_auto_transform_new_inner"
  ],
  "js_auto_transform_new": [
   "js_auto_transform_new"
  ],
  "js_declaration_single_block_body_add_return": [
   "js_auto_transform_new_inner",
   "js_declaration_single_block_body_add_return",
   "js_dollar_new"
  ],
  "marker_next_declare_single_init_elements": [
   "js_auto_transform_new_inner",
   "js_dollar_new",
   "marker_next_declare_single_init_elements"
  ],
  "elements": [
   "js_auto_transform_new_inner",
   "js_calls_to_each",
   "js_dollar_new",
   "js_identifier_defineds",
   "marker_next_declare_single_init_elements",
   "puppeteer_matches"
  ],
  "js_code_await": [
   "js_await",
   "js_await_wrap",
   "js_code_await",
   "js_code_call_args_await_maybe"
  ],
  "js_await": [
   "js_await",
   "js_await_add_inner",
   "marker_next_await"
  ],
  "js_await_add_inner": [
   "js_await_add",
   "js_await_add_inner",
   "js_function_last_asyncify"
  ],
  "visited": [
   "js_await_add",
   "js_await_add_inner",
   "js_call_fill",
   "js_function_last_asyncify"
  ],
  "js_visit_type_each_async": [
   "js_await_add_inner",
   "js_call_fill",
   "js_dollar",
   "js_if_blockify_generic",
   "js_if_else_if_combine",
   "js_visit_type_each_async"
  ],
  "js_call_function_if": [
   "js_await_add_inner",
   "js_call_function_if",
   "js_node_atomize"
  ],
  "js_node_type_not_is_if": [
   "js_await_add_inner",
   "js_node_type_not_is_if"
  ],
  "js_function_last_asyncify": [
   "js_await_add_inner",
   "js_call_fill",
   "js_function_last_asyncify"
  ],
  "js_await_add_task_simple": [
   "js_await_add_task_simple"
  ],
  "js_await_wrap": [
   "js_await_wrap"
  ],
  "js_declaration_single_name": [
   "js_bang_to_not",
   "js_declaration_single_name",
   "js_imports_missing"
  ],
  "js_code_call": [
   "js_bang_to_not",
   "js_code_call",
   "js_code_call_statement",
   "js_dollar_aa"
  ],
  "operator": [
   "js_bang_to_not"
  ],
  "argument": [
   "js_bang_to_not",
   "js_expand_generic",
   "js_return_atomize",
   "js_return_name",
   "js_return_on",
   "js_return_on_async",
   "js_statement_return_add"
  ],
  "arguments2": [
   "js_bang_to_not",
   "js_calls_to_each",
   "js_expand_generic",
   "js_marker_name_get",
   "marker_call_replace_generic",
   "marker_rename"
  ],
  "log_unparse_try": [
   "js_block_child_graph",
   "log_unparse_try"
  ],
  "js_stack_last": [
   "js_block_child_graph",
   "js_block_insert",
   "js_stack_declaration_asyncify",
   "js_stack_last",
   "marker_if_test_replace"
  ],
  "js_visitors": [
   "js_block_child_graph",
   "js_visitors"
  ],
  "js_block_child_graph": [
   "js_block_child_graph",
   "js_block_child_graph_unparse"
  ],
  "vs": [
   "js_block_child_graph",
   "js_imports_declarations",
   "js_type",
   "js_visitors",
   "js_visit_each",
   "js_visit_each_async",
   "js_visit_type_each_async",
   "marker_down_choices"
  ],
  "edges": [
   "js_block_child_graph",
   "js_block_child_graph_unparse"
  ],
  "js_block_child_graph_unparse": [
   "js_block_child_graph_unparse"
  ],
  "edge": [
   "js_block_child_graph_unparse"
  ],
  "list_insert": [
   "js_block_insert",
   "js_call_insert",
   "js_dollar_g",
   "js_dollar_s",
   "js_expand_generic",
   "list_add_first",
   "list_insert",
   "marker_above_generic",
   "marker_call",
   "marker_down_generic",
   "marker_functionize",
   "marker_leave",
   "marker_move"
  ],
  "list_next": [
   "js_block_insert",
   "js_dollar_a_generic",
   "js_identifier_defineds",
   "list_next",
   "list_next_index"
  ],
  "inserted": [
   "js_block_insert",
   "js_dollar_x",
   "js_expand_generic",
   "marker_expand"
  ],
  "block": [
   "js_block_insert",
   "js_declaration_to_block_body",
   "js_parse_statement"
  ],
  "block_body": [
   "js_block_insert"
  ],
  "block_body_item": [
   "js_block_insert"
  ],
  "block_body_item_index": [
   "js_block_insert"
  ],
  "js_code_brackets_empty": [
   "js_calls_to_each",
   "js_code_brackets_empty"
  ],
  "js_call_callee_name": [
   "js_calls_to_each",
   "js_call_callee_name",
   "js_visit_calls_named"
  ],
  "js_statement_expression_get": [
   "js_calls_to_each",
   "js_statement_expression_get"
  ],
  "js_node_type_is_if": [
   "js_calls_to_each",
   "js_log_remove",
   "js_node_type_is_if"
  ],
  "js_calls_to_each": [
   "js_calls_to_each"
  ],
  "call_name": [
   "js_calls_to_each"
  ],
  "call2": [
   "js_calls_to_each"
  ],
  "jin2": [
   "js_calls_to_each",
   "js_call_callee_name"
  ],
  "callee": [
   "js_calls_to_each",
   "js_call_callee_name",
   "js_call_function_if",
   "js_expand_generic",
   "js_log_remove",
   "js_marker_name_get",
   "js_node_atomize",
   "marker_call_replace_generic"
  ],
  "expression3": [
   "js_calls_to_each"
  ],
  "code2": [
   "js_calls_to_each",
   "js_dollar_choice_arguments",
   "js_dollar_new",
   "js_parse_statement",
   "js_statement_return"
  ],
  "array_expression": [
   "js_calls_to_each",
   "marker_next_declare_single_init_elements"
  ],
  "js_calls_to_each_task_simple": [
   "js_calls_to_each_task_simple"
  ],
  "object_property_get_name": [
   "js_call_callee_name",
   "object_property_get_name"
  ],
  "jin": [
   "js_call_callee_name",
   "js_identifier_not_is"
  ],
  "log": [
   "js_log_remove",
   "log",
   "log_keep",
   "messenger_reply_playwright",
   "s5_inner",
   "search_generic"
  ],
  "js_identifier_is": [
   "js_call_fill",
   "js_declaration_params_names_node",
   "js_identifiers_to_names",
   "js_identifier_is",
   "js_let_add"
  ],
  "lambda$name": [
   "js_call_function_if"
  ],
  "js_code_call_args": [
   "js_call_insert",
   "js_code_call",
   "js_code_call_args",
   "js_code_call_args_await_maybe",
   "js_code_declaration_args",
   "js_dollar_g"
  ],
  "js_parse_statement": [
   "js_call_insert",
   "js_call_new",
   "js_declare",
   "js_dollar_aa",
   "js_dollar_i",
   "js_dollar_s",
   "js_parse_expression",
   "js_parse_statement",
   "js_return_empty",
   "js_statement_return",
   "marker_above_generic",
   "marker_functionize"
  ],
  "js_call_insert": [
   "js_call_insert",
   "js_marker_insert",
   "task_new"
  ],
  "args_code": [
   "js_call_insert",
   "js_call_new_code",
   "js_code_call_args_await_maybe",
   "js_marker_insert"
  ],
  "js_call_new_code": [
   "js_call_new",
   "js_call_new_code",
   "js_call_new_expression"
  ],
  "js_code_let_assign": [
   "js_call_new",
   "js_code_let_assign",
   "js_declare"
  ],
  "js_identifier_unique": [
   "js_call_new",
   "js_call_new_code",
   "js_expand_generic",
   "js_identifier_unique",
   "js_identifier_unique_ast",
   "js_node_atomize",
   "marker_top"
  ],
  "f_name_call": [
   "js_call_new",
   "js_call_new_code",
   "marker_call"
  ],
  "return_name": [
   "js_call_new",
   "js_call_new_code",
   "js_node_atomize",
   "js_return_name"
  ],
  "js_return_name": [
   "js_call_new_code",
   "js_node_atomize",
   "js_return_name"
  ],
  "js_declaration_param_add": [
   "js_call_new_code",
   "js_declaration_param_add",
   "js_declaration_single_params_add",
   "marker_param_add"
  ],
  "list_slice": [
   "js_call_new_code",
   "list_range",
   "list_skip",
   "list_slice",
   "list_slice_count",
   "list_slice_end",
   "list_take"
  ],
  "ast_call": [
   "js_call_new_code",
   "js_expand_generic"
  ],
  "arg_name": [
   "js_call_new_code"
  ],
  "arg_code": [
   "js_call_new_code"
  ],
  "skip_count": [
   "js_call_new_code",
   "list_skip",
   "string_skip"
  ],
  "remaining": [
   "js_call_new_code",
   "js_dollar",
   "js_dollar_a",
   "js_dollar_aa",
   "js_dollar_g",
   "js_dollar_ien",
   "js_dollar_ine",
   "js_dollar_ir",
   "js_dollar_l",
   "js_dollar_x"
  ],
  "lamda_name": [
   "js_call_new_code"
  ],
  "declaration_lambda": [
   "js_call_new_code"
  ],
  "js_call_new_expression": [
   "js_call_new_expression",
   "js_dollar_ien_generic",
   "js_dollar_if_call"
  ],
  "js_code_braces_empty": [
   "js_code_arrow",
   "js_code_braces_empty",
   "js_dollar_i"
  ],
  "js_code_parenthesis_open_close": [
   "js_code_arrow",
   "js_code_parenthesis_open_close"
  ],
  "js_code_arrow": [
   "js_code_arrow",
   "js_dollar_f"
  ],
  "js_code_assign": [
   "js_code_assign",
   "js_code_let_assign",
   "js_dollar_s"
  ],
  "js_keyword_await": [
   "js_code_await",
   "js_keyword_await"
  ],
  "js_code_wrap_braces": [
   "js_code_braces_empty",
   "js_code_declaration_args",
   "js_code_import_single",
   "js_code_wrap_braces"
  ],
  "js_code_wrap_brackets": [
   "js_code_brackets_empty",
   "js_code_wrap_brackets"
  ],
  "fn_name": [
   "js_code_call",
   "js_code_call_args"
  ],
  "js_code_wrap_parenthesis": [
   "js_code_call_args",
   "js_code_parenthesis_open_close",
   "js_code_wrap_parenthesis",
   "js_dollar_i"
  ],
  "js_code_statement": [
   "js_code_call_statement",
   "js_code_statement"
  ],
  "js_code_declaration_args": [
   "js_code_declaration",
   "js_code_declaration_args"
  ],
  "inside": [
   "js_code_declaration",
   "js_code_declaration_args",
   "js_code_wrap_braces",
   "js_code_wrap_brackets",
   "js_code_wrap_parenthesis",
   "js_dollar_i"
  ],
  "js_keyword_function": [
   "js_code_declaration_args",
   "js_keyword_function"
  ],
  "string_dot": [
   "js_code_dot",
   "string_dot"
  ],
  "js_keyword_from": [
   "js_code_import_single",
   "js_keyword_from"
  ],
  "js_keyword_import": [
   "js_code_import_single",
   "js_keyword_import"
  ],
  "js_keyword_let": [
   "js_code_let_assign",
   "js_keyword_let"
  ],
  "js_operator_or": [
   "js_code_or",
   "js_operator_or"
  ],
  "js_code_or": [
   "js_code_or",
   "js_if_else_if_combine"
  ],
  "js_code_return": [
   "js_code_return",
   "js_code_return_empty",
   "js_statement_return"
  ],
  "js_code_return_empty": [
   "js_code_return_empty",
   "js_return_empty"
  ],
  "js_string": [
   "js_code_string",
   "js_string",
   "marker_rename"
  ],
  "parsed_string": [
   "js_code_string"
  ],
  "code_string": [
   "js_code_string",
   "js_dollar_g",
   "js_dollar_new",
   "js_marker_insert",
   "marker_assign_replace_string"
  ],
  "declaration_id": [
   "js_declaration_name"
  ],
  "list_map_squash": [
   "js_declaration_params_names",
   "js_declaration_params_names_node",
   "list_map_squash"
  ],
  "js_declaration_params_names_node": [
   "js_declaration_params_names",
   "js_declaration_params_names_node"
  ],
  "js_declaration_param_add_node": [
   "js_declaration_param_add",
   "js_declaration_param_add_node",
   "js_dollar_new_args_inner"
  ],
  "nameds": [
   "js_declaration_single"
  ],
  "named": [
   "js_declaration_single"
  ],
  "js_declaration_to_block_body": [
   "js_declaration_single_block_body",
   "js_declaration_to_block_body",
   "js_expand_generic",
   "marker_down_choices_lambda",
   "marker_enter",
   "marker_functionize"
  ],
  "js_statement_return_empty_add": [
   "js_declaration_single_block_body_add_return",
   "js_dollar_ir",
   "js_statement_return_empty_add"
  ],
  "js_declare_init_set": [
   "js_declare",
   "js_declare_init_set",
   "marker_assign_replace"
  ],
  "assign_code": [
   "js_declare"
  ],
  "js_declare_assign": [
   "js_declare_assign",
   "js_declare_assign_null"
  ],
  "stack3": [
   "js_declare_assign",
   "js_dollar",
   "js_dollar_aa",
   "js_dollar_ien",
   "js_dollar_ine",
   "js_dollar_ir",
   "js_dollar_l",
   "js_dollar_r",
   "js_dollar_x"
  ],
  "js_null": [
   "js_declare_assign_null",
   "js_dollar_s",
   "js_null"
  ],
  "vd": [
   "js_declare_init_set",
   "js_declare_single"
  ],
  "declarators": [
   "js_declare_init_set"
  ],
  "declarations": [
   "js_declare_single",
   "js_dollar_a",
   "js_dollar_a_generic",
   "js_dollar_s",
   "js_identifier_defineds",
   "js_statement_call_get"
  ],
  "js_declare_single_init": [
   "js_declare_single_init",
   "marker_next_declare_single_init"
  ],
  "declarator": [
   "js_declare_single_init"
  ],
  "js_dollar_choices": [
   "js_dollar",
   "js_dollar_choices",
   "js_dollar_new"
  ],
  "list_get_end_3": [
   "js_dollar",
   "list_get_end_3"
  ],
  "lambda_invoke_multiple": [
   "js_dollar",
   "lambda_invoke_multiple"
  ],
  "afters": [
   "js_dollar",
   "js_dollar_a",
   "js_dollar_aa",
   "js_dollar_a_generic",
   "js_dollar_f",
   "js_dollar_g",
   "js_dollar_ien",
   "js_dollar_ine",
   "js_dollar_ir",
   "js_dollar_l",
   "js_dollar_s",
   "js_dollar_x",
   "lambda_invoke_multiple"
  ],
  "choice_name": [
   "js_dollar"
  ],
  "list_remove_multiple": [
   "js_dollar_a",
   "list_remove_multiple",
   "marker_functionize"
  ],
  "js_dollar_a_generic": [
   "js_dollar_a",
   "js_dollar_a_generic",
   "js_dollar_s"
  ],
  "js_dollar_a": [
   "js_dollar_a",
   "js_dollar_choices"
  ],
  "js_dollar_aa": [
   "js_dollar_aa",
   "js_dollar_choices"
  ],
  "js_dollar_ine": [
   "js_dollar_choices",
   "js_dollar_ine"
  ],
  "js_dollar_ib": [
   "js_dollar_choices",
   "js_dollar_ib"
  ],
  "js_dollar_l": [
   "js_dollar_choices",
   "js_dollar_l"
  ],
  "js_dollar_ir": [
   "js_dollar_choices",
   "js_dollar_ir"
  ],
  "js_dollar_ien": [
   "js_dollar_choices",
   "js_dollar_ien"
  ],
  "js_dollar_f": [
   "js_dollar_choices",
   "js_dollar_f"
  ],
  "js_dollar_s": [
   "js_dollar_choices",
   "js_dollar_s"
  ],
  "js_dollar_g": [
   "js_dollar_choices",
   "js_dollar_g"
  ],
  "js_dollar_rf": [
   "js_dollar_choices",
   "js_dollar_rf"
  ],
  "js_dollar_rt": [
   "js_dollar_choices",
   "js_dollar_rt"
  ],
  "js_dollar_r": [
   "js_dollar_choices",
   "js_dollar_r"
  ],
  "js_dollar_ie": [
   "js_dollar_choices",
   "js_dollar_ie"
  ],
  "js_dollar_i": [
   "js_dollar_choices",
   "js_dollar_i",
   "js_dollar_ien_generic",
   "js_dollar_if_call",
   "js_dollar_ir"
  ],
  "js_dollar_x": [
   "js_dollar_choices",
   "js_dollar_x"
  ],
  "marker_next_declare_single_init": [
   "js_dollar_choice_arguments",
   "marker_next_declare_single_init",
   "marker_next_declare_single_init_elements",
   "marker_screen_add"
  ],
  "js_dollar_choice_arguments": [
   "js_dollar_choice_arguments",
   "js_dollar_choice_arguments_names",
   "js_dollar_new_args_inner"
  ],
  "js_dollar_choice_arguments_names": [
   "js_dollar_choice_arguments_names"
  ],
  "list_first_remaining": [
   "js_dollar_g",
   "list_first_remaining"
  ],
  "js_identifier_unique_ast": [
   "js_dollar_g",
   "js_function_id_add",
   "js_identifier_unique_ast"
  ],
  "list_index_of_next_outside": [
   "js_dollar_g",
   "js_identifier_defineds",
   "list_index_of_next_outside"
  ],
  "object_name": [
   "js_dollar_g"
  ],
  "property_names": [
   "js_dollar_g"
  ],
  "js_keyword_false": [
   "js_dollar_i",
   "js_keyword_false"
  ],
  "js_keyword_if": [
   "js_dollar_i",
   "js_keyword_if"
  ],
  "js_dollar_if_call": [
   "js_dollar_ib",
   "js_dollar_ie",
   "js_dollar_if_call"
  ],
  "js_dollar_ien_generic": [
   "js_dollar_ien",
   "js_dollar_ien_generic",
   "js_dollar_ine"
  ],
  "consequent": [
   "js_dollar_ir",
   "js_if_else_if_combine",
   "marker_enter"
  ],
  "js_dollar_new_args_inner": [
   "js_dollar_new",
   "js_dollar_new_args",
   "js_dollar_new_args_inner"
  ],
  "js_property_parse_expression_add": [
   "js_dollar_new",
   "js_property_parse_expression_add"
  ],
  "js_dollar_new": [
   "js_dollar_new"
  ],
  "js_dollar_new_args": [
   "js_dollar_new_args"
  ],
  "js_return_empty": [
   "js_dollar_r",
   "js_return_code_replace",
   "js_return_empty"
  ],
  "expressions": [
   "js_dollar_r"
  ],
  "js_return_code_replace": [
   "js_dollar_rf",
   "js_dollar_rt",
   "js_return_code_replace"
  ],
  "list_next_index": [
   "js_dollar_s",
   "js_dollar_x",
   "list_next_index"
  ],
  "js_left_right_set": [
   "js_dollar_s",
   "js_if_else_if_combine",
   "js_left_right_set"
  ],
  "name3": [
   "js_dollar_s"
  ],
  "index_next": [
   "js_dollar_s",
   "list_index_of_delta",
   "list_index_of_delta_outside",
   "list_index_of_next",
   "list_index_of_next_outside",
   "list_next",
   "list_next_try"
  ],
  "js_dollar_task_each_code_own_fn": [
   "js_dollar_task_each_code_own_fn"
  ],
  "js_dollar_task_if_else_to_generic": [
   "js_dollar_task_if_else_to_generic"
  ],
  "js_expand_generic": [
   "js_dollar_x",
   "js_expand_generic",
   "marker_expand"
  ],
  "list_remove_all_multiple": [
   "js_expand_generic",
   "list_remove_all_multiple"
  ],
  "js_return_on": [
   "js_expand_generic",
   "js_return_name",
   "js_return_on"
  ],
  "list_last": [
   "js_expand_generic",
   "js_return_name",
   "list_last",
   "list_last_is",
   "list_last_or_null",
   "messenger_reply",
   "messenger_reply_unreplied",
   "prompt_previous"
  ],
  "list_intersect": [
   "js_expand_generic",
   "js_imports_missing",
   "list_intersect",
   "list_intersect_empty_is_assert"
  ],
  "js_statement_call_get": [
   "js_expand_generic",
   "js_statement_call_get",
   "marker_call_replace_generic"
  ],
  "a_names": [
   "js_expand_generic"
  ],
  "identifiers_call": [
   "js_expand_generic"
  ],
  "intesection": [
   "js_expand_generic"
  ],
  "identifiers_all": [
   "js_expand_generic"
  ],
  "last": [
   "js_expand_generic",
   "js_return_name",
   "js_stack_declaration_asyncify",
   "js_stack_last",
   "js_stack_last_multiple",
   "list_last",
   "list_last_is",
   "marker_if_test_replace"
  ],
  "prettier": [
   "js_format"
  ],
  "parserBabel": [
   "js_format"
  ],
  "format": [
   "js_format"
  ],
  "parser": [
   "js_format"
  ],
  "plugins": [
   "js_format"
  ],
  "braceStyle": [
   "js_format"
  ],
  "js_stack_last_function": [
   "js_function_last_asyncify",
   "js_stack_last_function",
   "marker_param_add"
  ],
  "difference": [
   "js_function_last_asyncify",
   "list_difference",
   "list_get_end",
   "prompt_previous"
  ],
  "list_adder_unique": [
   "js_identifiers",
   "js_identifiers_names",
   "js_imports_declarations",
   "js_node_types",
   "list_adder_unique",
   "marker_functionize"
  ],
  "js_identifiers": [
   "js_identifiers",
   "js_identifiers_named",
   "marker_call_atomize"
  ],
  "list_all": [
   "js_identifiers_to_names",
   "js_identifier_unique",
   "list_all",
   "list_filter_starts_with_not_multiple",
   "search_generic"
  ],
  "b2": [
   "js_identifiers_to_names"
  ],
  "message2": [
   "js_identifiers_to_names",
   "list_size_1_assert"
  ],
  "js_types_function": [
   "js_identifier_defineds",
   "js_stack_last_function",
   "js_types_function",
   "js_types_function_includes"
  ],
  "js_stack_filtered_multiple_each": [
   "js_identifier_defineds",
   "js_stack_filtered_each",
   "js_stack_filtered_multiple_each"
  ],
  "js_stack_filtered_each": [
   "js_identifier_defineds",
   "js_stack_filtered_each"
  ],
  "list_adder_multiple": [
   "js_identifier_defineds",
   "list_adder_multiple"
  ],
  "js_identifier_defineds": [
   "js_identifier_defineds",
   "js_let_add",
   "marker_functionize"
  ],
  "bs": [
   "js_identifier_defineds"
  ],
  "list_item": [
   "js_identifier_defineds"
  ],
  "ids": [
   "js_identifier_defineds"
  ],
  "values": [
   "js_identifier_defineds",
   "roman_to_integer"
  ],
  "types": [
   "js_identifier_defineds",
   "js_node_types_is",
   "js_stack_filtered_multiple",
   "js_stack_filtered_multiple_each",
   "js_stack_last_function",
   "js_stack_last_multiple",
   "js_visit_types"
  ],
  "defineds": [
   "js_identifier_defineds",
   "js_let_add",
   "marker_functionize"
  ],
  "name_from": [
   "js_identifier_replace"
  ],
  "name_to": [
   "js_identifier_replace"
  ],
  "string_is_assert": [
   "js_identifier_unique",
   "string_is_assert"
  ],
  "string_empty_is": [
   "js_identifier_unique",
   "messenger_reply_messages",
   "string_empty_is",
   "string_empty_not_is"
  ],
  "used": [
   "js_identifier_unique"
  ],
  "attempt": [
   "js_identifier_unique"
  ],
  "bs_body": [
   "js_if_blockify_generic"
  ],
  "js_node_type_is_if_async": [
   "js_if_else_if_combine",
   "js_node_type_is_if_async"
  ],
  "consequent2": [
   "js_if_else_if_combine"
  ],
  "test": [
   "js_if_else_if_combine"
  ],
  "test2": [
   "js_if_else_if_combine"
  ],
  "js_imports_declarations": [
   "js_imports",
   "js_imports_declarations",
   "js_imports_paths_fix",
   "js_imports_unused"
  ],
  "imports_declarations": [
   "js_imports",
   "js_imports_paths_fix"
  ],
  "js_imports_all": [
   "js_imports_all",
   "js_imports_declarations"
  ],
  "specifiers": [
   "js_imports_declarations"
  ],
  "source": [
   "js_imports_declarations"
  ],
  "a3": [
   "js_imports_declarations",
   "js_marker_name_get",
   "js_unparse"
  ],
  "specifier": [
   "js_imports_declarations"
  ],
  "local": [
   "js_imports_declarations"
  ],
  "js_imports_unused": [
   "js_imports_fix",
   "js_imports_unused",
   "js_imports_unused_remove"
  ],
  "js_imports_fix": [
   "js_imports_fix",
   "js_outside_move"
  ],
  "unuseds": [
   "js_imports_fix",
   "js_imports_unused",
   "js_imports_unused_remove"
  ],
  "unused": [
   "js_imports_fix",
   "js_imports_unused",
   "js_imports_unused_remove"
  ],
  "imports_self": [
   "js_imports_missing"
  ],
  "missing": [
   "js_imports_missing",
   "marker_functionize"
  ],
  "list_filter_property": [
   "js_imports_unused",
   "js_outside_move",
   "list_filter_property",
   "messenger_reply_unreplied"
  ],
  "count_import": [
   "js_imports_unused"
  ],
  "count_declaration": [
   "js_imports_unused"
  ],
  "js_import_inside": [
   "js_import_inside"
  ],
  "js_import_inside_task_simple": [
   "js_import_inside_task_simple"
  ],
  "js_keyword_null": [
   "js_keyword_null",
   "js_null"
  ],
  "js_let_add_task_simple": [
   "js_let_add_task_simple"
  ],
  "e2": [
   "js_log_remove",
   "list_get_end_2"
  ],
  "js_marker_is": [
   "js_markers",
   "js_marker_is"
  ],
  "js_marker_insert": [
   "js_marker_insert",
   "marker_new",
   "marker_top"
  ],
  "js_marker_name_get": [
   "js_marker_is",
   "js_marker_named",
   "js_marker_name_get",
   "marker_top"
  ],
  "marker_name_actual": [
   "js_marker_is",
   "js_marker_named"
  ],
  "js_marker_named_ast": [
   "js_marker_named_ast",
   "js_marker_named_ast_arg"
  ],
  "m_name_from": [
   "js_marker_named_ast",
   "marker_functionize",
   "marker_move"
  ],
  "marker_v": [
   "js_marker_named_ast"
  ],
  "js_marker_named_ast_arg": [
   "js_marker_named_ast_arg",
   "marker_functionize",
   "marker_move"
  ],
  "m_name_to": [
   "js_marker_named_ast_arg",
   "marker_functionize",
   "marker_move"
  ],
  "marker_v_to": [
   "js_marker_named_ast_arg"
  ],
  "a_to": [
   "js_marker_named_ast_arg",
   "marker_functionize",
   "marker_move"
  ],
  "js_node_is": [
   "js_marker_name_get",
   "js_node_is",
   "js_node_type_is",
   "js_visit_filter",
   "js_visit_nodes",
   "js_visit_types"
  ],
  "v4": [
   "js_marker_name_get",
   "messenger_reply_messages",
   "uuid"
  ],
  "v5": [
   "js_marker_name_get",
   "messenger_reply_messages",
   "roman_to_integer"
  ],
  "v6": [
   "js_marker_name_get",
   "messenger_reply_messages",
   "roman_to_integer"
  ],
  "a_first": [
   "js_marker_name_get"
  ],
  "a4": [
   "js_marker_name_get"
  ],
  "v7": [
   "js_marker_name_get",
   "string_trim"
  ],
  "a5": [
   "js_marker_name_get"
  ],
  "variable_name": [
   "js_node_atomize"
  ],
  "ast_callee": [
   "js_node_atomize"
  ],
  "param": [
   "js_node_atomize"
  ],
  "js_node_types_includes": [
   "js_node_types_includes",
   "marker_functionize"
  ],
  "node_type": [
   "js_node_types_includes",
   "js_type"
  ],
  "js_node_types_is": [
   "js_node_types_is",
   "js_stack_filtered_multiple",
   "js_visit_types",
   "log_unparse_try"
  ],
  "match": [
   "js_node_types_is",
   "log_unparse_try",
   "roman_to_integer"
  ],
  "js_node_type_is_assert": [
   "js_node_type_is_assert",
   "marker_next_await"
  ],
  "init_code": [
   "js_null",
   "marker_assign_replace"
  ],
  "fds": [
   "js_outside_move"
  ],
  "acorn": [
   "js_parse"
  ],
  "ecmaVersion": [
   "js_parse"
  ],
  "sourceType": [
   "js_parse"
  ],
  "statements": [
   "js_parse_statement"
  ],
  "js_property_generic": [
   "js_property",
   "js_property_generic",
   "js_property_identifier"
  ],
  "js_property": [
   "js_property",
   "js_property_parse_expression",
   "marker_screen_add"
  ],
  "shorthand": [
   "js_property",
   "js_property_generic"
  ],
  "method": [
   "js_property_generic"
  ],
  "computed": [
   "js_property_generic"
  ],
  "kind": [
   "js_property_generic"
  ],
  "js_property_parse_expression": [
   "js_property_parse_expression",
   "js_property_parse_expression_add"
  ],
  "key_code": [
   "js_property_parse_expression",
   "js_property_parse_expression_add"
  ],
  "value_code": [
   "js_property_parse_expression",
   "js_property_parse_expression_add"
  ],
  "js_return_on_async": [
   "js_return_atomize",
   "js_return_on_async"
  ],
  "js_visit_match": [
   "js_return_atomize",
   "js_visit_match",
   "marker_call_atomize"
  ],
  "rs": [
   "js_return_atomize"
  ],
  "identifier_not": [
   "js_return_atomize",
   "js_return_name",
   "js_return_on",
   "js_return_on_async"
  ],
  "replace_to": [
   "js_return_code_replace"
  ],
  "identifier_if": [
   "js_return_name",
   "js_return_on",
   "js_return_on_async"
  ],
  "name_argument": [
   "js_return_name"
  ],
  "js_stack_declaration_asyncify": [
   "js_stack_declaration_asyncify",
   "marker_call"
  ],
  "js_stack_filtered": [
   "js_stack_filtered"
  ],
  "js_stack_filtered_multiple": [
   "js_stack_filtered_multiple",
   "js_stack_filtered_multiple_each",
   "js_stack_last_multiple"
  ],
  "lambda$node": [
   "js_stack_filtered_multiple_each"
  ],
  "js_stack_last_multiple": [
   "js_stack_last",
   "js_stack_last_function",
   "js_stack_last_multiple"
  ],
  "list_last_or_null": [
   "js_stack_last_multiple",
   "list_last_or_null"
  ],
  "js_stack_list_block_is": [
   "js_stack_list_block_is",
   "marker_down_choices_lambda"
  ],
  "expression_next": [
   "js_statement_call_get"
  ],
  "js_statement_return_empty": [
   "js_statement_return_add",
   "js_statement_return_empty",
   "js_statement_return_empty_add"
  ],
  "types_function": [
   "js_types_function"
  ],
  "js_types_function_includes": [
   "js_types_function_includes",
   "marker_enter"
  ],
  "js_visit_each": [
   "js_unparse",
   "js_visit_each"
  ],
  "js_visit_filter": [
   "js_unparse",
   "js_visit",
   "js_visit_filter"
  ],
  "js_unparse_inner": [
   "js_unparse",
   "js_unparse_inner"
  ],
  "promise_not_is": [
   "js_unparse",
   "js_visit",
   "promise_not_is"
  ],
  "generate": [
   "js_unparse_inner"
  ],
  "visit_filter": [
   "js_visit",
   "visit",
   "visit_filter"
  ],
  "js_visit_children_get": [
   "js_visit",
   "js_visit_children_get"
  ],
  "js_visit": [
   "js_visit",
   "js_visitors",
   "js_visit_each",
   "js_visit_each_async",
   "js_visit_match",
   "js_visit_nodes",
   "js_visit_types",
   "marker_down_choices_lambda"
  ],
  "lambda$v": [
   "js_visit",
   "js_visit_type",
   "js_visit_types"
  ],
  "lambda_inner": [
   "js_visit_calls_named"
  ],
  "js_visit_each_async": [
   "js_visit_each_async"
  ],
  "matches": [
   "js_visit_match",
   "messenger_reply_unread_click",
   "puppeteer_matches",
   "reply_on_match",
   "reply_sequence"
  ],
  "v_match": [
   "js_visit_match",
   "marker_call_atomize"
  ],
  "on_each": [
   "js_visit_nodes",
   "visit",
   "visit_async",
   "visit_filter",
   "visit_filter_async",
   "visit_filter_recursive",
   "visit_filter_recursive_async",
   "visit_unique_async"
  ],
  "js_visit_types": [
   "js_visit_type",
   "js_visit_types"
  ],
  "keyboard_typing_delay": [
   "keyboard_type_delay",
   "keyboard_typing_delay"
  ],
  "string_list_to": [
   "keyboard_type_delay",
   "string_list_to"
  ],
  "keyboard_type_delay": [
   "keyboard_type_delay",
   "messenger_reply",
   "messenger_reply_playwright"
  ],
  "delay_ms": [
   "keyboard_type_delay",
   "keyboard_typing_delay"
  ],
  "characters_per_minute": [
   "keyboard_typing_delay"
  ],
  "seconds_per_minute": [
   "keyboard_typing_delay"
  ],
  "ms_per_second": [
   "keyboard_typing_delay"
  ],
  "ms_per_minute": [
   "keyboard_typing_delay"
  ],
  "ms_per_character": [
   "keyboard_typing_delay"
  ],
  "high": [
   "keyboard_typing_delay"
  ],
  "kjv": [
   "kjv"
  ],
  "lambda_invoke": [
   "lambda_invoke",
   "lambda_invoke_multiple"
  ],
  "lambda_value": [
   "lambda_value"
  ],
  "list_adder_generic": [
   "list_adder",
   "list_adder_generic",
   "list_adder_multiple"
  ],
  "lambda$la": [
   "list_adder",
   "list_adder_async",
   "list_adder_multiple",
   "list_adder_multiple_async"
  ],
  "list_adder_inner": [
   "list_adder_async",
   "list_adder_generic",
   "list_adder_generic_async"
  ],
  "list_adder_generic_async": [
   "list_adder_generic_async",
   "list_adder_multiple_async"
  ],
  "list_add_multiple": [
   "list_adder_multiple",
   "list_adder_multiple_async",
   "list_add_multiple",
   "list_replace_all",
   "marker_functionize",
   "reply"
  ],
  "list_any_starts_with": [
   "list_any_starts_with",
   "list_filter_starts_with_any",
   "string_starts_with_digit"
  ],
  "list_copy": [
   "list_copy",
   "list_copy_reverse",
   "visit_filter_recursive",
   "visit_filter_recursive_async"
  ],
  "original": [
   "list_copy"
  ],
  "j": [
   "list_empty_is_assert"
  ],
  "list_empty_not_is_assert": [
   "list_empty_not_is_assert",
   "list_last"
  ],
  "list_filter_empty_not_is": [
   "list_filter_empty_not_is",
   "list_map_filter_string_empty_not_is",
   "reply"
  ],
  "filtered2": [
   "list_filter_empty_not_is"
  ],
  "list_filter_ends_with_any": [
   "list_filter_ends_with_any"
  ],
  "suffixes": [
   "list_filter_ends_with_any",
   "list_filter_ends_with_not_any"
  ],
  "string_ends_with_not": [
   "list_filter_ends_with_not_any",
   "string_ends_with_not"
  ],
  "list_filter_ends_with_not_any": [
   "list_filter_ends_with_not_any",
   "messenger_reply"
  ],
  "ewn": [
   "list_filter_ends_with_not_any",
   "string_ends_with_not"
  ],
  "object_property_equals_lambda": [
   "list_filter_property",
   "list_find_property",
   "object_property_equals_lambda"
  ],
  "property_value": [
   "list_filter_property",
   "list_find_property",
   "messenger_reply_unreplied",
   "object_property_equals",
   "object_property_equals_lambda"
  ],
  "string_starts_with_not": [
   "list_filter_starts_with_not",
   "list_filter_starts_with_not_multiple",
   "string_starts_with_not"
  ],
  "list_filter_starts_with_not": [
   "list_filter_starts_with_not"
  ],
  "predicate": [
   "list_find"
  ],
  "list_find_starts_with": [
   "list_find_starts_with",
   "list_map_prefix_any",
   "list_map_prefix_without_any"
  ],
  "list_first_second_generic": [
   "list_first_remaining",
   "list_first_second",
   "list_first_second_generic"
  ],
  "list_skip_1": [
   "list_first_remaining",
   "list_skip_1"
  ],
  "undefined_not_is_assert_lambda": [
   "list_get",
   "object_property_get",
   "undefined_not_is_assert",
   "undefined_not_is_assert_lambda"
  ],
  "object_get": [
   "list_get",
   "object_property_get"
  ],
  "list_index_last": [
   "list_get_end",
   "list_index_is",
   "list_index_last",
   "marker_bottom"
  ],
  "index_from_end": [
   "list_get_end"
  ],
  "list_includes_assert": [
   "list_includes_assert",
   "repo_exists_assert"
  ],
  "list_index_is": [
   "list_index_is",
   "list_index_of_delta"
  ],
  "index_last": [
   "list_index_is",
   "list_index_last",
   "messenger_reply_unreplied"
  ],
  "indexOf": [
   "list_index_of"
  ],
  "list_index_of_delta_outside": [
   "list_index_of_delta",
   "list_index_of_delta_outside",
   "list_index_of_next_outside"
  ],
  "list_index_of_delta": [
   "list_index_of_delta",
   "list_index_of_next",
   "list_index_of_previous"
  ],
  "delta": [
   "list_index_of_delta",
   "list_index_of_delta_outside",
   "list_index_of_next",
   "list_index_of_next_outside",
   "list_index_of_previous",
   "marker_down",
   "marker_up"
  ],
  "lastIndexOf": [
   "list_index_of_last"
  ],
  "list_index_of_next": [
   "list_index_of_next",
   "list_next",
   "list_next_try",
   "marker_next_index"
  ],
  "list_index_of_previous": [
   "list_index_of_previous",
   "list_previous",
   "marker_previous_index"
  ],
  "index_previous": [
   "list_index_of_previous",
   "list_previous"
  ],
  "list_insert_generic": [
   "list_insert",
   "list_insert_generic",
   "list_replace"
  ],
  "delete_count": [
   "list_insert",
   "list_insert_generic",
   "list_replace",
   "list_splice"
  ],
  "list_splice": [
   "list_insert_generic",
   "list_splice"
  ],
  "number_is": [
   "list_insert_generic",
   "number_is"
  ],
  "Array": [
   "list_is",
   "list_to",
   "string_list_to"
  ],
  "isArray": [
   "list_is"
  ],
  "list_is_assert": [
   "list_is_assert",
   "list_size",
   "marker_leave"
  ],
  "string_empty": [
   "list_join_empty",
   "string_empty"
  ],
  "list_last_is": [
   "list_last_is"
  ],
  "combineds": [
   "list_map_combine"
  ],
  "mapped6": [
   "list_map_first"
  ],
  "list_map_lower": [
   "list_map_lower",
   "reply"
  ],
  "list_map_path_join": [
   "list_map_path_join",
   "repos_gitignore_overwrite"
  ],
  "string_prefix_without": [
   "list_map_prefix_without",
   "list_map_prefix_without_any",
   "messenger_reply_unread_collect",
   "string_prefix_without"
  ],
  "list_map_property_lambda": [
   "list_map_property"
  ],
  "list_map_property_to": [
   "list_map_property_to"
  ],
  "list_map_split_comma": [
   "list_map_split_comma",
   "sandbox_4_a"
  ],
  "list_map_whitespace_normalize": [
   "list_map_whitespace_normalize",
   "sandbox_4_a"
  ],
  "list_pop": [
   "list_pop",
   "visit_filter_recursive",
   "visit_filter_recursive_async"
  ],
  "pop": [
   "list_pop",
   "path_join"
  ],
  "list_previous": [
   "list_previous"
  ],
  "arr": [
   "list_random_item"
  ],
  "list_range": [
   "list_range",
   "marker_functionize"
  ],
  "list_remove_at": [
   "list_remove",
   "list_remove_at",
   "marker_above_delete",
   "marker_next_delete"
  ],
  "splice": [
   "list_remove_at",
   "list_splice"
  ],
  "found": [
   "list_remove_property",
   "visit_unique_async"
  ],
  "list_replace": [
   "list_replace",
   "list_swap"
  ],
  "reverse": [
   "list_reverse"
  ],
  "list_set": [
   "list_set"
  ],
  "slice": [
   "list_slice",
   "string_slice"
  ],
  "sliced2": [
   "list_slice_count"
  ],
  "end": [
   "list_slice_end"
  ],
  "list_sort_number_mapper": [
   "list_sort_number_mapper",
   "list_sort_string_size"
  ],
  "va": [
   "list_sort_number_mapper"
  ],
  "vb": [
   "list_sort_number_mapper"
  ],
  "sort": [
   "list_sort_number_mapper",
   "list_sort_string"
  ],
  "string_size": [
   "list_sort_string_size",
   "string_prefix_without",
   "string_size",
   "string_size_less_1",
   "string_skip",
   "string_suffix_without",
   "string_trim_right"
  ],
  "list_process": [
   "list_squash"
  ],
  "bi": [
   "list_swap"
  ],
  "list_to_dictionary_async": [
   "list_to_dictionary_async",
   "repos_acronyms_to_names"
  ],
  "log_json": [
   "log_json"
  ],
  "console": [
   "log_keep",
   "messenger_reply_playwright"
  ],
  "log_unparse": [
   "log_unparse",
   "log_unparse_try"
  ],
  "marker_above_generic": [
   "marker_above",
   "marker_above_generic",
   "marker_below"
  ],
  "marker_above": [
   "marker_above"
  ],
  "marker_previous_index": [
   "marker_above_delete",
   "marker_functionize",
   "marker_previous_index"
  ],
  "marker_above_delete": [
   "marker_above_delete"
  ],
  "marker_index": [
   "marker_above_generic",
   "marker_index"
  ],
  "lambda$index": [
   "marker_above_generic"
  ],
  "marker_next_get": [
   "marker_assign_replace",
   "marker_call_replace_generic",
   "marker_expand",
   "marker_move",
   "marker_next",
   "marker_next_await",
   "marker_next_declare_single_init",
   "marker_next_get"
  ],
  "marker_assign_replace": [
   "marker_assign_replace",
   "marker_assign_replace_string"
  ],
  "marker_assign_replace_string": [
   "marker_assign_replace_string"
  ],
  "marker_below": [
   "marker_below"
  ],
  "marker_down_generic": [
   "marker_bottom",
   "marker_down",
   "marker_down_generic",
   "marker_up"
  ],
  "marker_bottom": [
   "marker_bottom"
  ],
  "delta_get": [
   "marker_bottom",
   "marker_down",
   "marker_down_generic",
   "marker_up"
  ],
  "marker_next_index": [
   "marker_call",
   "marker_enter",
   "marker_functionize",
   "marker_move",
   "marker_new",
   "marker_next_delete",
   "marker_next_get",
   "marker_next_index"
  ],
  "marker_call": [
   "marker_call"
  ],
  "marker_call_replace_generic": [
   "marker_call_atomize",
   "marker_call_replace",
   "marker_call_replace_generic"
  ],
  "marker_call_atomize": [
   "marker_call_atomize"
  ],
  "marker_call_replace": [
   "marker_call_replace"
  ],
  "code_replacement": [
   "marker_call_replace"
  ],
  "arg_index": [
   "marker_call_replace_generic"
  ],
  "arg_index_at": [
   "marker_call_replace_generic"
  ],
  "name_marker": [
   "marker_current_set"
  ],
  "marker_down": [
   "marker_down",
   "marker_down_1"
  ],
  "marker_down_1": [
   "marker_down_1"
  ],
  "marker_down_choices_lambda": [
   "marker_down_choices",
   "marker_down_choices_lambda"
  ],
  "marker_down_choices": [
   "marker_down_choices"
  ],
  "nodes": [
   "marker_down_choices"
  ],
  "index_new": [
   "marker_down_generic"
  ],
  "marker_enter": [
   "marker_enter"
  ],
  "marker_expand": [
   "marker_expand"
  ],
  "marker_first_index": [
   "marker_first",
   "marker_first_index"
  ],
  "index_value": [
   "marker_first"
  ],
  "object_property_equals": [
   "marker_functionize",
   "object_property_equals",
   "object_property_equals_lambda",
   "object_property_exists_equals"
  ],
  "marker_functionize": [
   "marker_functionize"
  ],
  "a_from": [
   "marker_functionize",
   "marker_move"
  ],
  "index_from": [
   "marker_functionize"
  ],
  "index_to": [
   "marker_functionize"
  ],
  "stack2_from": [
   "marker_functionize",
   "marker_move"
  ],
  "stack2_to": [
   "marker_functionize",
   "marker_move"
  ],
  "marker_if_test_replace": [
   "marker_if_test_replace"
  ],
  "marker_leave": [
   "marker_leave"
  ],
  "stack4": [
   "marker_leave"
  ],
  "stack5": [
   "marker_leave"
  ],
  "marker_move": [
   "marker_move"
  ],
  "marker_new": [
   "marker_new"
  ],
  "marker_next": [
   "marker_next"
  ],
  "marker_next_await": [
   "marker_next_await"
  ],
  "marker_next_delete": [
   "marker_next_delete",
   "marker_next_delete_multiple"
  ],
  "marker_next_delete_multiple": [
   "marker_next_delete_multiple"
  ],
  "marker_param_add": [
   "marker_param_add"
  ],
  "marker_remove": [
   "marker_remove",
   "marker_remove_marker_top"
  ],
  "marker_remove_marker_top": [
   "marker_remove_marker_top"
  ],
  "marker_rename": [
   "marker_rename"
  ],
  "a0": [
   "marker_rename"
  ],
  "marker_screen_add": [
   "marker_screen_add"
  ],
  "combined_screen": [
   "marker_screen_add"
  ],
  "name_next": [
   "marker_top"
  ],
  "marker_up": [
   "marker_up",
   "marker_up_1"
  ],
  "marker_up_1": [
   "marker_up_1"
  ],
  "messenger_reply_messages_transform": [
   "messenger_reply",
   "messenger_reply_messages_transform",
   "reply_test"
  ],
  "messenger_reply_messages_message": [
   "messenger_reply",
   "messenger_reply_messages",
   "messenger_reply_messages_message"
  ],
  "messenger_reply_unreplied": [
   "messenger_reply",
   "messenger_reply_unreplied"
  ],
  "messenger_reply_wait": [
   "messenger_reply",
   "messenger_reply_messages",
   "messenger_reply_unread_collect",
   "messenger_reply_wait"
  ],
  "messenger_reply_messages_urls_transform": [
   "messenger_reply",
   "messenger_reply_messages_urls_add_multiple",
   "messenger_reply_messages_urls_transform"
  ],
  "messenger_reply_messages": [
   "messenger_reply",
   "messenger_reply_messages",
   "messenger_reply_unread_collect"
  ],
  "messenger_reply_puppeteer": [
   "messenger_reply",
   "messenger_reply_puppeteer",
   "messenger_reply_unread_collect"
  ],
  "messenger_reply": [
   "messenger_reply"
  ],
  "page": [
   "messenger_reply",
   "messenger_reply_login",
   "messenger_reply_messages",
   "messenger_reply_messages_urls_add_page",
   "messenger_reply_playwright",
   "messenger_reply_puppeteer",
   "messenger_reply_unread_click",
   "messenger_reply_unread_collect",
   "messenger_reply_wait",
   "puppeteer_hrefs",
   "puppeteer_hrefs_starts_with",
   "puppeteer_matches"
  ],
  "messages_urls": [
   "messenger_reply",
   "messenger_reply_messages_urls_add_multiple",
   "messenger_reply_messages_urls_transform"
  ],
  "transform_inner": [
   "messenger_reply",
   "messenger_reply_messages_urls_add_multiple",
   "messenger_reply_messages_urls_transform"
  ],
  "skips": [
   "messenger_reply"
  ],
  "messages": [
   "messenger_reply",
   "messenger_reply_messages",
   "messenger_reply_unread_collect",
   "messenger_reply_unreplied",
   "reply_test"
  ],
  "mine_last": [
   "messenger_reply",
   "messenger_reply_unreplied"
  ],
  "unreplied": [
   "messenger_reply",
   "messenger_reply_unreplied"
  ],
  "mine_last_lines": [
   "messenger_reply"
  ],
  "mine_last_lines_last": [
   "messenger_reply"
  ],
  "messages2": [
   "messenger_reply"
  ],
  "focus": [
   "messenger_reply",
   "messenger_reply_playwright"
  ],
  "keyboard": [
   "messenger_reply",
   "messenger_reply_playwright"
  ],
  "press": [
   "messenger_reply"
  ],
  "messenger_reply_url": [
   "messenger_reply_login",
   "messenger_reply_playwright",
   "messenger_reply_unread_collect",
   "messenger_reply_url"
  ],
  "messenger_reply_login": [
   "messenger_reply_login"
  ],
  "chromium": [
   "messenger_reply_login",
   "messenger_reply_playwright"
  ],
  "firefox": [
   "messenger_reply_login",
   "messenger_reply_playwright"
  ],
  "webkit": [
   "messenger_reply_login",
   "messenger_reply_playwright"
  ],
  "browser": [
   "messenger_reply_login",
   "messenger_reply_playwright",
   "messenger_reply_puppeteer"
  ],
  "launch": [
   "messenger_reply_login",
   "messenger_reply_playwright",
   "messenger_reply_puppeteer"
  ],
  "headless": [
   "messenger_reply_login",
   "messenger_reply_playwright",
   "messenger_reply_puppeteer"
  ],
  "newContext": [
   "messenger_reply_login",
   "messenger_reply_playwright"
  ],
  "newPage": [
   "messenger_reply_login",
   "messenger_reply_playwright",
   "messenger_reply_puppeteer"
  ],
  "goto": [
   "messenger_reply_login",
   "messenger_reply_messages",
   "messenger_reply_playwright"
  ],
  "storageState": [
   "messenger_reply_login",
   "messenger_reply_playwright"
  ],
  "messenger_reply_messages_name": [
   "messenger_reply_messages",
   "messenger_reply_messages_name",
   "messenger_reply_unreplied"
  ],
  "messenger_reply_messages_me": [
   "messenger_reply_messages",
   "messenger_reply_messages_me",
   "messenger_reply_unreplied"
  ],
  "messenger_reply_messages_urls_add": [
   "messenger_reply_messages",
   "messenger_reply_messages_urls_add"
  ],
  "string_trim": [
   "messenger_reply_messages",
   "string_trim"
  ],
  "conversation": [
   "messenger_reply_messages"
  ],
  "$": [
   "messenger_reply_messages",
   "messenger_reply_unread_collect"
  ],
  "children": [
   "messenger_reply_messages",
   "visit_filter_recursive",
   "visit_filter_recursive_async",
   "visit_unique_async"
  ],
  "$$": [
   "messenger_reply_messages",
   "puppeteer_matches"
  ],
  "children2": [
   "messenger_reply_messages"
  ],
  "c2": [
   "messenger_reply_messages"
  ],
  "parentElement": [
   "messenger_reply_messages"
  ],
  "tagName": [
   "messenger_reply_messages"
  ],
  "parentTag": [
   "messenger_reply_messages"
  ],
  "evaluate": [
   "messenger_reply_messages",
   "puppeteer_matches"
  ],
  "imgs": [
   "messenger_reply_messages"
  ],
  "img": [
   "messenger_reply_messages"
  ],
  "getComputedStyle": [
   "messenger_reply_messages"
  ],
  "borderRadius": [
   "messenger_reply_messages"
  ],
  "$$eval": [
   "messenger_reply_messages",
   "puppeteer_hrefs"
  ],
  "textContent": [
   "messenger_reply_messages",
   "puppeteer_matches"
  ],
  "lambda$messages": [
   "messenger_reply_messages_transform"
  ],
  "fb_path": [
   "messenger_reply_messages_transform",
   "messenger_reply_messages_urls_transform"
  ],
  "transform": [
   "messenger_reply_messages_transform",
   "messenger_reply_messages_urls_transform"
  ],
  "messenger_reply_messages_urls_add_multiple": [
   "messenger_reply_messages_urls_add",
   "messenger_reply_messages_urls_add_multiple",
   "messenger_reply_messages_urls_add_page"
  ],
  "urls": [
   "messenger_reply_messages_urls_add",
   "messenger_reply_messages_urls_add_multiple",
   "messenger_reply_messages_urls_add_page",
   "messenger_reply_unread_collect"
  ],
  "puppeteer_hrefs_starts_with": [
   "messenger_reply_messages_urls_add_page",
   "puppeteer_hrefs_starts_with"
  ],
  "messenger_reply_messages_urls_add_page": [
   "messenger_reply_messages_urls_add_page",
   "messenger_reply_unread_collect"
  ],
  "messenger_reply_messages_urls_get": [
   "messenger_reply_messages_urls_get",
   "messenger_reply_messages_urls_transform"
  ],
  "retry_on_error": [
   "messenger_reply_playwright",
   "retry_on_error"
  ],
  "messenger_reply_playwright": [
   "messenger_reply_playwright"
  ],
  "pin": [
   "messenger_reply_playwright"
  ],
  "waitForSelector": [
   "messenger_reply_playwright",
   "messenger_reply_unread_collect",
   "messenger_reply_wait"
  ],
  "locator": [
   "messenger_reply_playwright"
  ],
  "nth": [
   "messenger_reply_playwright"
  ],
  "click": [
   "messenger_reply_playwright",
   "messenger_reply_unread_click",
   "messenger_reply_unread_collect"
  ],
  "messenger_reply_user_data_path": [
   "messenger_reply_puppeteer",
   "messenger_reply_user_data_path"
  ],
  "lambda$page": [
   "messenger_reply_puppeteer"
  ],
  "puppeteer": [
   "messenger_reply_puppeteer"
  ],
  "userDataDir": [
   "messenger_reply_puppeteer"
  ],
  "protocolTimeout": [
   "messenger_reply_puppeteer"
  ],
  "puppeteer_matches": [
   "messenger_reply_unread_click",
   "puppeteer_matches"
  ],
  "messenger_reply_unread_click": [
   "messenger_reply_unread_click",
   "messenger_reply_unread_collect"
  ],
  "messenger_reply_unread_collect": [
   "messenger_reply_unread_collect"
  ],
  "link": [
   "messenger_reply_unread_collect",
   "puppeteer_hrefs"
  ],
  "state": [
   "messenger_reply_unread_collect"
  ],
  "urls_new": [
   "messenger_reply_unread_collect"
  ],
  "url_new": [
   "messenger_reply_unread_collect"
  ],
  "mine": [
   "messenger_reply_unreplied"
  ],
  "message_box": [
   "messenger_reply_wait"
  ],
  "timeout": [
   "messenger_reply_wait"
  ],
  "newFunction": [
   "newFunction"
  ],
  "package_name": [
   "npm_install"
  ],
  "isFinite": [
   "number_is"
  ],
  "num": [
   "number_pad"
  ],
  "String": [
   "number_pad"
  ],
  "padStart": [
   "number_pad"
  ],
  "Object": [
   "object_assign",
   "object_properties",
   "object_property_exists"
  ],
  "object_merge_generic": [
   "object_merge",
   "object_merge_generic"
  ],
  "strict": [
   "object_merge",
   "object_merge_generic"
  ],
  "obj": [
   "object_properties",
   "object_properties_delete_all"
  ],
  "getOwnPropertyNames": [
   "object_properties"
  ],
  "hasOwn": [
   "object_property_exists"
  ],
  "object_property_exists_assert": [
   "object_property_exists_assert"
  ],
  "object_property_exists_equals": [
   "object_property_exists_equals",
   "watch"
  ],
  "in_progress": [
   "object_property_exists_equals",
   "watch"
  ],
  "object_property_exists_not_assert": [
   "object_property_exists_not_assert",
   "object_property_set_exists_not"
  ],
  "undefined_is": [
   "undefined_is",
   "undefined_not_is_assert_lambda"
  ],
  "value_set": [
   "object_property_lambda",
   "object_property_lambda_async"
  ],
  "segments": [
   "path_join"
  ],
  "seg": [
   "path_join"
  ],
  "path_repo_combine": [
   "path_repo_about",
   "path_repo_combine"
  ],
  "path_repo_about": [
   "path_repo_about",
   "repo_acronym_get",
   "repo_acronym_set"
  ],
  "a_path": [
   "path_repo_about",
   "repo_acronym_get",
   "repo_acronym_set"
  ],
  "r_path": [
   "path_repo_combine",
   "repo_path"
  ],
  "then": [
   "promise_is"
  ],
  "catch": [
   "promise_is"
  ],
  "prompt_previous": [
   "prompt_previous"
  ],
  "puppeteer_hrefs": [
   "puppeteer_hrefs",
   "puppeteer_hrefs_starts_with"
  ],
  "links": [
   "puppeteer_hrefs"
  ],
  "hrefs": [
   "puppeteer_hrefs",
   "puppeteer_hrefs_starts_with"
  ],
  "el": [
   "puppeteer_matches"
  ],
  "txt": [
   "puppeteer_matches"
  ],
  "python_install": [
   "python_install"
  ],
  "rr": [
   "range"
  ],
  "reply_on_match": [
   "reply",
   "reply_on_match"
  ],
  "reply_sequence": [
   "reply",
   "reply_sequence"
  ],
  "reply": [
   "reply",
   "reply_test"
  ],
  "outputs": [
   "reply",
   "reply_test"
  ],
  "wrapped_fn": [
   "reply_on_match"
  ],
  "on_match": [
   "reply_on_match"
  ],
  "reply_on_match_inner": [
   "reply_on_match"
  ],
  "sequence": [
   "reply_sequence"
  ],
  "reply_sequence_matches": [
   "reply_sequence"
  ],
  "sequence_item": [
   "reply_sequence"
  ],
  "token": [
   "reply_sequence"
  ],
  "reply_test": [
   "reply_test"
  ],
  "repo_acronym_get": [
   "repos_acronyms_to_names",
   "repo_acronym_get"
  ],
  "repos_acronyms_to_names": [
   "repos_acronyms_to_names",
   "repo_acronym_to_name"
  ],
  "repos": [
   "repos_acronyms_to_names",
   "repos_gitignore_overwrite"
  ],
  "repos_folder": [
   "repos_folder",
   "repos_names",
   "repo_path"
  ],
  "repos_gitignore_overwrite": [
   "repos_gitignore_overwrite"
  ],
  "repos_paths_map_unordered": [
   "repos_paths_map_unordered",
   "function_run_git",
   "repos_paths_map_unordered_combine"
  ],
  "repo_acronym_set": [
   "repo_acronym_set"
  ],
  "repo_acronym_to_name": [
   "repo_acronym_to_name",
   "repo_acronym_to_path",
   "user_repo_set"
  ],
  "repos_matching": [
   "repo_acronym_to_name"
  ],
  "path_repo": [
   "repo_acronym_to_path"
  ],
  "repo_exists_assert": [
   "repo_exists_assert",
   "user_repo_get",
   "user_repo_set"
  ],
  "wait": [
   "retry"
  ],
  "success": [
   "retry",
   "schtasks_query",
   "throws_not_async"
  ],
  "errors": [
   "retry"
  ],
  "error_text": [
   "retry_on_error"
  ],
  "unicodeToAscii": [
   "roman_to_integer"
  ],
  "roman": [
   "roman_to_integer"
  ],
  "Ⅰ": [
   "roman_to_integer"
  ],
  "Ⅱ": [
   "roman_to_integer"
  ],
  "Ⅲ": [
   "roman_to_integer"
  ],
  "Ⅳ": [
   "roman_to_integer"
  ],
  "Ⅴ": [
   "roman_to_integer"
  ],
  "Ⅵ": [
   "roman_to_integer"
  ],
  "Ⅶ": [
   "roman_to_integer"
  ],
  "Ⅷ": [
   "roman_to_integer"
  ],
  "Ⅸ": [
   "roman_to_integer"
  ],
  "Ⅹ": [
   "roman_to_integer"
  ],
  "Ⅺ": [
   "roman_to_integer"
  ],
  "Ⅻ": [
   "roman_to_integer"
  ],
  "Ⅼ": [
   "roman_to_integer"
  ],
  "Ⅽ": [
   "roman_to_integer"
  ],
  "Ⅾ": [
   "roman_to_integer"
  ],
  "Ⅿ": [
   "roman_to_integer"
  ],
  "ch": [
   "roman_to_integer"
  ],
  "romanToInt": [
   "roman_to_integer"
  ],
  "I": [
   "roman_to_integer"
  ],
  "V": [
   "roman_to_integer"
  ],
  "X": [
   "roman_to_integer"
  ],
  "L": [
   "roman_to_integer"
  ],
  "C": [
   "roman_to_integer"
  ],
  "D": [
   "roman_to_integer"
  ],
  "M": [
   "roman_to_integer"
  ],
  "total": [
   "roman_to_integer"
  ],
  "v1": [
   "roman_to_integer"
  ],
  "parseRomanOrInteger": [
   "roman_to_integer"
  ],
  "romanPart": [
   "roman_to_integer"
  ],
  "asciiRoman": [
   "roman_to_integer"
  ],
  "s5": [
   "s5"
  ],
  "s5_inner": [
   "s5_inner",
   "sandbox_5"
  ],
  "sandbox": [
   "sandbox"
  ],
  "sandbox_2": [
   "sandbox_2"
  ],
  "output_path": [
   "sandbox_2"
  ],
  "newLocal": [
   "sandbox_2"
  ],
  "sandbox_3": [
   "sandbox_3"
  ],
  "string_split_semicolon": [
   "sandbox_4_a",
   "string_split_semicolon"
  ],
  "sandbox_4_a": [
   "sandbox_4_a"
  ],
  "split3": [
   "sandbox_4_a",
   "string_split_colon",
   "string_split_semicolon",
   "string_split_semicolon_space"
  ],
  "sandbox_5": [
   "sandbox_5"
  ],
  "sandbox_5_a": [
   "sandbox_5_a"
  ],
  "terms": [
   "search_generic"
  ],
  "term": [
   "search_generic"
  ],
  "f_names_search": [
   "search_generic"
  ],
  "express": [
   "server"
  ],
  "server": [
   "server"
  ],
  "app": [
   "server"
  ],
  "port": [
   "server"
  ],
  "static": [
   "server"
  ],
  "use": [
   "server"
  ],
  "listen": [
   "server"
  ],
  "setTimeout": [
   "sleep"
  ],
  "storage_local_key_get": [
   "storage_local_get",
   "storage_local_key_get",
   "storage_local_set"
  ],
  "storage_local_get": [
   "storage_local_get",
   "storage_local_get_context",
   "storage_local_initialize"
  ],
  "storage_local_key": [
   "storage_local_get",
   "storage_local_set"
  ],
  "localStorage": [
   "storage_local_get",
   "storage_local_set"
  ],
  "getItem": [
   "storage_local_get"
  ],
  "storage_local_set": [
   "storage_local_initialize",
   "storage_local_set",
   "storage_local_set_context"
  ],
  "ley": [
   "storage_local_key_get"
  ],
  "setItem": [
   "storage_local_set"
  ],
  "b64": [
   "string_base64_to"
  ],
  "btoa": [
   "string_base64_to"
  ],
  "b64node": [
   "string_base64_to"
  ],
  "string_empty_not_is_assert": [
   "string_empty_not_is_assert",
   "task_new"
  ],
  "endsWith": [
   "string_ends_with"
  ],
  "sw2": [
   "string_ends_with_space",
   "string_starts_with_dot",
   "string_starts_with_space"
  ],
  "string_is_assert_json": [
   "string_includes",
   "string_is_assert_json"
  ],
  "string_is_assert_message": [
   "string_includes",
   "string_is_assert_json",
   "string_is_assert_message"
  ],
  "string": [
   "string_includes"
  ],
  "str": [
   "string_letters_only",
   "string_list_to",
   "whitespace_normalize"
  ],
  "undefined": [
   "string_list_to",
   "undefined"
  ],
  "segmenter": [
   "string_list_to"
  ],
  "Intl": [
   "string_list_to"
  ],
  "Segmenter": [
   "string_list_to"
  ],
  "granularity": [
   "string_list_to"
  ],
  "segment": [
   "string_list_to"
  ],
  "blessing": [
   "string_lord_bless_your"
  ],
  "toLowerCase": [
   "string_lower_to"
  ],
  "string_pad": [
   "string_pad",
   "string_pad_space",
   "tasks_run"
  ],
  "padding": [
   "string_pad",
   "string_padded_is"
  ],
  "padded": [
   "string_pad",
   "string_pad_space"
  ],
  "string_pad_space": [
   "string_pad_space"
  ],
  "string_slice": [
   "string_prefix_without",
   "string_skip",
   "string_slice",
   "string_suffix_without",
   "string_take"
  ],
  "string_size_less_1": [
   "string_size_less_1",
   "string_take_less_1"
  ],
  "sz": [
   "string_size_less_1"
  ],
  "sz1": [
   "string_size_less_1",
   "string_take_less_1"
  ],
  "lambda$s": [
   "string_skip_while",
   "string_trim_right"
  ],
  "split4": [
   "string_split_dash"
  ],
  "string_split_semicolon_space": [
   "string_split_semicolon_space"
  ],
  "startsWith": [
   "string_starts_with"
  ],
  "changed": [
   "string_suffix_change"
  ],
  "trim": [
   "string_trim",
   "whitespace_normalize"
  ],
  "z": [
   "string_trim_right"
  ],
  "toUpperCase": [
   "string_upper_to"
  ],
  "task_function_name_part": [
   "tasks_run",
   "task_function_name_part",
   "task_new"
  ],
  "tasks_run": [
   "tasks_run"
  ],
  "result3": [
   "tasks_run"
  ],
  "f_name_task": [
   "task_new"
  ],
  "task_new_simple": [
   "task_new_simple"
  ],
  "tautology": [
   "tautology",
   "visit",
   "visit_async"
  ],
  "description": [
   "todo"
  ],
  "trinity_green": [
   "trinity_green"
  ],
  "AdmZip": [
   "unzip"
  ],
  "zip": [
   "unzip"
  ],
  "extractAllTo": [
   "unzip"
  ],
  "user_repo_set": [
   "user_repo_set"
  ],
  "uuidv4": [
   "uuid"
  ],
  "visit": [
   "visit"
  ],
  "children_get": [
   "visit",
   "visit_async",
   "visit_filter",
   "visit_filter_async",
   "visit_filter_recursive",
   "visit_filter_recursive_async",
   "visit_unique_async"
  ],
  "visit_filter_async": [
   "visit_async",
   "visit_filter_async"
  ],
  "visit_async": [
   "visit_async",
   "visit_unique_async"
  ],
  "visit_filter_recursive": [
   "visit_filter",
   "visit_filter_recursive"
  ],
  "visit_filter_recursive_async": [
   "visit_filter_async",
   "visit_filter_recursive_async"
  ],
  "watch": [
   "watch"
  ],
  "chokidar": [
   "watch"
  ],
  "watcher": [
   "watch"
  ],
  "persistent": [
   "watch"
  ],
  "ignoreInitial": [
   "watch"
  ],
  "lambda$folder": [
   "repos_paths_map_unordered"
  ],
  "repos_paths_map_unordered_combine": [
   "repos_paths_map_unordered_combine",
   "functions_names",
   "function_exists_inner",
   "function_name_to_path_search",
   "functions_paths",
   "repos_paths_map_unordered_combine_squash"
  ],
  "mapper": [
   "repos_paths_map_unordered_combine",
   "functions_names",
   "repos_paths_map_unordered_combine_squash",
   "functions_names_to_paths"
  ],
  "true_is": [
   "true_is",
   "function_exists_inner",
   "function_name_to_path_search"
  ],
  "multiple": [
   "function_exists_inner",
   "function_name_to_path_search"
  ],
  "ti": [
   "true_is"
  ],
  "ti2": [
   "function_exists_inner",
   "function_name_to_path_search"
  ],
  "f_path2": [
   "function_exists_inner",
   "function_name_to_path_search"
  ],
  "function_name_to_path_search": [
   "function_name_to_path_unalias",
   "function_exists_strict",
   "function_name_to_path_search"
  ],
  "function_name_folder_to_path": [
   "function_name_to_path",
   "functions_paths",
   "function_name_folder_to_path",
   "functions_names_to_paths"
  ],
  "base": [
   "function_name_folder_to_path"
  ],
  "repos_paths_map_unordered_combine_squash": [
   "repos_paths_map_unordered_combine_squash",
   "functions_names_to_paths"
  ],
  "repo_name2": [
   "user_repo_set"
  ],
  "functions_names_to_paths": [
   "functions_names_to_paths"
  ],
  "reduce": [
   "functions_names_to_paths",
   "reduce"
  ],
  "lambda$before$current": [
   "reduce"
  ],
  "reduced": [
   "reduce"
  ]
 },
 "functions": {
  "add": {
   "async": false,
   "identifiers": [
    "add",
    "left",
    "right",
    "sum"
   ]
  },
  "add_1": {
   "async": false,
   "identifiers": [
    "add",
    "add_1",
    "left",
    "sum"
   ]
  },
  "apps_get": {
   "async": true,
   "identifiers": [
    "folder_public",
    "folder_read_files",
    "marker",
    "apps_get",
    "fop",
    "fr"
   ]
  },
  "app_code": {
   "async": false,
   "identifiers": [
    "marker",
    "app_code",
    "alert"
   ]
  },
  "app_html_open": {
   "async": true,
   "identifiers": [
    "file_open",
    "folder_public_combine",
    "file_name_html",
    "marker",
    "app_html_open",
    "a_name",
    "file_name",
    "combined"
   ]
  },
  "app_name_main": {
   "async": false,
   "identifiers": [
    "function_name_combine_multiple",
    "app_name_prefixed",
    "app_name_main",
    "a",
    "a_name",
    "combined"
   ]
  },
  "app_name_prefix": {
   "async": false,
   "identifiers": [
    "app_name_prefix",
    "v"
   ]
  },
  "app_name_prefixed": {
   "async": false,
   "identifiers": [
    "function_name_combine",
    "app_name_prefix",
    "app_name_prefixed",
    "name",
    "p",
    "a_name"
   ]
  },
  "app_new": {
   "async": true,
   "identifiers": [
    "app_new_step_2",
    "app_name_prefixed",
    "function_new",
    "marker",
    "app_new",
    "name",
    "a_name"
   ]
  },
  "app_new_assign": {
   "async": false,
   "identifiers": [
    "js_declare",
    "js_parse_expression",
    "js_code_dot",
    "app_new_assign",
    "combined",
    "v",
    "code",
    "expression",
    "assign"
   ]
  },
  "app_new_step_2": {
   "async": true,
   "identifiers": [
    "js_declaration_single",
    "html_new",
    "function_new",
    "function_transform",
    "list_add",
    "js_declaration_single_block_body",
    "firebase_storage_function_run",
    "js_call_new",
    "app_new_assign",
    "app_name_main",
    "app_name_prefixed",
    "app_new_step_2",
    "name",
    "a_name",
    "combined",
    "lambda",
    "ast",
    "declaration",
    "async",
    "assign",
    "parsed",
    "p",
    "body_block",
    "output"
   ]
  },
  "app_refresh": {
   "async": false,
   "identifiers": [
    "object_property_get",
    "storage_local_initialize",
    "marker",
    "html_clear",
    "html_document_body",
    "app_refresh",
    "context",
    "app_fn",
    "screens",
    "body",
    "screen_name",
    "screen"
   ]
  },
  "app_replace": {
   "async": true,
   "identifiers": [
    "firebase_storage_function_run",
    "app_replace_main",
    "marker",
    "app_replace",
    "f_name",
    "name"
   ]
  },
  "app_replace_font_size": {
   "async": false,
   "identifiers": [
    "storage_local_initialize_context",
    "app_replace_font_size",
    "context",
    "value2"
   ]
  },
  "app_replace_font_size_adjust": {
   "async": false,
   "identifiers": [
    "app_replace_font_size_refresh",
    "storage_local_set_context",
    "app_replace_font_size",
    "app_replace_font_size_adjust",
    "context",
    "value_get",
    "value"
   ]
  },
  "app_replace_font_size_factor": {
   "async": false,
   "identifiers": [
    "app_replace_font_size_factor",
    "v"
   ]
  },
  "app_replace_font_size_refresh": {
   "async": false,
   "identifiers": [
    "app_replace_font_size",
    "html_style_font_size",
    "html_document_root",
    "app_replace_font_size_refresh",
    "context",
    "html",
    "value"
   ]
  },
  "app_replace_home": {
   "async": false,
   "identifiers": [
    "emoji_gear",
    "app_screen_set",
    "html_button",
    "app_replace_rule_sets",
    "each_index",
    "storage_local_set_context",
    "object_property_get",
    "app_replace_home",
    "context",
    "root",
    "lambda4",
    "rule_sets",
    "lambda2",
    "item",
    "index",
    "name2",
    "lambda"
   ]
  },
  "app_replace_main": {
   "async": false,
   "identifiers": [
    "app_replace_font_size_refresh",
    "html_meta_viewport",
    "app_refresh",
    "html_document_body",
    "app_replace_screens",
    "app_replace",
    "app_replace_main",
    "app_fn",
    "screens",
    "root",
    "context"
   ]
  },
  "app_replace_rule_parse": {
   "async": false,
   "identifiers": [
    "list_skip",
    "list_take",
    "list_index_of",
    "string_split_space",
    "app_replace_rule_parse",
    "rule",
    "split",
    "middle",
    "left",
    "right",
    "v"
   ]
  },
  "app_replace_rule_set": {
   "async": false,
   "identifiers": [
    "object_property_set_exists_not",
    "range",
    "list_any",
    "html_div",
    "list_concat_multiple",
    "list_size",
    "list_skip",
    "object_merge",
    "app_replace_rule_valid",
    "not",
    "html_enable_if",
    "html_text_set_if",
    "null_not_is",
    "html_style_set_or_remove",
    "each_index",
    "list_map_index",
    "each",
    "html_p",
    "html_disable",
    "string_split_empty",
    "storage_local_initialize_context",
    "list_join_space",
    "object_property_get",
    "html_button",
    "app_replace_rule_parse",
    "list_map",
    "html_p_text",
    "storage_local_get_context",
    "list_get",
    "app_replace_rule_sets",
    "emoji_home",
    "html_button_screen",
    "marker",
    "list_take",
    "html_clear",
    "app_replace_rule_set",
    "context",
    "root",
    "index",
    "rule_sets",
    "item",
    "name",
    "start",
    "current",
    "index_selected",
    "label_rules",
    "rules",
    "mapped",
    "lambda",
    "rule",
    "left",
    "right",
    "right_joined",
    "left_joined",
    "text",
    "lambda3",
    "refresh",
    "b",
    "rules_buttons",
    "label_symbols",
    "div",
    "current_list",
    "symbols_buttons",
    "lambda2",
    "letter",
    "lambda5",
    "rule2",
    "eq",
    "alert",
    "before",
    "size",
    "after",
    "nn",
    "lambda6",
    "component",
    "lambda7",
    "eq2",
    "size2",
    "r",
    "any",
    "lambda4",
    "rb",
    "index2",
    "lambda8",
    "sb",
    "valid",
    "nn2",
    "index3"
   ]
  },
  "app_replace_rule_sets": {
   "async": false,
   "identifiers": [
    "app_replace_rule_sets",
    "v",
    "name",
    "rules",
    "start"
   ]
  },
  "app_replace_rule_valid": {
   "async": false,
   "identifiers": [
    "json_to",
    "equal_by",
    "list_slice_count",
    "list_size",
    "object_property_get",
    "app_replace_rule_valid",
    "rule",
    "index_selected",
    "current_list",
    "left",
    "size",
    "sliced",
    "eq"
   ]
  },
  "app_replace_screens": {
   "async": false,
   "identifiers": [
    "app_replace_settings",
    "app_replace_rule_set",
    "app_replace_home",
    "marker",
    "app_replace_screens",
    "v",
    "home",
    "rule_set",
    "settings"
   ]
  },
  "app_replace_settings": {
   "async": false,
   "identifiers": [
    "emoji_home",
    "html_button_screen",
    "app_replace_font_size_adjust",
    "app_replace_font_size_factor",
    "emoji_font_smaller",
    "emoji_font_larger",
    "html_button",
    "marker",
    "app_replace_settings",
    "context",
    "root",
    "lambda2",
    "factor",
    "value_get",
    "value",
    "lambda3",
    "component"
   ]
  },
  "app_reply": {
   "async": true,
   "identifiers": [
    "app_reply_main",
    "firebase_storage_function_run",
    "marker",
    "app_reply",
    "f_name",
    "name"
   ]
  },
  "app_reply_choices": {
   "async": false,
   "identifiers": [
    "emoji_handshake",
    "newline",
    "emoji_rock",
    "emoji_rainbow",
    "string_the_servant_of_god",
    "emoji_question",
    "emoji_dove",
    "app_reply_pray",
    "emoji_family",
    "emoji_voice",
    "emoji_hands_raising",
    "emoji_church",
    "string_lord_bless",
    "string_lord_bless_your",
    "emoji_phone",
    "emoji_sleep_face",
    "emoji_sleep_z",
    "emoji_globe_americas",
    "emoji_book_open",
    "emoji_100",
    "string_the_servant_of_god_is",
    "emoji_ok",
    "emoji_cross",
    "emoji_smile",
    "emoji_wave",
    "emoji_trinity",
    "emoji_fire",
    "prayer_start",
    "prayer_end",
    "emoji_pray",
    "app_reply_choices",
    "education",
    "heal",
    "job",
    "provide",
    "travel_pray",
    "will",
    "with2",
    "v",
    "text",
    "response"
   ]
  },
  "app_reply_main": {
   "async": true,
   "identifiers": [
    "list_squash",
    "bible_verses_encouragement",
    "ebible_references_parse_lines",
    "ebible_version_books",
    "html_display_none_or_block",
    "list_empty_not_is",
    "ebible_chapter_code_to_name",
    "ebible_chapter_code_to_book",
    "list_find_property",
    "firebase_storage_download_ebible",
    "list_remove_property",
    "ebible_languages",
    "string_take_less_1",
    "equal",
    "list_add_first",
    "ebible_verse_download",
    "list_map_property",
    "list_first",
    "ebible_index_flat_upload_name",
    "ebible_folder_english",
    "not",
    "string_starts_with",
    "string_lower_to",
    "html_on_keydown",
    "string_letters_only",
    "object_property_set_exists_not",
    "list_includes",
    "list_concat",
    "list_random_item",
    "html_p_text_multiple",
    "html_clear",
    "app_reply_choices",
    "each",
    "list_map",
    "list_empty",
    "list_join_newline_2",
    "list_add",
    "html_text_set",
    "html_p",
    "html_document_body",
    "clipboard_copy",
    "object_property_get",
    "html_button",
    "marker",
    "list_map_unordered_async",
    "app_reply_main",
    "en",
    "languages",
    "file_name",
    "index",
    "books",
    "verses_list",
    "verse_random_reset",
    "root",
    "copied",
    "languages_chosens",
    "buttons",
    "preview",
    "chosens",
    "typed",
    "encouragement",
    "reference",
    "verses",
    "lambda6",
    "event",
    "key",
    "buttons_refresh",
    "lambda4",
    "preview_refresh",
    "component3",
    "component2",
    "lambda5",
    "item2",
    "name2",
    "bible_folder2",
    "language_code",
    "lambda7",
    "verses_list_first",
    "verses2",
    "lambda8",
    "verse",
    "chapter_code2",
    "verse_number2",
    "d",
    "component4",
    "choices",
    "lambda2",
    "item",
    "text2",
    "letters",
    "lower",
    "sw",
    "includes",
    "condition",
    "lambda",
    "choice",
    "response2",
    "text",
    "component",
    "lambda3",
    "lambda9",
    "item3",
    "list",
    "book_code",
    "chapter_name",
    "book",
    "book_name",
    "reference2",
    "squashed",
    "verse_texts",
    "verse_text",
    "other",
    "ne",
    "concated",
    "joined"
   ]
  },
  "app_reply_pray": {
   "async": false,
   "identifiers": [
    "string_may_the_lord",
    "emoji_pray",
    "app_reply_pray",
    "pray_title",
    "pray_request",
    "v2",
    "text",
    "response"
   ]
  },
  "app_screen_set": {
   "async": false,
   "identifiers": [
    "storage_local_set_context",
    "app_refresh",
    "app_screen_set",
    "context",
    "value"
   ]
  },
  "assert": {
   "async": false,
   "identifiers": [
    "not",
    "error",
    "assert",
    "b"
   ]
  },
  "assert_arguments": {
   "async": false,
   "identifiers": [
    "equal_assert",
    "object_property_get",
    "assert_arguments",
    "args",
    "count",
    "length"
   ]
  },
  "assert_file_exists_not": {
   "async": true,
   "identifiers": [
    "error",
    "file_exists",
    "assert_file_exists_not",
    "file_path_new"
   ]
  },
  "assert_json": {
   "async": false,
   "identifiers": [
    "assert_message",
    "json_to",
    "assert_json",
    "b",
    "o",
    "message"
   ]
  },
  "assert_message": {
   "async": false,
   "identifiers": [
    "not",
    "error",
    "assert_message",
    "b",
    "message"
   ]
  },
  "assert_not": {
   "async": false,
   "identifiers": [
    "error",
    "assert_not",
    "b"
   ]
  },
  "bible_verses_encouragement": {
   "async": false,
   "identifiers": [
    "marker",
    "bible_verses_encouragement",
    "encouragement"
   ]
  },
  "bible_verses_encouragement_generate": {
   "async": true,
   "identifiers": [
    "function_list_generate",
    "list_filter_starts_with_any",
    "list_map_property",
    "ebible_version_books",
    "ebible_folder_english",
    "list_map",
    "string_ends_with_space",
    "string_trim_right",
    "string_skip_while",
    "each",
    "whitespace_normalize",
    "string_starts_with_space",
    "string_starts_with_dot",
    "string_starts_with_digit",
    "string_split_newline",
    "file_read",
    "folder_user_docs_path",
    "bible_verses_encouragement_generate",
    "file_path",
    "contents",
    "split",
    "fns",
    "lambda2",
    "item2",
    "lambda",
    "fn",
    "mapped",
    "bible_folder",
    "books",
    "mapped2",
    "verse_references"
   ]
  },
  "bind": {
   "async": false,
   "identifiers": [
    "marker",
    "bind",
    "left",
    "right",
    "fn"
   ]
  },
  "bind_property": {
   "async": false,
   "identifiers": [
    "bind",
    "object_property_get",
    "marker",
    "bind_property",
    "object",
    "property_name",
    "value",
    "fn"
   ]
  },
  "browser_is": {
   "async": false,
   "identifiers": [
    "browser_is",
    "b",
    "window",
    "document"
   ]
  },
  "buffer_string_to": {
   "async": false,
   "identifiers": [
    "browser_is",
    "buffer_string_to",
    "buffer",
    "s",
    "b",
    "ArrayBuffer",
    "TextDecoder",
    "decode",
    "Uint8Array",
    "Error",
    "toString"
   ]
  },
  "cache_generic": {
   "async": true,
   "identifiers": [
    "cache_generic",
    "key_get",
    "url",
    "cached_exists",
    "cached_get",
    "value_get",
    "cache_save",
    "key",
    "e",
    "result",
    "value"
   ]
  },
  "catch_call": {
   "async": false,
   "identifiers": [
    "marker",
    "catch_call",
    "reject",
    "lambda",
    "i",
    "inner",
    "result",
    "arguments",
    "e"
   ]
  },
  "catch_ignore": {
   "async": false,
   "identifiers": [
    "catch_ignore",
    "lambda",
    "e"
   ]
  },
  "catch_ignore_async": {
   "async": true,
   "identifiers": [
    "catch_ignore_async",
    "lambda",
    "e"
   ]
  },
  "catch_log": {
   "async": false,
   "identifiers": [
    "log_keep",
    "catch_log",
    "lambda",
    "e"
   ]
  },
  "catch_log_async": {
   "async": true,
   "identifiers": [
    "identity",
    "log_keep",
    "catch_log_async",
    "lambda",
    "message_get",
    "e",
    "message"
   ]
  },
  "catch_only_async": {
   "async": true,
   "identifiers": [
    "noop",
    "catch_only_run_async",
    "catch_only_async",
    "lambda",
    "message_fragment"
   ]
  },
  "catch_only_run_async": {
   "async": true,
   "identifiers": [
    "marker",
    "not",
    "json_to",
    "catch_only_run_async",
    "lambda",
    "message_fragment",
    "on_error",
    "e",
    "json",
    "message",
    "a",
    "includes",
    "a2"
   ]
  },
  "chalk_color": {
   "async": true,
   "identifiers": [
    "object_property_get",
    "import_install",
    "chalk_color",
    "color",
    "prompt",
    "chalk",
    "default",
    "fn",
    "colored"
   ]
  },
  "chalk_green": {
   "async": true,
   "identifiers": [
    "chalk_color",
    "chalk_green",
    "prompt",
    "color",
    "v"
   ]
  },
  "chalk_red": {
   "async": true,
   "identifiers": [
    "marker",
    "chalk_color",
    "chalk_red",
    "prompt",
    "color",
    "colored"
   ]
  },
  "clipboard_copy": {
   "async": true,
   "identifiers": [
    "browser_is",
    "clipboard_copy",
    "text",
    "b",
    "navigator",
    "clipboard",
    "writeText",
    "default",
    "write"
   ]
  },
  "command_line": {
   "async": true,
   "identifiers": [
    "marker",
    "command_line_generic",
    "command_line",
    "command",
    "extra",
    "stdout"
   ]
  },
  "command_line_cmd": {
   "async": true,
   "identifiers": [
    "command_line_generic",
    "command_line_cmd",
    "command",
    "cmd",
    "v3"
   ]
  },
  "command_line_generic": {
   "async": true,
   "identifiers": [
    "object_merge",
    "command_line_generic",
    "command",
    "extra",
    "exec",
    "promisify",
    "execAsync",
    "options",
    "encoding",
    "stdout"
   ]
  },
  "command_line_git": {
   "async": true,
   "identifiers": [
    "command_line_git_folder",
    "command_line_git",
    "command_git",
    "folder"
   ]
  },
  "command_line_git_folder": {
   "async": true,
   "identifiers": [
    "command_line_git_prefix",
    "command_line",
    "command_line_git_folder",
    "folder",
    "command_git"
   ]
  },
  "command_line_git_prefix": {
   "async": false,
   "identifiers": [
    "command_line_git_prefix",
    "v"
   ]
  },
  "command_line_log": {
   "async": true,
   "identifiers": [
    "log_keep",
    "command_line",
    "command_line_log",
    "command",
    "stdout"
   ]
  },
  "command_line_node_g": {
   "async": true,
   "identifiers": [
    "object_property_get",
    "log_keep",
    "command_line",
    "list_join_space",
    "command_line_node_g",
    "f_name",
    "args",
    "result",
    "output",
    "stdout"
   ]
  },
  "command_line_read": {
   "async": true,
   "identifiers": [
    "readline",
    "command_line_read",
    "prompt",
    "answer",
    "Promise",
    "lambda2",
    "resolve",
    "rl",
    "createInterface",
    "input",
    "process",
    "stdin",
    "output",
    "stdout",
    "lambda",
    "close",
    "question"
   ]
  },
  "command_line_read_empty": {
   "async": true,
   "identifiers": [
    "command_line_read",
    "command_line_read_empty",
    "answer"
   ]
  },
  "command_line_schtasks": {
   "async": true,
   "identifiers": [
    "command_line",
    "command_line_schtasks",
    "command",
    "prefixed",
    "stdout"
   ]
  },
  "counter": {
   "async": false,
   "identifiers": [
    "counter",
    "lambda$c",
    "i",
    "c"
   ]
  },
  "css_class_prefix_combine": {
   "async": false,
   "identifiers": [
    "css_class_prefix_combine",
    "item",
    "v"
   ]
  },
  "data_aliases_path": {
   "async": false,
   "identifiers": [
    "data_path_generic",
    "marker",
    "data_aliases_path",
    "f_path"
   ]
  },
  "data_all": {
   "async": true,
   "identifiers": [
    "file_write",
    "not",
    "file_exists",
    "marker",
    "file_read_json",
    "json_format_to",
    "data_all",
    "file_path",
    "exists",
    "contents",
    "data",
    "v"
   ]
  },
  "data_app_current_get": {
   "async": true,
   "identifiers": [
    "null_not_is_assert",
    "data_property_get",
    "user_repo_path",
    "data_app_current_get",
    "d_path",
    "a"
   ]
  },
  "data_backup": {
   "async": true,
   "identifiers": [
    "path_join",
    "file_copy",
    "date_now_file",
    "data_path_generic",
    "data_path",
    "marker",
    "data_backup",
    "f_path_from",
    "inner",
    "f_path_to",
    "joined"
   ]
  },
  "data_boolean_set": {
   "async": true,
   "identifiers": [
    "data_path",
    "data_set",
    "data_boolean_set",
    "property_name",
    "value",
    "d_path",
    "value_get",
    "previous",
    "v"
   ]
  },
  "data_copy": {
   "async": true,
   "identifiers": [
    "file_copy",
    "data_path_generic",
    "data_path",
    "marker",
    "data_copy",
    "property_name",
    "f_path_from",
    "f_path_to"
   ]
  },
  "data_files_update": {
   "async": true,
   "identifiers": [
    "object_properties_delete",
    "data_path",
    "marker",
    "file_js_parse",
    "list_map_unordered_async",
    "data_save",
    "data_file_update_inner",
    "data_all",
    "functions_paths",
    "each_async",
    "data_files_update",
    "d_path",
    "d",
    "data",
    "f_paths",
    "parseds",
    "properties",
    "lambda",
    "parsed"
   ]
  },
  "data_file_update": {
   "async": true,
   "identifiers": [
    "file_js_parse",
    "data_file_update_inner",
    "data_save",
    "data_all",
    "marker",
    "data_path",
    "data_file_update",
    "f_path",
    "d_path",
    "d",
    "parsed"
   ]
  },
  "data_file_update_inner": {
   "async": true,
   "identifiers": [
    "object_property_get",
    "js_declaration_single",
    "object_property_set",
    "object_property_delete",
    "list_empty_is",
    "list_remove_all",
    "list_difference",
    "each",
    "list_add_if_not_includes",
    "object_property_initialize",
    "js_identifiers_names",
    "function_path_to_name",
    "data_file_update_inner",
    "parsed",
    "d",
    "f_path",
    "f_name",
    "data",
    "ast",
    "f_identifiers_new",
    "property_name",
    "identifiers",
    "lambda2",
    "i_name",
    "list",
    "functions",
    "f_this",
    "declaration",
    "async_is",
    "f_identifiers_old",
    "removals",
    "lambda",
    "item",
    "e"
   ]
  },
  "data_functions_get": {
   "async": true,
   "identifiers": [
    "data_property_get",
    "data_path",
    "data_functions_get",
    "d_path",
    "functions"
   ]
  },
  "data_function_current_restore": {
   "async": true,
   "identifiers": [
    "function_current_set",
    "function_current_get",
    "data_function_current_restore",
    "lambda",
    "f_name_current"
   ]
  },
  "data_get": {
   "async": true,
   "identifiers": [
    "marker",
    "data_all",
    "object_property_initialize",
    "data_get",
    "property_name",
    "value_initial",
    "d_path",
    "data",
    "file_path",
    "value",
    "v"
   ]
  },
  "data_identifiers_get": {
   "async": true,
   "identifiers": [
    "data_path",
    "data_property_get",
    "data_identifiers_get",
    "d_path",
    "v"
   ]
  },
  "data_identifiers_search": {
   "async": true,
   "identifiers": [
    "data_identifiers_get",
    "function_name_to_path",
    "list_to_dictionary",
    "object_property_get",
    "marker",
    "data_identifiers_search",
    "s",
    "identifiers",
    "list",
    "result"
   ]
  },
  "data_marker_current_get": {
   "async": true,
   "identifiers": [
    "user_repo_path",
    "data_property_get",
    "data_marker_current_get",
    "property_name",
    "d_path",
    "f_name"
   ]
  },
  "data_partition": {
   "async": true,
   "identifiers": [
    "data_path",
    "file_json_property_delete",
    "file_json_isolate",
    "data_copy",
    "marker",
    "data_partition",
    "property_name",
    "f_path_to",
    "f_path_from"
   ]
  },
  "data_path": {
   "async": false,
   "identifiers": [
    "data_path_generic",
    "data_path",
    "inner",
    "f_path"
   ]
  },
  "data_path_generic": {
   "async": false,
   "identifiers": [
    "file_name_json_folder",
    "marker",
    "data_path_generic",
    "suffix",
    "f_name_unsuffixed",
    "f_name",
    "folder",
    "f_path"
   ]
  },
  "data_prompts": {
   "async": true,
   "identifiers": [
    "data_prompts_path",
    "list_slice_end",
    "data_value",
    "data_prompts",
    "d_path",
    "prompts",
    "offset",
    "result"
   ]
  },
  "data_prompts_path": {
   "async": false,
   "identifiers": [
    "data_path_generic",
    "marker",
    "data_prompts_path",
    "f_path"
   ]
  },
  "data_property_get": {
   "async": true,
   "identifiers": [
    "marker",
    "object_property_get",
    "data_get",
    "data_property_get",
    "property_name",
    "d_path",
    "data",
    "value"
   ]
  },
  "data_property_new": {
   "async": false,
   "identifiers": [
    "data_property_new"
   ]
  },
  "data_save": {
   "async": true,
   "identifiers": [
    "file_overwrite_json",
    "data_save",
    "a",
    "file_path",
    "data"
   ]
  },
  "data_set": {
   "async": true,
   "identifiers": [
    "marker",
    "data_transform",
    "data_set",
    "lambda$previous",
    "property_name",
    "d_path",
    "lambda",
    "previous",
    "v2"
   ]
  },
  "data_terminal_get": {
   "async": true,
   "identifiers": [
    "data_path",
    "marker",
    "data_property_get",
    "data_terminal_get",
    "d_path",
    "property_name",
    "w"
   ]
  },
  "data_terminal_set": {
   "async": true,
   "identifiers": [
    "marker",
    "data_boolean_set",
    "data_terminal_set",
    "v",
    "property_name"
   ]
  },
  "data_transform": {
   "async": true,
   "identifiers": [
    "marker",
    "data_save",
    "object_property_set",
    "data_get",
    "data_transform",
    "property_name",
    "value_initial",
    "lambda$previous",
    "d_path",
    "d",
    "data",
    "value",
    "value_previous"
   ]
  },
  "data_value": {
   "async": true,
   "identifiers": [
    "marker",
    "object_property_get",
    "data_all",
    "data_value",
    "property_name",
    "d_path",
    "data",
    "value"
   ]
  },
  "data_watch_get": {
   "async": true,
   "identifiers": [
    "data_property_get",
    "data_watch_get",
    "property_name",
    "w",
    "d_path"
   ]
  },
  "data_watch_set": {
   "async": true,
   "identifiers": [
    "data_boolean_set",
    "data_watch_set",
    "v",
    "property_name"
   ]
  },
  "data_watch_set_task_add_return": {
   "async": false,
   "identifiers": [
    "todo",
    "data_watch_set_task_add_return"
   ]
  },
  "date_diff_hours": {
   "async": false,
   "identifiers": [
    "date_ms_to_hours",
    "date_diff_ms",
    "date_diff_hours",
    "now",
    "before",
    "ms",
    "hours"
   ]
  },
  "date_diff_ms": {
   "async": false,
   "identifiers": [
    "date_diff_ms",
    "now",
    "before",
    "v",
    "Math",
    "abs"
   ]
  },
  "date_iso_to": {
   "async": false,
   "identifiers": [
    "date_iso_to",
    "d",
    "v",
    "toISOString"
   ]
  },
  "date_ms_to_hours": {
   "async": false,
   "identifiers": [
    "date_ms_to_hours",
    "ms",
    "v"
   ]
  },
  "date_now": {
   "async": false,
   "identifiers": [
    "date_now",
    "now",
    "Date"
   ]
  },
  "date_now_file": {
   "async": false,
   "identifiers": [
    "date_now_iso",
    "marker",
    "date_now_file",
    "now_iso",
    "now_file",
    "replace"
   ]
  },
  "date_now_iso": {
   "async": false,
   "identifiers": [
    "date_iso_to",
    "date_now",
    "date_now_iso",
    "now",
    "now_iso"
   ]
  },
  "date_to": {
   "async": false,
   "identifiers": [
    "date_to",
    "before_iso",
    "v",
    "Date"
   ]
  },
  "digits": {
   "async": false,
   "identifiers": [
    "string_split_empty",
    "digits",
    "d",
    "split"
   ]
  },
  "each": {
   "async": false,
   "identifiers": [
    "marker",
    "each",
    "list",
    "lambda$item",
    "item"
   ]
  },
  "each_async": {
   "async": true,
   "identifiers": [
    "each_async",
    "list",
    "lambda$item",
    "item"
   ]
  },
  "each_index": {
   "async": false,
   "identifiers": [
    "each",
    "each_index",
    "list",
    "lambda$item$index",
    "index",
    "lambda2",
    "item"
   ]
  },
  "each_index_async": {
   "async": true,
   "identifiers": [
    "marker",
    "each_async",
    "each_index_async",
    "list",
    "lambda$item$index",
    "index",
    "lambda2",
    "item"
   ]
  },
  "each_multiple": {
   "async": false,
   "identifiers": [
    "lists_get",
    "each_index",
    "list_first",
    "each_multiple",
    "lists",
    "lambda",
    "first",
    "lambda2",
    "item",
    "index",
    "items"
   ]
  },
  "each_multiple_async": {
   "async": true,
   "identifiers": [
    "each_index_async",
    "marker",
    "lists_get",
    "list_first",
    "each_multiple_async",
    "lists",
    "lambda",
    "first",
    "lambda2",
    "item",
    "index",
    "items"
   ]
  },
  "each_object": {
   "async": false,
   "identifiers": [
    "each",
    "object_properties",
    "object_property_get",
    "each_object",
    "object",
    "lambda",
    "lambda2",
    "p",
    "value",
    "list"
   ]
  },
  "each_pair": {
   "async": false,
   "identifiers": [
    "each_multiple",
    "each_pair",
    "list_a",
    "list_b",
    "lambda$a$b",
    "lists",
    "lambda",
    "items",
    "a",
    "b"
   ]
  },
  "each_pair_async": {
   "async": true,
   "identifiers": [
    "each_multiple_async",
    "marker",
    "each_pair_async",
    "list_a",
    "list_b",
    "lambda$a$b",
    "lists",
    "lambda",
    "items",
    "a",
    "b"
   ]
  },
  "each_range": {
   "async": false,
   "identifiers": [
    "range",
    "each",
    "each_range",
    "count",
    "lambda",
    "list"
   ]
  },
  "each_range_async": {
   "async": true,
   "identifiers": [
    "each_async",
    "range",
    "each_range_async",
    "count",
    "lambda",
    "r"
   ]
  },
  "each_range_from": {
   "async": false,
   "identifiers": [
    "range_from",
    "marker",
    "each",
    "each_range_from",
    "from",
    "to",
    "lambda",
    "list"
   ]
  },
  "each_range_from_async": {
   "async": true,
   "identifiers": [
    "each_async",
    "range_from",
    "marker",
    "each_range_from_async",
    "from",
    "to",
    "lambda",
    "list"
   ]
  },
  "each_reverse": {
   "async": false,
   "identifiers": [
    "each",
    "list_copy_reverse",
    "each_reverse",
    "list",
    "lambda",
    "reversed"
   ]
  },
  "ebible_books_to_chapter_codes": {
   "async": true,
   "identifiers": [
    "list_adder_multiple_async",
    "ebible_chapters",
    "object_property_get",
    "each_async",
    "ebible_books_to_chapter_codes",
    "books",
    "bible_folder",
    "lambda2",
    "la",
    "lambda",
    "book",
    "book_code",
    "chapters",
    "list"
   ]
  },
  "ebible_book_code_size": {
   "async": false,
   "identifiers": [
    "ebible_book_code_size",
    "v"
   ]
  },
  "ebible_chapters": {
   "async": true,
   "identifiers": [
    "string_suffix_without",
    "ebible_version_download_path_combine",
    "html_parse_find_a_href_starts_with",
    "list_filter_starts_with_not_multiple",
    "list_map",
    "html_parse_read",
    "ebible_chapters",
    "bible_folder",
    "book_code",
    "joined",
    "d",
    "root",
    "filtered",
    "lambda",
    "item",
    "combined",
    "prefixes",
    "chapters",
    "lambda2",
    "item2",
    "without",
    "mapped"
   ]
  },
  "ebible_chapters_each_verses": {
   "async": true,
   "identifiers": [
    "ebible_chapters_each_verses_list",
    "ebible_chapter_codes",
    "ebible_chapters_each_verses",
    "bible_folder",
    "each_chapter",
    "list"
   ]
  },
  "ebible_chapters_each_verses_check": {
   "async": true,
   "identifiers": [
    "ebible_chapters_each_verses",
    "ebible_chapters_each_verses_check",
    "bible_folder",
    "each_chapter2",
    "chapter_code",
    "verses"
   ]
  },
  "ebible_chapters_each_verses_check_with": {
   "async": true,
   "identifiers": [
    "ebible_chapters_each_verses",
    "ebible_chapters_each_verses_check",
    "ebible_chapters_each_verses_check_with",
    "bible_folder",
    "each_chapter"
   ]
  },
  "ebible_chapters_each_verses_list": {
   "async": true,
   "identifiers": [
    "ebible_verses",
    "log_keep",
    "each_async",
    "ebible_chapters_each_verses_list",
    "list",
    "bible_folder",
    "each_chapter",
    "lambda",
    "chapter_code",
    "verses"
   ]
  },
  "ebible_chapter_classes": {
   "async": true,
   "identifiers": [
    "html_parse_classes_preview",
    "marker",
    "html_parse_descendants_classes",
    "html_parse_find",
    "html_parse_read",
    "ebible_version_download_path_combine",
    "ebible_chapter_classes",
    "bible_folder",
    "chapter_code",
    "joined",
    "d",
    "root",
    "main",
    "classes",
    "dictionary",
    "v"
   ]
  },
  "ebible_chapter_codes": {
   "async": true,
   "identifiers": [
    "ebible_books_to_chapter_codes",
    "marker",
    "ebible_version_books",
    "ebible_chapter_codes",
    "bible_folder",
    "books",
    "list"
   ]
  },
  "ebible_chapter_code_normalize": {
   "async": false,
   "identifiers": [
    "string_upper_to",
    "ebible_chapter_code_normalize",
    "chapter_code",
    "u"
   ]
  },
  "ebible_chapter_code_to_book": {
   "async": false,
   "identifiers": [
    "ebible_book_code_size",
    "marker",
    "string_take",
    "ebible_chapter_code_to_book",
    "chapter_code",
    "count",
    "book_code"
   ]
  },
  "ebible_chapter_code_to_name": {
   "async": false,
   "identifiers": [
    "string_to",
    "integer_to",
    "string_skip",
    "ebible_book_code_size",
    "ebible_chapter_code_to_name",
    "chapter_code",
    "count",
    "s",
    "i",
    "chapter_name"
   ]
  },
  "ebible_chapter_text": {
   "async": true,
   "identifiers": [
    "roman_to_integer",
    "list_intersect_empty_is_assert",
    "list_empty_is_assert",
    "whitespace_normalize",
    "list_map",
    "html_parse_find_list_to",
    "marker",
    "html_parse_text",
    "css_class_prefix_combine",
    "ebible_verses_exclude",
    "ebible_verses_include",
    "list_difference",
    "html_parse_descendants_classes",
    "html_parse_find_remove",
    "each",
    "html_parse_classes_preview",
    "html_parse_find",
    "html_parse_read",
    "ebible_version_download_path_combine",
    "ebible_chapter_text",
    "bible_folder",
    "chapter_code",
    "joined",
    "d",
    "root",
    "main",
    "classes",
    "include",
    "exclude",
    "list2",
    "extra",
    "dictionary",
    "lambda",
    "item",
    "selector2",
    "list",
    "lambda2",
    "t",
    "n",
    "verse_numbers",
    "text",
    "result"
   ]
  },
  "ebible_class_apocrypha": {
   "async": false,
   "identifiers": [
    "ebible_class_apocrypha",
    "v"
   ]
  },
  "ebible_class_new": {
   "async": false,
   "identifiers": [
    "ebible_class_new",
    "v"
   ]
  },
  "ebible_class_old": {
   "async": false,
   "identifiers": [
    "ebible_class_old",
    "v"
   ]
  },
  "ebible_firebase_upload": {
   "async": true,
   "identifiers": [
    "ebible_firebase_upload_path",
    "firebase_upload_object",
    "ebible_firebase_upload",
    "bible_folder",
    "file_name",
    "object",
    "destination"
   ]
  },
  "ebible_firebase_upload_path": {
   "async": false,
   "identifiers": [
    "list_join_slash_forward",
    "file_name_json",
    "ebible_firebase_upload_path",
    "bible_folder",
    "file_name",
    "file_name_with_extension",
    "joined",
    "destination"
   ]
  },
  "ebible_folder_english": {
   "async": false,
   "identifiers": [
    "ebible_folder_english",
    "v"
   ]
  },
  "ebible_folder_urdu": {
   "async": false,
   "identifiers": [
    "ebible_folder_urdu",
    "v2"
   ]
  },
  "ebible_index": {
   "async": true,
   "identifiers": [
    "ebible_chapter_code_to_name",
    "list_add_if_not_includes",
    "list_add",
    "list_map_property",
    "object_property_initialize",
    "ebible_chapter_code_to_book",
    "ebible_chapters_each_verses",
    "ebible_index",
    "bible_folder",
    "books",
    "index",
    "each_chapter",
    "chapter_code",
    "verses",
    "book_code",
    "book",
    "chapters",
    "chapter_name",
    "verse_numbers",
    "chapter"
   ]
  },
  "ebible_index_flat": {
   "async": true,
   "identifiers": [
    "list_map_property",
    "each",
    "list_adder_async",
    "marker",
    "ebible_chapters_each_verses",
    "ebible_index_flat",
    "bible_folder",
    "lambda",
    "la",
    "each_chapter",
    "chapter_code",
    "verses",
    "verse_numbers",
    "lambda2",
    "verse_number",
    "list"
   ]
  },
  "ebible_index_flat_upload": {
   "async": true,
   "identifiers": [
    "ebible_index_flat_upload_name",
    "ebible_index_flat",
    "marker",
    "ebible_firebase_upload",
    "ebible_index_flat_upload",
    "bible_folder",
    "index",
    "file_name"
   ]
  },
  "ebible_index_flat_upload_name": {
   "async": false,
   "identifiers": [
    "list_join_slash_forward",
    "ebible_index_upload_name",
    "ebible_index_flat_upload_name",
    "v",
    "file_name"
   ]
  },
  "ebible_index_upload": {
   "async": true,
   "identifiers": [
    "ebible_index_upload_name",
    "ebible_firebase_upload",
    "ebible_index",
    "ebible_index_upload",
    "bible_folder",
    "index",
    "file_name"
   ]
  },
  "ebible_index_upload_name": {
   "async": false,
   "identifiers": [
    "ebible_index_upload_name",
    "v"
   ]
  },
  "ebible_languages": {
   "async": false,
   "identifiers": [
    "ebible_folder_english",
    "ebible_folder_urdu",
    "ebible_languages",
    "languages",
    "name",
    "bible_folder",
    "language_code"
   ]
  },
  "ebible_languages_to_bible_folders": {
   "async": false,
   "identifiers": [
    "list_map",
    "object_property_get",
    "list_find_property",
    "ebible_languages",
    "ebible_languages_to_bible_folders",
    "language_codes",
    "languages",
    "lambda2",
    "c",
    "item",
    "bible_folder",
    "bible_folders"
   ]
  },
  "ebible_references_parse": {
   "async": true,
   "identifiers": [
    "ebible_references_parse_lines",
    "clipboard_copy",
    "list_join_newline",
    "string_split_newline",
    "file_read",
    "ebible_references_parse",
    "bible_folders",
    "file_path",
    "contents",
    "split",
    "list",
    "joined"
   ]
  },
  "ebible_references_parse_god_created_man_why": {
   "async": true,
   "identifiers": [
    "folder_user_docs_path",
    "ebible_references_parse",
    "ebible_folder_english",
    "ebible_folder_urdu",
    "ebible_references_parse_god_created_man_why",
    "v2",
    "v",
    "file_name",
    "file_path",
    "bible_folders",
    "list"
   ]
  },
  "ebible_references_parse_lines": {
   "async": true,
   "identifiers": [
    "ebible_verse",
    "list_adder_async",
    "each_pair_async",
    "each_range_from_async",
    "string_to",
    "list_get",
    "list_index_of",
    "list_second",
    "list_multiple_is",
    "list_first",
    "string_split_dash",
    "number_pad",
    "equal",
    "list_first_second",
    "string_split_colon",
    "object_property_get",
    "list_find_property",
    "list_map_first",
    "list_map_filter_string_empty_not_is",
    "list_map_split_space",
    "list_map_prefix_without_any",
    "list_map_prefix_any",
    "list_filter_starts_with_any",
    "list_map_property",
    "ebible_version_books",
    "list_map_unordered_async",
    "ebible_folder_english",
    "ebible_references_parse_lines",
    "bible_folders",
    "lines",
    "bible_folder",
    "books_all",
    "books",
    "mapped",
    "verse_references",
    "book_names",
    "mapped2",
    "mapped3",
    "mapped4",
    "chapter_verses_list",
    "lambda2",
    "la",
    "lambda",
    "book_name",
    "chapter_verses",
    "book",
    "book_code",
    "split2",
    "first",
    "chapter_name",
    "second",
    "pad_count",
    "chapter_padded",
    "chapter_code",
    "verse_range",
    "verse_start",
    "verse_end",
    "m",
    "index",
    "lambda5",
    "book2",
    "lambda4",
    "verse_number",
    "result",
    "list"
   ]
  },
  "ebible_verse": {
   "async": true,
   "identifiers": [
    "ebible_verse_download",
    "browser_is",
    "list_find_property",
    "ebible_verses",
    "marker",
    "ebible_verse",
    "bible_folder",
    "chapter_code",
    "verse_number",
    "b",
    "verse",
    "verses",
    "result"
   ]
  },
  "ebible_verses": {
   "async": true,
   "identifiers": [
    "urdu_allah_to_god",
    "list_add",
    "list_index_of_last",
    "list_empty_not_is",
    "ebible_verse_new",
    "list_adder",
    "list_take",
    "list_skip",
    "each_reverse",
    "whitespace_normalize",
    "string_empty_not_is",
    "list_filter",
    "string_split_space",
    "ebible_chapter_text",
    "marker",
    "list_reverse",
    "ebible_verses",
    "bible_folder",
    "chapter_code",
    "verse_numbers",
    "text",
    "split",
    "filtered",
    "lambda",
    "la",
    "lambda2",
    "verse_number",
    "index",
    "skipped",
    "v",
    "list",
    "ne"
   ]
  },
  "ebible_verses_exclude": {
   "async": false,
   "identifiers": [
    "ebible_verses_exclude",
    "v"
   ]
  },
  "ebible_verses_include": {
   "async": false,
   "identifiers": [
    "ebible_verses_include",
    "v"
   ]
  },
  "ebible_verses_upload": {
   "async": true,
   "identifiers": [
    "ebible_chapters_each_verses_check_with",
    "marker",
    "ebible_version_download",
    "ebible_verses_upload_name",
    "ebible_firebase_upload",
    "list_wait",
    "list_map",
    "object_merge",
    "object_property_get",
    "ebible_verses_upload",
    "bible_folder",
    "each_chapter",
    "chapter_code",
    "verses",
    "lambda",
    "v",
    "verse_number",
    "joined2",
    "verse",
    "mapped"
   ]
  },
  "ebible_verses_upload_name": {
   "async": false,
   "identifiers": [
    "list_join_slash_forward",
    "ebible_verses_upload_name",
    "chapter_code",
    "verse_number",
    "joined"
   ]
  },
  "ebible_verse_download": {
   "async": true,
   "identifiers": [
    "firebase_storage_download_ebible",
    "ebible_verses_upload_name",
    "ebible_verse_download",
    "bible_folder",
    "chapter_code",
    "verse_number",
    "n",
    "index"
   ]
  },
  "ebible_verse_new": {
   "async": false,
   "identifiers": [
    "marker",
    "list_join_space",
    "ebible_verse_new",
    "tokens",
    "verse_number",
    "joined",
    "v",
    "text"
   ]
  },
  "ebible_versions": {
   "async": true,
   "identifiers": [
    "list_unique",
    "list_map_prefix_without",
    "html_parse_find_a_href_starts_with",
    "html_parse",
    "http_local_text",
    "ebible_versions",
    "url",
    "text",
    "d",
    "root",
    "list",
    "mapped",
    "unique"
   ]
  },
  "ebible_versions_download": {
   "async": true,
   "identifiers": [
    "catch_ignore_async",
    "each_async",
    "ebible_version_download",
    "ebible_versions",
    "ebible_versions_download",
    "list",
    "lambda",
    "item",
    "lambda3",
    "file_path"
   ]
  },
  "ebible_version_books": {
   "async": true,
   "identifiers": [
    "marker",
    "firebase_storage_download_ebible",
    "ebible_version_books_upload_name",
    "browser_is",
    "ebible_class_apocrypha",
    "ebible_version_books_testament",
    "list_join_comma_space",
    "ebible_class_old",
    "ebible_class_new",
    "ebible_version_books",
    "bible_folder",
    "b",
    "file_name2",
    "books",
    "n",
    "o",
    "v",
    "classes"
   ]
  },
  "ebible_version_books_testament": {
   "async": true,
   "identifiers": [
    "ebible_chapter_code_to_book",
    "html_parse_find_list_href_text",
    "object_property_get",
    "object_merge",
    "html_parse_read",
    "list_map",
    "html_parse_find",
    "path_join",
    "ebible_version_download",
    "ebible_version_books_testament",
    "bible_folder",
    "selector",
    "file_path",
    "joined",
    "d",
    "root",
    "bl",
    "mapped",
    "lambda",
    "item",
    "href",
    "taken",
    "to",
    "book_code",
    "mapped2"
   ]
  },
  "ebible_version_books_testament_apocrypha": {
   "async": true,
   "identifiers": [
    "ebible_class_apocrypha",
    "ebible_version_books_testament",
    "marker",
    "ebible_version_books_testament_apocrypha",
    "bible_folder",
    "selector",
    "v"
   ]
  },
  "ebible_version_books_testament_new": {
   "async": true,
   "identifiers": [
    "ebible_class_new",
    "marker",
    "ebible_version_books_testament",
    "ebible_version_books_testament_new",
    "bible_folder",
    "class_new",
    "mapped"
   ]
  },
  "ebible_version_books_testament_old": {
   "async": true,
   "identifiers": [
    "ebible_class_old",
    "ebible_version_books_testament",
    "ebible_version_books_testament_old",
    "bible_folder",
    "class_old",
    "mapped"
   ]
  },
  "ebible_version_books_upload": {
   "async": true,
   "identifiers": [
    "ebible_version_books_upload_name",
    "ebible_firebase_upload",
    "ebible_version_books",
    "marker",
    "ebible_version_books_upload",
    "bible_folder",
    "books",
    "file_name"
   ]
  },
  "ebible_version_books_upload_name": {
   "async": false,
   "identifiers": [
    "ebible_version_books_upload_name",
    "v"
   ]
  },
  "ebible_version_download": {
   "async": true,
   "identifiers": [
    "ebible_version_download_path",
    "unzip",
    "http_local",
    "marker",
    "ebible_version_download",
    "bible_folder",
    "url",
    "buffer",
    "file_path"
   ]
  },
  "ebible_version_download_path": {
   "async": false,
   "identifiers": [
    "ebible_version_download",
    "local_function_path",
    "ebible_version_download_path",
    "bible_folder",
    "joined2"
   ]
  },
  "ebible_version_download_path_combine": {
   "async": false,
   "identifiers": [
    "path_join",
    "ebible_version_download_path",
    "ebible_version_download_path_combine",
    "bible_folder",
    "book_code",
    "chapters_name",
    "file_path",
    "joined"
   ]
  },
  "emoji_100": {
   "async": false,
   "identifiers": [
    "emoji_100",
    "v"
   ]
  },
  "emoji_book_open": {
   "async": false,
   "identifiers": [
    "emoji_book_open",
    "v"
   ]
  },
  "emoji_church": {
   "async": false,
   "identifiers": [
    "emoji_church",
    "v2"
   ]
  },
  "emoji_cross": {
   "async": false,
   "identifiers": [
    "emoji_cross",
    "v"
   ]
  },
  "emoji_dove": {
   "async": false,
   "identifiers": [
    "emoji_dove",
    "v"
   ]
  },
  "emoji_family": {
   "async": false,
   "identifiers": [
    "emoji_family",
    "v2"
   ]
  },
  "emoji_fire": {
   "async": false,
   "identifiers": [
    "emoji_fire",
    "v"
   ]
  },
  "emoji_font_larger": {
   "async": false,
   "identifiers": [
    "emoji_font_larger",
    "v"
   ]
  },
  "emoji_font_smaller": {
   "async": false,
   "identifiers": [
    "emoji_font_smaller",
    "v"
   ]
  },
  "emoji_gear": {
   "async": false,
   "identifiers": [
    "emoji_gear",
    "v"
   ]
  },
  "emoji_globe_americas": {
   "async": false,
   "identifiers": [
    "emoji_globe_americas",
    "v"
   ]
  },
  "emoji_handshake": {
   "async": false,
   "identifiers": [
    "emoji_handshake",
    "v2"
   ]
  },
  "emoji_hands_raising": {
   "async": false,
   "identifiers": [
    "emoji_hands_raising",
    "v2"
   ]
  },
  "emoji_heart_fire": {
   "async": false,
   "identifiers": [
    "emoji_heart_fire",
    "v2"
   ]
  },
  "emoji_home": {
   "async": false,
   "identifiers": [
    "emoji_home",
    "v"
   ]
  },
  "emoji_ok": {
   "async": false,
   "identifiers": [
    "emoji_ok",
    "v"
   ]
  },
  "emoji_phone": {
   "async": false,
   "identifiers": [
    "emoji_phone",
    "v2"
   ]
  },
  "emoji_pray": {
   "async": false,
   "identifiers": [
    "emoji_pray",
    "v"
   ]
  },
  "emoji_question": {
   "async": false,
   "identifiers": [
    "emoji_question",
    "v2"
   ]
  },
  "emoji_rainbow": {
   "async": false,
   "identifiers": [
    "emoji_rainbow",
    "v2"
   ]
  },
  "emoji_rock": {
   "async": false,
   "identifiers": [
    "emoji_rock",
    "v2"
   ]
  },
  "emoji_sleep_face": {
   "async": false,
   "identifiers": [
    "emoji_sleep_face",
    "v"
   ]
  },
  "emoji_sleep_z": {
   "async": false,
   "identifiers": [
    "emoji_sleep_z",
    "v"
   ]
  },
  "emoji_smile": {
   "async": false,
   "identifiers": [
    "emoji_smile",
    "v"
   ]
  },
  "emoji_thumbs_up": {
   "async": false,
   "identifiers": [
    "emoji_thumbs_up",
    "v"
   ]
  },
  "emoji_trinity": {
   "async": false,
   "identifiers": [
    "emoji_dove",
    "emoji_cross",
    "emoji_heart_fire",
    "emoji_trinity",
    "v"
   ]
  },
  "emoji_voice": {
   "async": false,
   "identifiers": [
    "emoji_voice",
    "v2"
   ]
  },
  "emoji_wave": {
   "async": false,
   "identifiers": [
    "emoji_wave",
    "v"
   ]
  },
  "equal": {
   "async": false,
   "identifiers": [
    "equal",
    "left",
    "right",
    "eq"
   ]
  },
  "equal_assert": {
   "async": false,
   "identifiers": [
    "marker",
    "assert",
    "equal",
    "equal_assert",
    "left",
    "right",
    "eq"
   ]
  },
  "equal_by": {
   "async": false,
   "identifiers": [
    "equal",
    "equal_by",
    "a",
    "b",
    "lambda$item",
    "left",
    "right",
    "eq"
   ]
  },
  "equal_by_async": {
   "async": true,
   "identifiers": [
    "equal_by_async",
    "a",
    "b",
    "lambda$item",
    "eq"
   ]
  },
  "equal_not": {
   "async": false,
   "identifiers": [
    "not",
    "equal",
    "marker",
    "equal_not",
    "left",
    "right",
    "a",
    "ne"
   ]
  },
  "error": {
   "async": false,
   "identifiers": [
    "error",
    "message",
    "Error"
   ]
  },
  "error_attention_clear": {
   "async": true,
   "identifiers": [
    "error_attention_set",
    "marker",
    "error_attention_clear",
    "v"
   ]
  },
  "error_attention_set": {
   "async": true,
   "identifiers": [
    "data_path",
    "data_transform",
    "error_attention_set",
    "value",
    "lambda3",
    "previous",
    "d_path",
    "value2"
   ]
  },
  "error_json": {
   "async": false,
   "identifiers": [
    "error",
    "json_format_to",
    "error_json",
    "o",
    "message"
   ]
  },
  "exit": {
   "async": false,
   "identifiers": [
    "log_keep",
    "marker",
    "exit",
    "process"
   ]
  },
  "file_copy": {
   "async": true,
   "identifiers": [
    "file_copy_overwrite",
    "assert_file_exists_not",
    "file_copy",
    "file_path_old",
    "file_path_new"
   ]
  },
  "file_copy_overwrite": {
   "async": true,
   "identifiers": [
    "file_parent_exists_ensure",
    "file_copy_overwrite",
    "file_path_new",
    "file_path_old",
    "fs",
    "promises",
    "copyFile"
   ]
  },
  "file_delete": {
   "async": true,
   "identifiers": [
    "file_delete",
    "file_path",
    "fs",
    "promises",
    "unlink"
   ]
  },
  "file_delete_if_exists": {
   "async": true,
   "identifiers": [
    "file_exists",
    "file_delete",
    "marker",
    "file_delete_if_exists",
    "file_path"
   ]
  },
  "file_exists": {
   "async": true,
   "identifiers": [
    "throws_not_async",
    "error",
    "promise_is",
    "file_exists",
    "file_path",
    "fs",
    "access",
    "promises",
    "constants",
    "exists",
    "lambda",
    "F_OK"
   ]
  },
  "file_json_isolate": {
   "async": true,
   "identifiers": [
    "object_property_set",
    "object_properties_delete_all",
    "object_property_get",
    "file_json_transform",
    "marker",
    "file_json_isolate",
    "f_path",
    "property_name",
    "lambda",
    "data",
    "value"
   ]
  },
  "file_json_property_delete": {
   "async": true,
   "identifiers": [
    "object_property_delete",
    "file_json_transform",
    "marker",
    "file_json_property_delete",
    "f_path",
    "property_name",
    "lambda",
    "data"
   ]
  },
  "file_json_transform": {
   "async": true,
   "identifiers": [
    "file_overwrite_json",
    "file_read_json",
    "file_json_transform",
    "f_path",
    "lambda$data",
    "data"
   ]
  },
  "file_js_parse": {
   "async": true,
   "identifiers": [
    "file_read",
    "js_parse",
    "file_js_parse",
    "f_path",
    "code",
    "ast",
    "parsed"
   ]
  },
  "file_js_unparse": {
   "async": true,
   "identifiers": [
    "file_overwrite",
    "js_unparse",
    "js_format",
    "file_js_unparse",
    "parsed",
    "f_path",
    "ast",
    "code",
    "code_unparsed",
    "code_new"
   ]
  },
  "file_name_html": {
   "async": false,
   "identifiers": [
    "file_name_html",
    "name",
    "file_name"
   ]
  },
  "file_name_json": {
   "async": false,
   "identifiers": [
    "file_name_json",
    "name",
    "file_name"
   ]
  },
  "file_name_json_folder": {
   "async": false,
   "identifiers": [
    "file_name_json",
    "path_join",
    "file_name_json_folder",
    "folder",
    "f_name",
    "joined",
    "f_path"
   ]
  },
  "file_open": {
   "async": true,
   "identifiers": [
    "function_path_declaration_unparse",
    "function_name_extension",
    "string_ends_with",
    "file_open_editor",
    "file_read",
    "log_keep",
    "data_terminal_get",
    "file_open",
    "f_path",
    "terminal",
    "ext",
    "ew",
    "output"
   ]
  },
  "file_open_editor": {
   "async": true,
   "identifiers": [
    "command_line",
    "file_open_editor",
    "filePath"
   ]
  },
  "file_overwrite": {
   "async": true,
   "identifiers": [
    "file_parent_exists_ensure",
    "file_overwrite",
    "file_path",
    "contents",
    "fs",
    "promises",
    "writeFile"
   ]
  },
  "file_overwrite_buffer": {
   "async": true,
   "identifiers": [
    "marker",
    "file_parent_exists_ensure",
    "file_overwrite_buffer",
    "file_path",
    "contents",
    "fs",
    "promises",
    "writeFile"
   ]
  },
  "file_overwrite_json": {
   "async": true,
   "identifiers": [
    "file_overwrite",
    "json_format_to",
    "file_overwrite_json",
    "file_path",
    "object",
    "json"
   ]
  },
  "file_parent_exists_ensure": {
   "async": true,
   "identifiers": [
    "file_parent_exists_ensure",
    "file_path",
    "fs",
    "path",
    "dir",
    "dirname",
    "promises",
    "mkdir",
    "recursive"
   ]
  },
  "file_path_safe_to": {
   "async": false,
   "identifiers": [
    "marker",
    "file_path_safe_to",
    "fp",
    "safe",
    "encodeURIComponent"
   ]
  },
  "file_read": {
   "async": true,
   "identifiers": [
    "file_read",
    "file_path",
    "fs",
    "contents",
    "promises",
    "readFile"
   ]
  },
  "file_read_buffer": {
   "async": true,
   "identifiers": [
    "marker",
    "file_read_buffer",
    "file_path",
    "fs",
    "v",
    "promises",
    "readFile"
   ]
  },
  "file_read_json": {
   "async": true,
   "identifiers": [
    "file_read",
    "json_from",
    "file_read_json",
    "file_path",
    "json",
    "data"
   ]
  },
  "file_temp": {
   "async": true,
   "identifiers": [
    "file_delete_if_exists",
    "folder_user_combine",
    "uuid",
    "file_temp",
    "lambda$temp_path",
    "u",
    "temp_path",
    "result"
   ]
  },
  "file_write": {
   "async": true,
   "identifiers": [
    "file_write_generic",
    "file_overwrite",
    "file_write",
    "f_path",
    "contents",
    "overwrite"
   ]
  },
  "file_write_buffer": {
   "async": true,
   "identifiers": [
    "file_write_generic",
    "file_overwrite_buffer",
    "file_write_buffer",
    "f_path",
    "contents"
   ]
  },
  "file_write_generic": {
   "async": true,
   "identifiers": [
    "assert_file_exists_not",
    "file_write_generic",
    "f_path",
    "overwrite",
    "contents"
   ]
  },
  "file_write_json": {
   "async": true,
   "identifiers": [
    "file_write",
    "marker",
    "json_format_to",
    "file_write_json",
    "file_path",
    "object",
    "json"
   ]
  },
  "firebase_admin": {
   "async": true,
   "identifiers": [
    "global_function_async",
    "firebase_admin_get",
    "firebase_admin",
    "admin"
   ]
  },
  "firebase_admin_get": {
   "async": true,
   "identifiers": [
    "firebase_storage_url_project",
    "firebase_service_account",
    "marker",
    "firebase_admin_get",
    "admin",
    "default",
    "service_account",
    "initializeApp",
    "credential",
    "cert",
    "storageBucket"
   ]
  },
  "firebase_bucket": {
   "async": true,
   "identifiers": [
    "firebase_admin",
    "firebase_bucket",
    "admin",
    "bucket",
    "storage"
   ]
  },
  "firebase_deploy": {
   "async": true,
   "identifiers": [
    "command_line",
    "marker",
    "firebase_deploy",
    "stdout"
   ]
  },
  "firebase_deploy_function": {
   "async": true,
   "identifiers": [
    "firebase_deploy_function_destination_version",
    "marker",
    "firebase_upload_object",
    "firebase_deploy_function_destination",
    "date_now_file",
    "function_dependencies_code",
    "firebase_deploy_function",
    "f_name",
    "code",
    "now_file",
    "destination",
    "version",
    "destination_version"
   ]
  },
  "firebase_deploy_function_app_current": {
   "async": true,
   "identifiers": [
    "app_name_main",
    "data_app_current_get",
    "firebase_deploy_function",
    "marker",
    "firebase_deploy_function_app_current",
    "a",
    "combined"
   ]
  },
  "firebase_deploy_function_destination": {
   "async": false,
   "identifiers": [
    "list_join_slash_forward",
    "file_name_json",
    "firebase_deploy_function_destination",
    "name",
    "f_name",
    "file_name",
    "list",
    "destination"
   ]
  },
  "firebase_deploy_function_destination_version": {
   "async": false,
   "identifiers": [
    "firebase_deploy_function_destination",
    "firebase_deploy_function_destination_version",
    "f_name",
    "destination2"
   ]
  },
  "firebase_path_fix": {
   "async": false,
   "identifiers": [
    "string_replace",
    "firebase_path_fix",
    "path",
    "replaced"
   ]
  },
  "firebase_service_account": {
   "async": true,
   "identifiers": [
    "file_read_json",
    "folder_find_starts_with",
    "path_join",
    "folder_previous",
    "firebase_service_account",
    "prefix",
    "v",
    "path_folder",
    "only",
    "file_path",
    "service_account"
   ]
  },
  "firebase_storage_download": {
   "async": true,
   "identifiers": [
    "marker",
    "http",
    "firebase_bucket",
    "browser_is",
    "firebase_path_fix",
    "firebase_storage_url",
    "firebase_storage_download",
    "destination",
    "b",
    "url",
    "buffer",
    "bucket",
    "file",
    "download"
   ]
  },
  "firebase_storage_download_ebible": {
   "async": true,
   "identifiers": [
    "firebase_storage_download_json",
    "ebible_firebase_upload_path",
    "firebase_storage_download_ebible",
    "en",
    "file_name",
    "destination",
    "index"
   ]
  },
  "firebase_storage_download_json": {
   "async": true,
   "identifiers": [
    "json_from",
    "buffer_string_to",
    "firebase_storage_download",
    "firebase_storage_download_json",
    "destination",
    "buffer",
    "s",
    "index"
   ]
  },
  "firebase_storage_download_path": {
   "async": false,
   "identifiers": [
    "folder_user_combine",
    "firebase_storage_download_path",
    "destination",
    "folder",
    "joined"
   ]
  },
  "firebase_storage_download_property": {
   "async": true,
   "identifiers": [
    "json_from",
    "buffer_string_to",
    "object_property_get",
    "firebase_storage_download",
    "firebase_storage_download_property",
    "storage_path",
    "property_name",
    "buffer",
    "json",
    "o",
    "value"
   ]
  },
  "firebase_storage_exists": {
   "async": true,
   "identifiers": [
    "firebase_path_fix",
    "error",
    "firebase_bucket",
    "firebase_storage_exists",
    "path",
    "bucket",
    "file",
    "exists",
    "e",
    "err"
   ]
  },
  "firebase_storage_function_run": {
   "async": true,
   "identifiers": [
    "list_join_newline",
    "js_code_call_statement",
    "firebase_storage_download_property",
    "firebase_deploy_function_destination_version",
    "firebase_storage_function_run",
    "f_name",
    "destination_version",
    "destination",
    "code",
    "call",
    "joined",
    "eval"
   ]
  },
  "firebase_storage_url": {
   "async": false,
   "identifiers": [
    "string_replace",
    "firebase_storage_url_project",
    "firebase_storage_url",
    "storage_path",
    "replaced",
    "url"
   ]
  },
  "firebase_storage_url_project": {
   "async": false,
   "identifiers": [
    "marker",
    "firebase_storage_url_project",
    "url"
   ]
  },
  "firebase_upload_buffer": {
   "async": true,
   "identifiers": [
    "marker",
    "firebase_upload_generic",
    "firebase_upload_buffer",
    "content",
    "destination",
    "buffer",
    "Buffer",
    "from",
    "settings",
    "contentType",
    "resumable"
   ]
  },
  "firebase_upload_generic": {
   "async": true,
   "identifiers": [
    "retry",
    "object_merge",
    "firebase_bucket",
    "firebase_path_fix",
    "log_keep",
    "firebase_upload_generic",
    "destination",
    "settings",
    "buffer",
    "bucket",
    "file",
    "merged",
    "metadata",
    "cacheControl",
    "lambda",
    "url",
    "name",
    "save"
   ]
  },
  "firebase_upload_object": {
   "async": true,
   "identifiers": [
    "firebase_upload_string",
    "json_to",
    "firebase_upload_object",
    "object",
    "destination",
    "content"
   ]
  },
  "firebase_upload_string": {
   "async": true,
   "identifiers": [
    "firebase_upload_generic",
    "firebase_upload_string",
    "content",
    "destination",
    "buffer",
    "Buffer",
    "from",
    "settings",
    "contentType",
    "gzip"
   ]
  },
  "floor": {
   "async": false,
   "identifiers": [
    "floor",
    "p",
    "floored",
    "Math"
   ]
  },
  "folder_current": {
   "async": false,
   "identifiers": [
    "folder_current",
    "current"
   ]
  },
  "folder_current_join": {
   "async": false,
   "identifiers": [
    "folder_current",
    "folder_current_join",
    "result",
    "current",
    "value_string"
   ]
  },
  "folder_current_join_code": {
   "async": false,
   "identifiers": [
    "js_code_string",
    "folder_current_join",
    "folder_current_join_code",
    "f_name_ext",
    "value_string",
    "from"
   ]
  },
  "folder_delete": {
   "async": true,
   "identifiers": [
    "marker",
    "folder_delete",
    "folder_path",
    "fs",
    "promises",
    "rm",
    "recursive",
    "force"
   ]
  },
  "folder_find_starts_with": {
   "async": true,
   "identifiers": [
    "folder_read_async",
    "list_find",
    "string_starts_with",
    "folder_find_starts_with",
    "path_folder",
    "prefix",
    "files",
    "lambda",
    "item",
    "sw",
    "only"
   ]
  },
  "folder_previous": {
   "async": false,
   "identifiers": [
    "folder_previous",
    "previous"
   ]
  },
  "folder_public": {
   "async": false,
   "identifiers": [
    "folder_public",
    "v"
   ]
  },
  "folder_public_combine": {
   "async": false,
   "identifiers": [
    "folder_public",
    "path_join",
    "folder_public_combine",
    "second",
    "result",
    "combined"
   ]
  },
  "folder_read": {
   "async": true,
   "identifiers": [
    "marker",
    "folder_read",
    "path_folder",
    "fs",
    "all",
    "promises",
    "readdir"
   ]
  },
  "folder_read_async": {
   "async": true,
   "identifiers": [
    "folder_read_async",
    "path_folder",
    "fs",
    "path",
    "entries",
    "readdir",
    "withFileTypes",
    "lambda",
    "entry",
    "v",
    "isFile",
    "lambda2",
    "v2",
    "name",
    "files",
    "filter",
    "map"
   ]
  },
  "folder_read_files": {
   "async": false,
   "identifiers": [
    "marker",
    "path_join",
    "fs",
    "folder_read_files",
    "path_folder",
    "lambda",
    "file",
    "result",
    "v",
    "statSync",
    "isFile",
    "all",
    "readdirSync",
    "files",
    "filter"
   ]
  },
  "folder_src": {
   "async": false,
   "identifiers": [
    "folder_src",
    "src"
   ]
  },
  "folder_user": {
   "async": false,
   "identifiers": [
    "path_join",
    "folder_user",
    "folder",
    "f"
   ]
  },
  "folder_user_combine": {
   "async": false,
   "identifiers": [
    "path_join",
    "folder_user",
    "folder_user_combine",
    "folder",
    "destination",
    "result",
    "joined"
   ]
  },
  "folder_user_docs_path": {
   "async": false,
   "identifiers": [
    "folder_user_docs_path",
    "file_name",
    "p"
   ]
  },
  "functions_combine": {
   "async": true,
   "identifiers": [
    "marker",
    "list_to",
    "list_size_1_assert",
    "js_auto",
    "functions_combine_name",
    "list_add",
    "js_declaration_single_block_body",
    "each_async",
    "function_new_transform",
    "js_parse_expression",
    "functions_combine",
    "f_names_comma",
    "list",
    "arguments",
    "f_names",
    "combined",
    "lambda2",
    "ast",
    "body_block",
    "lambda",
    "f_name",
    "item"
   ]
  },
  "functions_combine_name": {
   "async": true,
   "identifiers": [
    "list_map_property",
    "function_name_combine_multiple",
    "function_name_unalias",
    "list_map_unordered_async",
    "string_split_comma",
    "functions_combine_name",
    "f_names_comma",
    "split",
    "results",
    "f_names",
    "combined",
    "result"
   ]
  },
  "functions_combine_test": {
   "async": true,
   "identifiers": [
    "list_join_comma",
    "functions_combine",
    "function_delete_if_exists",
    "functions_combine_name",
    "list_map_name",
    "functions_combine_test",
    "list",
    "names",
    "f_names_comma",
    "combined"
   ]
  },
  "functions_format": {
   "async": true,
   "identifiers": [
    "list_wait",
    "function_format",
    "functions_names",
    "list_map",
    "functions_format",
    "mapped"
   ]
  },
  "functions_log_remove": {
   "async": true,
   "identifiers": [
    "functions_transform",
    "marker",
    "js_log_remove",
    "functions_log_remove",
    "lambda",
    "v"
   ]
  },
  "functions_names": {
   "async": true,
   "identifiers": [
    "list_squash",
    "repos_paths_map_unordered_combine",
    "functions_names_from_path",
    "marker",
    "functions_path",
    "functions_names",
    "path",
    "result",
    "mapper",
    "squashed",
    "joined",
    "f_names"
   ]
  },
  "functions_names_from_path": {
   "async": false,
   "identifiers": [
    "list_map",
    "string_suffix_without",
    "function_name_extension",
    "folder_read_files",
    "functions_names_from_path",
    "path",
    "paths",
    "lambda",
    "p",
    "suffix",
    "without",
    "f_names"
   ]
  },
  "functions_names_includes": {
   "async": true,
   "identifiers": [
    "list_includes",
    "functions_names",
    "functions_names_includes",
    "name",
    "list",
    "valid"
   ]
  },
  "functions_path": {
   "async": false,
   "identifiers": [
    "folder_src",
    "folder_public_combine",
    "functions_path",
    "second",
    "joined"
   ]
  },
  "functions_paths": {
   "async": true,
   "identifiers": [
    "functions_names_from_path",
    "list_squash",
    "repos_paths_map_unordered_combine",
    "function_name_folder_to_path",
    "functions_path",
    "list_map",
    "functions_paths",
    "lambda",
    "folder",
    "f_names",
    "lambda2",
    "f_name",
    "v",
    "mapped",
    "path",
    "result",
    "squashed"
   ]
  },
  "functions_search": {
   "async": true,
   "identifiers": [
    "marker",
    "search_generic",
    "function_name_to_path",
    "functions_names",
    "functions_search",
    "search",
    "f_names",
    "result"
   ]
  },
  "functions_search_open": {
   "async": true,
   "identifiers": [
    "functions_search",
    "function_open",
    "list_single",
    "object_properties",
    "functions_search_open",
    "search",
    "result",
    "properties",
    "f_name"
   ]
  },
  "functions_transform": {
   "async": true,
   "identifiers": [
    "list_wait",
    "functions_names",
    "list_map",
    "function_transform",
    "functions_transform",
    "lambda",
    "lambda2",
    "f_name",
    "output",
    "mapped",
    "v"
   ]
  },
  "function_acronym_to_name": {
   "async": true,
   "identifiers": [
    "list_single",
    "list_size_1",
    "object_property_get",
    "object_property_exists",
    "function_names_to_acronyms",
    "function_acronym_to_name",
    "alias",
    "expanded",
    "expandeds",
    "acronyms",
    "exists2",
    "s1",
    "v"
   ]
  },
  "function_acronym_to_names": {
   "async": true,
   "identifiers": [
    "object_property_get",
    "function_names_to_acronyms",
    "function_acronym_to_names",
    "acronym",
    "acronyms",
    "list"
   ]
  },
  "function_aliases": {
   "async": true,
   "identifiers": [
    "function_alias_add_generic",
    "function_aliases",
    "a",
    "aliases"
   ]
  },
  "function_aliases_inverted": {
   "async": true,
   "identifiers": [
    "object_invert",
    "function_aliases",
    "function_aliases_inverted",
    "aliases",
    "inverted"
   ]
  },
  "function_aliases_restore": {
   "async": true,
   "identifiers": [
    "data_aliases_path",
    "marker",
    "data_transform",
    "function_aliases_restore",
    "lambda",
    "previous",
    "v2",
    "a",
    "c",
    "n",
    "ts",
    "tf",
    "o",
    "s",
    "ac",
    "al",
    "ni",
    "fa",
    "v",
    "m",
    "mr",
    "md",
    "ma",
    "mc",
    "u",
    "ft",
    "fm",
    "f",
    "fs",
    "ai",
    "np",
    "ps",
    "p",
    "pn",
    "ad",
    "ar",
    "fd",
    "de",
    "ir",
    "au",
    "fw",
    "sb",
    "psn",
    "irs",
    "ftc",
    "mcr",
    "mnd",
    "fts",
    "ire",
    "mx",
    "mn",
    "mca",
    "ms",
    "as",
    "mg",
    "mm",
    "mf",
    "w",
    "fws",
    "nj",
    "na",
    "so",
    "t",
    "tr",
    "op",
    "ea",
    "tns",
    "sei",
    "lf",
    "ls",
    "or",
    "st",
    "ntn",
    "oc",
    "jpe",
    "lg",
    "fns",
    "e",
    "l1",
    "lal",
    "l2",
    "fnu",
    "lin",
    "li",
    "l",
    "at",
    "ld",
    "la",
    "ss",
    "ssc",
    "fnt",
    "jps",
    "fc",
    "lm",
    "lmu",
    "lmp",
    "fst",
    "fsp",
    "atn",
    "cs",
    "er",
    "fsts",
    "nt",
    "nti",
    "fr",
    "oe",
    "fp",
    "oec",
    "cd",
    "ars",
    "mdc",
    "lz",
    "mrt",
    "fy",
    "lk",
    "ll",
    "jnt",
    "lx",
    "x",
    "ini",
    "lu",
    "ntsi",
    "jv",
    "jvt",
    "fcp",
    "r",
    "me",
    "lr",
    "lis",
    "mab",
    "mda",
    "ja",
    "lax",
    "lj",
    "opd",
    "fwc",
    "fntp",
    "d",
    "is",
    "lfp",
    "i",
    "ml",
    "mu",
    "mb",
    "mna",
    "mpa",
    "ox",
    "mi",
    "mbt",
    "rg",
    "mdm",
    "mdd",
    "muu",
    "for",
    "fop",
    "fpc",
    "oh",
    "an",
    "d_path"
   ]
  },
  "function_aliases_search": {
   "async": true,
   "identifiers": [
    "search_generic",
    "function_aliases_inverted",
    "object_properties",
    "object_property_get",
    "function_aliases_search",
    "search",
    "names_to_aliases",
    "names",
    "lambda",
    "n",
    "value",
    "result"
   ]
  },
  "function_alias_add": {
   "async": true,
   "identifiers": [
    "undefined_not_is_assert",
    "marker",
    "list_sort_string_size",
    "function_alias_generic",
    "error",
    "object_property_set",
    "function_alias_add",
    "first",
    "second",
    "list",
    "alias",
    "f_name",
    "lambda",
    "a",
    "exists",
    "aliases",
    "unaliased"
   ]
  },
  "function_alias_add_generic": {
   "async": true,
   "identifiers": [
    "data_get",
    "data_aliases_path",
    "object_property_exists",
    "object_property_get",
    "function_alias_add_generic",
    "alias",
    "unaliased",
    "d_path",
    "value",
    "aliases",
    "file_path",
    "data",
    "exists",
    "v"
   ]
  },
  "function_alias_change": {
   "async": true,
   "identifiers": [
    "not",
    "function_alias_generic",
    "object_property_delete",
    "error",
    "object_property_set",
    "function_alias_change",
    "alias_old",
    "alias_new",
    "lambda",
    "a",
    "exists",
    "aliases",
    "unaliased"
   ]
  },
  "function_alias_delete": {
   "async": true,
   "identifiers": [
    "not",
    "function_alias_generic",
    "object_property_delete",
    "error",
    "function_alias_delete",
    "alias_old",
    "lambda",
    "a",
    "exists",
    "aliases"
   ]
  },
  "function_alias_generic": {
   "async": true,
   "identifiers": [
    "data_save",
    "function_alias_add_generic",
    "function_alias_generic",
    "alias",
    "lambda",
    "a"
   ]
  },
  "function_alias_rename": {
   "async": true,
   "identifiers": [
    "data_aliases_path",
    "each",
    "object_property_set",
    "data_transform",
    "object_property_get",
    "object_property_exists_not",
    "object_invert",
    "function_alias_rename",
    "before",
    "after",
    "lambda",
    "aliases",
    "inverted",
    "n",
    "acronyms",
    "lambda2",
    "acronym",
    "d_path",
    "v"
   ]
  },
  "function_alias_replace": {
   "async": true,
   "identifiers": [
    "not",
    "function_alias_generic",
    "object_property_delete",
    "error",
    "object_property_set",
    "function_alias_replace",
    "alias_old",
    "f_name",
    "lambda",
    "a",
    "exists",
    "aliases"
   ]
  },
  "function_auto": {
   "async": true,
   "identifiers": [
    "js_auto",
    "function_transform",
    "marker",
    "function_auto",
    "f_name"
   ]
  },
  "function_auto_path": {
   "async": true,
   "identifiers": [
    "function_path_to_name",
    "function_auto",
    "function_auto_path",
    "f_path",
    "f_name",
    "v"
   ]
  },
  "function_copy": {
   "async": true,
   "identifiers": [
    "repo_path_combine",
    "user_repo_get",
    "function_name_to_path",
    "function_name_unalias",
    "function_current_set",
    "js_identifier_replace",
    "function_transform",
    "file_copy",
    "function_name_to_path_unalias",
    "file_open",
    "function_copy",
    "f_name_old",
    "f_name_new",
    "f_path",
    "f_path_old",
    "unaliased",
    "unaliased_old",
    "unaliased_new",
    "repo_name",
    "f_path_new",
    "lambda",
    "ast"
   ]
  },
  "function_copy_suffix_add": {
   "async": true,
   "identifiers": [
    "function_name_unalias",
    "function_name_combine",
    "function_copy",
    "function_copy_suffix_add",
    "f_name_old",
    "suffix",
    "unaliased",
    "combined",
    "v"
   ]
  },
  "function_current_declaration_code": {
   "async": true,
   "identifiers": [
    "function_current_get",
    "function_parse_declaration_js_unparse",
    "function_current_declaration_code",
    "f_name_current",
    "v"
   ]
  },
  "function_current_get": {
   "async": true,
   "identifiers": [
    "marker",
    "user_repo_path",
    "data_property_get",
    "function_current_get",
    "property_name",
    "d_path",
    "f_name_current"
   ]
  },
  "function_current_set": {
   "async": true,
   "identifiers": [
    "user_repo_path",
    "marker",
    "marker_top",
    "function_parse_declaration_js_unparse",
    "function_exists",
    "marker_first",
    "marker_current_set",
    "data_transform",
    "assert_json",
    "function_current_set",
    "f_name",
    "exists",
    "unaliased",
    "lambda",
    "previous",
    "d_path",
    "name",
    "v"
   ]
  },
  "function_current_set_task_new": {
   "async": true,
   "identifiers": [
    "task_new",
    "function_current_set",
    "function_current_set_task_new",
    "f_name",
    "task_name"
   ]
  },
  "function_current_set_task_new_simple": {
   "async": true,
   "identifiers": [
    "function_current_set_task_new",
    "function_current_set_task_new_simple",
    "f_name",
    "v"
   ]
  },
  "function_delete": {
   "async": true,
   "identifiers": [
    "data_files_update",
    "marker",
    "function_name_to_path",
    "file_delete",
    "function_delete",
    "f_name",
    "f_path"
   ]
  },
  "function_delete_if_exists": {
   "async": true,
   "identifiers": [
    "function_exists",
    "function_delete",
    "function_delete_if_exists",
    "f_name",
    "exists"
   ]
  },
  "function_dependencies": {
   "async": true,
   "identifiers": [
    "list_adder_unique_async",
    "visit_unique_async",
    "function_imports",
    "function_dependencies",
    "f_name",
    "lambda2",
    "la",
    "lambda",
    "v",
    "node",
    "v2"
   ]
  },
  "function_dependencies_code": {
   "async": true,
   "identifiers": [
    "list_join_newline",
    "list_map_unordered_async",
    "list_wait",
    "function_parse_declaration",
    "function_dependencies",
    "list_map",
    "js_unparse",
    "list_map_property",
    "function_dependencies_code",
    "f_name",
    "ds",
    "mapped",
    "waited",
    "mapped2",
    "waited2",
    "code"
   ]
  },
  "function_dependencies_code_copy": {
   "async": true,
   "identifiers": [
    "marker",
    "clipboard_copy",
    "function_dependencies_code",
    "function_dependencies_code_copy",
    "f_name",
    "code"
   ]
  },
  "function_exists": {
   "async": true,
   "identifiers": [
    "function_name_to_path_unalias",
    "function_exists",
    "f_name",
    "u"
   ]
  },
  "function_exists_inner": {
   "async": true,
   "identifiers": [
    "object_property_set",
    "object_merge",
    "list_single",
    "true_is",
    "object_property_get",
    "list_size_1",
    "list_multiple_is",
    "list_filter",
    "repos_paths_map_unordered_combine",
    "file_exists",
    "function_exists_inner",
    "u",
    "f_path",
    "lambda",
    "joined",
    "exists",
    "v",
    "mapped",
    "lambda2",
    "m",
    "exists2",
    "ti2",
    "filtered",
    "multiple",
    "result",
    "only",
    "f_path2"
   ]
  },
  "function_exists_strict": {
   "async": true,
   "identifiers": [
    "function_name_to_path_search",
    "marker",
    "function_exists_strict",
    "f_name",
    "result"
   ]
  },
  "function_format": {
   "async": true,
   "identifiers": [
    "function_name_to_path_unalias",
    "file_read",
    "js_format",
    "file_overwrite",
    "function_format",
    "f_name",
    "f_path",
    "r",
    "formatted"
   ]
  },
  "function_identifier_replace": {
   "async": true,
   "identifiers": [
    "list_empty_is",
    "assert_not",
    "function_current_get",
    "object_replace",
    "js_parse_expression",
    "js_identifiers_named",
    "each",
    "function_transform",
    "marker",
    "function_identifier_replace",
    "identifier_name",
    "replacement",
    "f_name",
    "lambda2",
    "ast",
    "identifiers_named",
    "b",
    "from",
    "lambda",
    "i",
    "v",
    "v2"
   ]
  },
  "function_identifier_replace_ending_remove": {
   "async": true,
   "identifiers": [
    "string_suffix_without",
    "marker",
    "function_identifier_replace",
    "function_identifier_replace_ending_remove",
    "identifier_name",
    "ending_to_remove",
    "removed",
    "v"
   ]
  },
  "function_identifier_replace_suffix_add": {
   "async": true,
   "identifiers": [
    "function_name_combine",
    "function_identifier_replace",
    "function_identifier_replace_suffix_add",
    "identifier_name",
    "suffix_to_add",
    "replacement",
    "v"
   ]
  },
  "function_import": {
   "async": true,
   "identifiers": [
    "path_join",
    "fileURLToPath",
    "function_name_to_base",
    "function_name_unalias",
    "function_import",
    "f_name",
    "path",
    "__filename",
    "import",
    "meta",
    "url",
    "__dirname",
    "dirname",
    "unaliased",
    "joined",
    "f_path",
    "imported",
    "imported_fn",
    "Error"
   ]
  },
  "function_imports": {
   "async": true,
   "identifiers": [
    "js_imports",
    "function_parse",
    "function_imports",
    "f_name",
    "parsed",
    "ast",
    "imports"
   ]
  },
  "function_imports_add": {
   "async": true,
   "identifiers": [
    "function_name_to_path_import",
    "each_async",
    "js_code_import_single",
    "list_add_first",
    "js_parse_statement_module",
    "function_imports_add",
    "ast",
    "imports",
    "body",
    "lambda",
    "import_",
    "from",
    "code",
    "statement"
   ]
  },
  "function_imports_fix": {
   "async": true,
   "identifiers": [
    "js_imports_unused_remove",
    "marker",
    "function_imports_add",
    "function_imports_missing",
    "file_js_unparse",
    "function_imports_fix",
    "f_name",
    "parsed",
    "imports_missing",
    "ast"
   ]
  },
  "function_imports_missing": {
   "async": true,
   "identifiers": [
    "js_imports_missing",
    "function_parse_declaration",
    "object_merge",
    "function_imports_missing",
    "f_name",
    "parsed",
    "ast",
    "imports_missing",
    "to"
   ]
  },
  "function_imports_missing_add": {
   "async": true,
   "identifiers": [
    "function_imports_add",
    "function_imports_missing",
    "file_js_unparse",
    "function_imports_missing_add",
    "f_name",
    "parsed",
    "imports_missing",
    "ast"
   ]
  },
  "function_list_generate": {
   "async": true,
   "identifiers": [
    "string_suffix_without",
    "function_open",
    "function_transform",
    "js_statement_return_add",
    "js_parse_expression",
    "json_to",
    "list_empty",
    "js_declaration_single_block_body",
    "function_new",
    "not",
    "function_exists",
    "function_list_generate",
    "f_generate",
    "list",
    "f_generate_name",
    "name",
    "f_name",
    "exists",
    "lambda3",
    "ast",
    "body_block",
    "code",
    "expression",
    "output"
   ]
  },
  "function_names_to_acronyms": {
   "async": true,
   "identifiers": [
    "object_invert",
    "function_name_to_acronym",
    "list_to_dictionary",
    "functions_names",
    "function_names_to_acronyms",
    "f_names",
    "dictionary",
    "acronyms"
   ]
  },
  "function_name_combine": {
   "async": false,
   "identifiers": [
    "function_name_combine_multiple",
    "function_name_combine",
    "left",
    "right",
    "combined"
   ]
  },
  "function_name_combine_multiple": {
   "async": false,
   "identifiers": [
    "function_name_separator",
    "list_join",
    "function_name_combine_multiple",
    "parts",
    "separator",
    "combined"
   ]
  },
  "function_name_extension": {
   "async": false,
   "identifiers": [
    "function_name_extension",
    "ext"
   ]
  },
  "function_name_separator": {
   "async": false,
   "identifiers": [
    "function_name_separator",
    "separator"
   ]
  },
  "function_name_to_acronym": {
   "async": false,
   "identifiers": [
    "list_join_empty",
    "list_first",
    "list_map",
    "function_name_to_parts",
    "function_name_to_acronym",
    "f_name",
    "parts",
    "letters",
    "acronym"
   ]
  },
  "function_name_to_base": {
   "async": false,
   "identifiers": [
    "function_name_extension",
    "function_name_to_base",
    "f_name",
    "f_name_ext"
   ]
  },
  "function_name_to_parts": {
   "async": false,
   "identifiers": [
    "string_split",
    "function_name_separator",
    "function_name_to_parts",
    "f_name",
    "separator",
    "parts"
   ]
  },
  "function_name_to_path": {
   "async": false,
   "identifiers": [
    "function_name_folder_to_path",
    "string_includes",
    "error",
    "functions_path",
    "function_name_to_path",
    "f_name",
    "folder",
    "v"
   ]
  },
  "function_name_to_path_import": {
   "async": false,
   "identifiers": [
    "folder_current_join_code",
    "function_name_to_base",
    "function_name_to_path_import",
    "import_",
    "f_name_ext",
    "from"
   ]
  },
  "function_name_to_path_unalias": {
   "async": true,
   "identifiers": [
    "function_name_to_path_search",
    "function_name_unalias",
    "object_merge",
    "function_name_to_path_unalias",
    "f_name",
    "u",
    "unaliased",
    "result",
    "to"
   ]
  },
  "function_name_unalias": {
   "async": true,
   "identifiers": [
    "function_acronym_to_name",
    "function_alias_add_generic",
    "function_name_unalias",
    "f_name",
    "exists",
    "unaliased",
    "unaliased_actual",
    "expanded",
    "expandeds",
    "v"
   ]
  },
  "function_new": {
   "async": true,
   "identifiers": [
    "marker",
    "function_new_declaration",
    "js_code_declaration",
    "function_open",
    "js_parse_statement_module",
    "function_new",
    "f_name",
    "code_declaration",
    "declaration"
   ]
  },
  "function_new_aliased": {
   "async": true,
   "identifiers": [
    "function_alias_add",
    "function_new",
    "function_new_aliased",
    "f_name",
    "alias"
   ]
  },
  "function_new_app_screen": {
   "async": true,
   "identifiers": [
    "data_app_current_get",
    "function_name_combine",
    "function_new",
    "marker",
    "function_new_app_screen",
    "screen_name",
    "a_name",
    "combined",
    "v"
   ]
  },
  "function_new_declaration": {
   "async": true,
   "identifiers": [
    "repo_path_combine",
    "user_repo_get",
    "js_format",
    "file_write",
    "js_code_export",
    "js_unparse",
    "function_name_to_path",
    "js_declaration_name",
    "js_parse",
    "js_imports_missing_add",
    "function_new_declaration",
    "declaration",
    "name",
    "f_path",
    "code_declaration",
    "contents",
    "ast",
    "contents_import",
    "formatted",
    "repo_name",
    "combined"
   ]
  },
  "function_new_js": {
   "async": true,
   "identifiers": [
    "function_new_js_inner",
    "function_new_js_name",
    "function_new_js",
    "f_name_unprefixed",
    "combined"
   ]
  },
  "function_new_js_inner": {
   "async": true,
   "identifiers": [
    "function_transform",
    "js_declaration_single_params_add",
    "marker",
    "function_new",
    "function_new_js_inner",
    "combined",
    "lambda",
    "ast",
    "result"
   ]
  },
  "function_new_js_name": {
   "async": false,
   "identifiers": [
    "function_name_combine",
    "function_new_js_name",
    "f_name_unprefixed",
    "combined2"
   ]
  },
  "function_new_transform": {
   "async": true,
   "identifiers": [
    "function_transform",
    "function_new",
    "function_new_transform",
    "f_name",
    "lambda$ast",
    "v"
   ]
  },
  "function_open": {
   "async": true,
   "identifiers": [
    "marker",
    "function_current_set",
    "function_name_to_path_unalias",
    "file_open",
    "function_open",
    "f_name",
    "f_path"
   ]
  },
  "function_open_app": {
   "async": true,
   "identifiers": [
    "user_repo_path",
    "data_set",
    "app_name_prefixed",
    "function_open",
    "marker",
    "function_open_app",
    "f_name",
    "a_name",
    "v",
    "lambda",
    "previous",
    "d_path"
   ]
  },
  "function_open_dollar_choice": {
   "async": true,
   "identifiers": [
    "js_dollar_new_name",
    "function_open",
    "marker",
    "function_open_dollar_choice",
    "code",
    "combined",
    "v"
   ]
  },
  "function_open_editor": {
   "async": true,
   "identifiers": [
    "marker",
    "function_name_to_path_unalias",
    "file_open_editor",
    "function_open_editor",
    "f_name",
    "f_path"
   ]
  },
  "function_open_editor_current": {
   "async": true,
   "identifiers": [
    "function_current_get",
    "function_open_editor",
    "function_open_editor_current",
    "f_name_current",
    "v"
   ]
  },
  "function_params_consolidate": {
   "async": true,
   "identifiers": [
    "js_property_identifier",
    "functions_names",
    "list_empty",
    "js_identifiers_to_names",
    "js_declaration_params_get",
    "js_declaration_single",
    "function_transform",
    "list_map",
    "list_add",
    "function_params_consolidate",
    "f_name",
    "lambda",
    "ast",
    "declaration",
    "params",
    "params_names",
    "lambda2",
    "param_name",
    "v",
    "properties",
    "arg_new",
    "type",
    "result",
    "f_names"
   ]
  },
  "function_params_consolidate_task_simple": {
   "async": false,
   "identifiers": [
    "todo",
    "function_params_consolidate_task_simple"
   ]
  },
  "function_params_new": {
   "async": true,
   "identifiers": [
    "not",
    "function_exists",
    "assert_arguments",
    "js_visit_calls_named",
    "object_properties",
    "function_transform",
    "function_current_get",
    "each_async",
    "list_add",
    "each",
    "js_parse_expression",
    "data_identifiers_search",
    "function_transform_current",
    "js_declaration_single_params_add",
    "string_split",
    "function_params_new",
    "param_names_comma",
    "values_default_comma",
    "arguments",
    "param_names",
    "lambda1",
    "ast",
    "values_default",
    "f_name_current",
    "result",
    "properties",
    "lambda4",
    "f_name",
    "exists",
    "lambda5",
    "lambda",
    "output",
    "args",
    "lambda3",
    "value_default",
    "expression2"
   ]
  },
  "function_param_new": {
   "async": true,
   "identifiers": [
    "function_params_new",
    "function_param_new",
    "param_name",
    "default_value"
   ]
  },
  "function_param_new_double": {
   "async": true,
   "identifiers": [
    "marker",
    "function_params_new",
    "function_param_new_double",
    "param_name"
   ]
  },
  "function_param_swap": {
   "async": true,
   "identifiers": [
    "list_swap",
    "js_declaration_param_named",
    "js_declaration_single",
    "function_transform",
    "function_param_swap",
    "f_name",
    "param_name_a",
    "param_name_b",
    "a_index",
    "b_index",
    "lambda",
    "ast",
    "declaration",
    "a",
    "b",
    "params"
   ]
  },
  "function_param_swap_task_simple": {
   "async": true,
   "identifiers": [
    "function_new",
    "function_param_swap",
    "todo",
    "function_param_swap_task_simple",
    "name",
    "f_name",
    "f_name2",
    "param_name_a",
    "param_name_b"
   ]
  },
  "function_parse": {
   "async": true,
   "identifiers": [
    "function_name_to_path_unalias",
    "file_js_parse",
    "object_merge",
    "function_parse",
    "f_name",
    "f_path",
    "unaliased",
    "parsed",
    "to"
   ]
  },
  "function_parse_declaration": {
   "async": true,
   "identifiers": [
    "function_parse_declaration_inner",
    "function_parse",
    "function_parse_declaration",
    "f_name",
    "parsed",
    "to"
   ]
  },
  "function_parse_declaration_inner": {
   "async": false,
   "identifiers": [
    "object_merge",
    "js_declaration_single",
    "function_parse_declaration_inner",
    "parsed",
    "ast",
    "declaration",
    "to"
   ]
  },
  "function_parse_declaration_js_unparse": {
   "async": true,
   "identifiers": [
    "js_unparse",
    "function_parse_declaration",
    "object_properties",
    "function_parse_declaration_js_unparse",
    "f_name",
    "declaration",
    "properties",
    "output"
   ]
  },
  "function_parse_strict": {
   "async": true,
   "identifiers": [
    "file_js_parse",
    "function_name_to_path",
    "function_parse_strict",
    "f_name",
    "f_path",
    "parsed"
   ]
  },
  "function_parse_strict_declaration": {
   "async": true,
   "identifiers": [
    "function_parse_strict",
    "function_parse_declaration_inner",
    "marker",
    "function_parse_strict_declaration",
    "f_name",
    "parsed",
    "to"
   ]
  },
  "function_path_declaration_unparse": {
   "async": true,
   "identifiers": [
    "function_parse_declaration_js_unparse",
    "function_path_to_name",
    "function_path_declaration_unparse",
    "f_path",
    "f_name",
    "output"
   ]
  },
  "function_path_to_name": {
   "async": false,
   "identifiers": [
    "path_name",
    "function_path_to_name",
    "f_path",
    "f_name"
   ]
  },
  "function_read": {
   "async": true,
   "identifiers": [
    "function_name_to_path_unalias",
    "file_read",
    "function_read",
    "f_name",
    "f_path",
    "v"
   ]
  },
  "function_rename": {
   "async": true,
   "identifiers": [
    "function_rename_identifiers",
    "function_alias_rename",
    "function_delete",
    "function_copy",
    "marker",
    "function_rename",
    "f_name_before",
    "f_name_after",
    "v"
   ]
  },
  "function_rename_identifiers": {
   "async": true,
   "identifiers": [
    "list_remove_if_exists",
    "each_async",
    "function_transform",
    "js_imports_paths_fix",
    "js_identifier_replace",
    "object_property_get",
    "data_identifiers_get",
    "function_rename_identifiers",
    "f_name_before",
    "f_name_after",
    "identifiers",
    "f_names",
    "lambda",
    "f_name",
    "lambda2",
    "ast",
    "output"
   ]
  },
  "function_rename_suffix_add": {
   "async": true,
   "identifiers": [
    "string_padded_is",
    "assert_not",
    "function_name_combine",
    "function_rename",
    "marker",
    "function_rename_suffix_add",
    "f_name_before",
    "suffix",
    "p",
    "f_name_after",
    "v"
   ]
  },
  "function_run": {
   "async": true,
   "identifiers": [
    "function_import",
    "function_run",
    "f_name",
    "args",
    "fn",
    "result"
   ]
  },
  "function_run_git": {
   "async": true,
   "identifiers": [
    "repos_paths_map_unordered",
    "git_acp_call_folder",
    "function_run_log",
    "function_run_git",
    "f_name",
    "args",
    "result",
    "each_folder",
    "folder"
   ]
  },
  "function_run_line": {
   "async": true,
   "identifiers": [
    "function_run",
    "function_run_line_parse",
    "function_run_line",
    "line",
    "f_name",
    "args",
    "v"
   ]
  },
  "function_run_line_git": {
   "async": true,
   "identifiers": [
    "function_run_line_parse",
    "function_run_git",
    "Error",
    "stackTraceLimit",
    "Infinity",
    "function_run_line_git",
    "line",
    "f_name",
    "args"
   ]
  },
  "function_run_line_parse": {
   "async": true,
   "identifiers": [
    "data_prompts_path",
    "list_unique_reverse",
    "list_add",
    "data_transform",
    "function_run_line_parse",
    "line",
    "f_name",
    "args",
    "split",
    "lambda",
    "previous",
    "unique",
    "d_path",
    "v"
   ]
  },
  "function_run_log": {
   "async": true,
   "identifiers": [
    "log_keep",
    "function_run",
    "function_name_unalias",
    "function_run_log",
    "f_name",
    "args",
    "unaliased",
    "result"
   ]
  },
  "function_run_log_task_duplicate_lines_to_each": {
   "async": false,
   "identifiers": [
    "todo",
    "function_run_log_task_duplicate_lines_to_each"
   ]
  },
  "function_run_prompt": {
   "async": true,
   "identifiers": [
    "log_error",
    "null_not_is",
    "data_property_get",
    "chalk_green",
    "function_run_line_git",
    "command_line_read",
    "json_format_to",
    "data_path",
    "function_run_prompt",
    "property_name",
    "d_path",
    "ea",
    "nn",
    "prompt",
    "prompt_colored",
    "line"
   ]
  },
  "function_transform": {
   "async": true,
   "identifiers": [
    "function_transform_result",
    "function_parse_declaration_js_unparse",
    "function_transform",
    "f_name",
    "lambda$ast",
    "output"
   ]
  },
  "function_transform_command": {
   "async": true,
   "identifiers": [
    "function_transform_result",
    "function_import",
    "function_transform_command",
    "transformer_name",
    "f_name",
    "transformer",
    "v"
   ]
  },
  "function_transform_command_self": {
   "async": true,
   "identifiers": [
    "function_transform_command",
    "function_transform_command_self",
    "f_name",
    "v"
   ]
  },
  "function_transform_current": {
   "async": true,
   "identifiers": [
    "function_transform",
    "function_current_get",
    "function_transform_current",
    "lambda",
    "f_name"
   ]
  },
  "function_transform_marker": {
   "async": true,
   "identifiers": [
    "function_transform_marker_specified",
    "marker",
    "data_marker_current_get",
    "function_transform_marker",
    "f_name",
    "lambda$a",
    "marker_name",
    "code"
   ]
  },
  "function_transform_marker_all": {
   "async": true,
   "identifiers": [
    "js_markers",
    "function_transform_marker_arg",
    "function_transform",
    "each_async",
    "function_transform_marker_all",
    "f_name",
    "lambda$a",
    "lambda_marker",
    "ast",
    "markers",
    "lambda",
    "v",
    "a"
   ]
  },
  "function_transform_marker_arg": {
   "async": false,
   "identifiers": [
    "object_merge",
    "list_get_end",
    "function_transform_marker_arg",
    "v",
    "ast",
    "stack",
    "stack1",
    "stack2",
    "a"
   ]
  },
  "function_transform_marker_current": {
   "async": true,
   "identifiers": [
    "function_current_get",
    "function_transform_marker",
    "marker",
    "function_transform_marker_current",
    "lambda$a",
    "f_name_current",
    "v"
   ]
  },
  "function_transform_marker_empty": {
   "async": true,
   "identifiers": [
    "marker",
    "function_transform_marker",
    "function_current_get",
    "noop",
    "function_transform_marker_empty",
    "f_name",
    "v"
   ]
  },
  "function_transform_marker_specified": {
   "async": true,
   "identifiers": [
    "list_size_1_assert_message",
    "list_size",
    "json_to",
    "list_adder_async",
    "each_async",
    "function_transform_marker_arg",
    "js_marker_named",
    "js_type",
    "function_transform",
    "function_transform_marker_specified",
    "f_name",
    "marker_name",
    "lambda$a",
    "code",
    "lambda2",
    "la",
    "lambda_marker",
    "ast",
    "visitors",
    "lambda",
    "v",
    "a",
    "lines",
    "message",
    "size"
   ]
  },
  "function_transform_result": {
   "async": true,
   "identifiers": [
    "file_js_unparse",
    "function_parse",
    "function_transform_result",
    "f_name",
    "lambda$ast",
    "parsed",
    "ast",
    "result"
   ]
  },
  "function_types": {
   "async": true,
   "identifiers": [
    "list_sort_string",
    "js_node_types",
    "function_current_get",
    "function_parse",
    "function_types",
    "f_name",
    "ast",
    "f_types"
   ]
  },
  "function_type_first": {
   "async": true,
   "identifiers": [
    "function_current_get",
    "js_visit_nodes",
    "list_adder",
    "function_parse",
    "js_node_type",
    "list_first",
    "function_type_first",
    "type",
    "f_name",
    "ast",
    "lambda2",
    "la",
    "lambda",
    "node",
    "list",
    "first"
   ]
  },
  "function_watch_ending_change": {
   "async": true,
   "identifiers": [
    "string_suffix_change",
    "marker",
    "function_name_unalias",
    "function_wrap",
    "function_watch_ending_change",
    "f_name",
    "ending_old",
    "ending_new",
    "unaliased",
    "f_name_new",
    "v"
   ]
  },
  "function_wrap": {
   "async": true,
   "identifiers": [
    "js_statement_return",
    "js_declaration_single_block_body",
    "object_property_from",
    "js_declaration_asyncify",
    "js_code_call_args_await_maybe",
    "js_declaration_params_names",
    "function_parse_declaration",
    "function_new_transform",
    "js_declaration_single",
    "list_add",
    "js_imports_missing_add",
    "function_wrap",
    "f_name",
    "f_name_wrapped",
    "declaration",
    "declaration_call",
    "unaliased",
    "v",
    "lambda",
    "ast",
    "arg_names",
    "code",
    "body_block",
    "item"
   ]
  },
  "function_wrap_suffix_add": {
   "async": true,
   "identifiers": [
    "function_name_unalias",
    "function_name_combine",
    "function_wrap",
    "function_wrap_suffix_add",
    "f_name",
    "suffix",
    "unaliased",
    "f_name_wrapped",
    "v"
   ]
  },
  "git_acp": {
   "async": true,
   "identifiers": [
    "git_acp_folder",
    "git_acp",
    "message",
    "folder"
   ]
  },
  "git_acp_call": {
   "async": true,
   "identifiers": [
    "git_acp_call_folder",
    "git_acp_call",
    "f_name",
    "args",
    "folder"
   ]
  },
  "git_acp_call_folder": {
   "async": true,
   "identifiers": [
    "git_acp_folder",
    "git_acp_call_folder",
    "f_name",
    "args",
    "folder",
    "message",
    "concat",
    "join"
   ]
  },
  "git_acp_folder": {
   "async": true,
   "identifiers": [
    "marker",
    "git_push_folder",
    "git_commit_folder",
    "command_line_git_folder",
    "git_acp_folder",
    "folder",
    "message"
   ]
  },
  "git_acp_timestamp": {
   "async": true,
   "identifiers": [
    "date_now_iso",
    "git_acp",
    "git_acp_timestamp",
    "message"
   ]
  },
  "git_commit": {
   "async": true,
   "identifiers": [
    "git_commit_folder",
    "git_commit",
    "message",
    "folder"
   ]
  },
  "git_commit_folder": {
   "async": true,
   "identifiers": [
    "catch_only_async",
    "command_line_git_folder",
    "git_commit_folder",
    "folder",
    "message",
    "lambda"
   ]
  },
  "git_filter_repo_install": {
   "async": true,
   "identifiers": [
    "command_line",
    "marker",
    "git_filter_repo_install",
    "v"
   ]
  },
  "git_history_delete": {
   "async": true,
   "identifiers": [
    "folder_previous",
    "git_repo_url",
    "folder_delete",
    "todo",
    "command_line_git",
    "uuid",
    "marker",
    "git_history_delete",
    "user",
    "repo",
    "f_path",
    "url",
    "repo_folder",
    "stdout",
    "process",
    "chdir",
    "stdout2",
    "previous"
   ]
  },
  "git_publish_initial": {
   "async": true,
   "identifiers": [
    "repo_acronym_to_path",
    "list_map_combine",
    "each_async",
    "command_line_git_folder",
    "git_publish_initial",
    "acronym",
    "folder",
    "branch_name",
    "commands",
    "mapped",
    "lambda2",
    "command"
   ]
  },
  "git_push": {
   "async": true,
   "identifiers": [
    "git_push_folder",
    "git_push",
    "folder"
   ]
  },
  "git_push_command": {
   "async": false,
   "identifiers": [
    "git_push_command",
    "v"
   ]
  },
  "git_push_folder": {
   "async": true,
   "identifiers": [
    "path_join",
    "data_set",
    "lambda_get",
    "command_line_git_folder",
    "log_keep",
    "date_diff_hours",
    "date_to",
    "data_property_get",
    "user_repo_path",
    "git_push",
    "function_name_combine",
    "date_iso_to",
    "date_now",
    "catch_log_async",
    "git_push_command",
    "marker",
    "git_push_folder",
    "folder",
    "command_git",
    "lambda",
    "now",
    "now_iso",
    "property_name",
    "name",
    "d_path",
    "joined",
    "before_iso",
    "before",
    "hours",
    "lambda$previous"
   ]
  },
  "git_push_schedule": {
   "async": true,
   "identifiers": [
    "command_line_schtasks",
    "git_push_schedule_command",
    "git_push_schedule",
    "command",
    "stdout"
   ]
  },
  "git_push_schedule_check": {
   "async": true,
   "identifiers": [
    "schtasks_query",
    "git_push_schedule_task_name",
    "marker",
    "git_push_schedule_check",
    "name",
    "exists"
   ]
  },
  "git_push_schedule_command": {
   "async": true,
   "identifiers": [
    "assert_not",
    "git_push_schedule_check",
    "git_push_schedule_task_name",
    "git_push_command",
    "command_line_git_prefix",
    "path_resolve",
    "folder_current",
    "git_push_schedule_command",
    "exists",
    "paths",
    "result",
    "command"
   ]
  },
  "git_push_schedule_task_name": {
   "async": false,
   "identifiers": [
    "git_push_schedule_task_name",
    "name"
   ]
  },
  "git_rebase": {
   "async": true,
   "identifiers": [
    "log_keep",
    "command_line_git",
    "git_rebase",
    "e",
    "abortErr"
   ]
  },
  "git_repo_clone": {
   "async": true,
   "identifiers": [
    "repo_path",
    "command_line_git",
    "git_repo_url",
    "marker",
    "git_repo_clone",
    "user",
    "repo",
    "url",
    "folder_name"
   ]
  },
  "git_repo_rename": {
   "async": true,
   "identifiers": [
    "command_line",
    "marker",
    "git_repo_rename",
    "owner",
    "from",
    "to",
    "stdout"
   ]
  },
  "git_repo_rename_normalize": {
   "async": true,
   "identifiers": [
    "string_replace",
    "git_repo_rename",
    "marker",
    "git_repo_rename_normalize",
    "owner",
    "name_old",
    "name",
    "stdout",
    "result"
   ]
  },
  "git_repo_url": {
   "async": false,
   "identifiers": [
    "git_repo_url",
    "user",
    "repo",
    "v"
   ]
  },
  "global_function_async": {
   "async": true,
   "identifiers": [
    "object_property_lambda",
    "global_get",
    "marker",
    "global_function_async",
    "fn",
    "lambda",
    "global",
    "value",
    "name",
    "awaited"
   ]
  },
  "global_function_property_async": {
   "async": true,
   "identifiers": [
    "object_property_lambda_async",
    "object_property_initialize",
    "global_get",
    "marker",
    "global_function_property_async",
    "fn",
    "property_name",
    "lambda",
    "global",
    "fn_object",
    "name",
    "value"
   ]
  },
  "global_get": {
   "async": false,
   "identifiers": [
    "marker",
    "global",
    "global_get"
   ]
  },
  "html_attribute_set": {
   "async": false,
   "identifiers": [
    "html_component_element_get",
    "html_attribute_set",
    "component",
    "key",
    "value",
    "element",
    "setAttribute"
   ]
  },
  "html_button": {
   "async": false,
   "identifiers": [
    "html_style_font_size",
    "html_on_click",
    "html_text_set",
    "html_button_element",
    "html_button",
    "parent",
    "text",
    "lambda",
    "component"
   ]
  },
  "html_button_element": {
   "async": false,
   "identifiers": [
    "marker",
    "html_element",
    "html_button_element",
    "parent",
    "tag_name",
    "b"
   ]
  },
  "html_button_screen": {
   "async": false,
   "identifiers": [
    "app_screen_set",
    "html_button",
    "html_button_screen",
    "parent",
    "text",
    "context",
    "screen_name",
    "lambda"
   ]
  },
  "html_clear": {
   "async": false,
   "identifiers": [
    "html_text_set",
    "html_clear",
    "element"
   ]
  },
  "html_component_element_get": {
   "async": false,
   "identifiers": [
    "object_property_get",
    "html_component_element_get",
    "component",
    "value"
   ]
  },
  "html_component_wrap": {
   "async": false,
   "identifiers": [
    "html_component_wrap",
    "element",
    "v"
   ]
  },
  "html_disable": {
   "async": false,
   "identifiers": [
    "html_disable_set",
    "html_disable",
    "b",
    "disabled"
   ]
  },
  "html_disable_set": {
   "async": false,
   "identifiers": [
    "object_property_set",
    "html_component_element_get",
    "html_disable_set",
    "b",
    "disabled",
    "b_element"
   ]
  },
  "html_display_block": {
   "async": false,
   "identifiers": [
    "marker",
    "html_style_set",
    "html_display_block",
    "element"
   ]
  },
  "html_display_none": {
   "async": false,
   "identifiers": [
    "marker",
    "html_style_set",
    "html_display_none",
    "element"
   ]
  },
  "html_display_none_or_block": {
   "async": false,
   "identifiers": [
    "html_display_block",
    "html_display_none",
    "html_display_none_or_block",
    "condition",
    "item"
   ]
  },
  "html_div": {
   "async": false,
   "identifiers": [
    "html_element",
    "html_div",
    "root",
    "div"
   ]
  },
  "html_document_body": {
   "async": false,
   "identifiers": [
    "html_component_wrap",
    "marker",
    "html_document_body",
    "body_element",
    "document",
    "body"
   ]
  },
  "html_document_head": {
   "async": false,
   "identifiers": [
    "html_component_wrap",
    "marker",
    "html_document_head",
    "head",
    "document",
    "component"
   ]
  },
  "html_document_root": {
   "async": false,
   "identifiers": [
    "html_element",
    "html_component_wrap",
    "marker",
    "html_document_root",
    "document",
    "documentElement",
    "html"
   ]
  },
  "html_element": {
   "async": false,
   "identifiers": [
    "html_component_wrap",
    "html_component_element_get",
    "html_element",
    "parent",
    "tag_name",
    "parent_element",
    "e",
    "document",
    "createElement",
    "appendChild",
    "component"
   ]
  },
  "html_enable": {
   "async": false,
   "identifiers": [
    "marker",
    "html_disable_set",
    "html_enable",
    "b",
    "disabled"
   ]
  },
  "html_enable_if": {
   "async": false,
   "identifiers": [
    "html_disable",
    "html_enable",
    "html_enable_if",
    "component",
    "condition",
    "fn"
   ]
  },
  "html_loading": {
   "async": true,
   "identifiers": [
    "html_remove",
    "html_style_assign",
    "html_div",
    "html_document_body",
    "marker",
    "html_loading",
    "lambda",
    "body",
    "div",
    "s",
    "position",
    "top",
    "left",
    "width",
    "height",
    "background",
    "display",
    "justifyContent",
    "alignItems",
    "zIndex",
    "result"
   ]
  },
  "html_meta_viewport": {
   "async": false,
   "identifiers": [
    "html_attribute_set",
    "html_element",
    "html_document_head",
    "html_meta_viewport",
    "head",
    "component"
   ]
  },
  "html_name_to_path": {
   "async": false,
   "identifiers": [
    "folder_public_combine",
    "file_name_html",
    "html_name_to_path",
    "name",
    "file_name",
    "file_path"
   ]
  },
  "html_name_to_path_dev": {
   "async": false,
   "identifiers": [
    "path_join",
    "marker",
    "folder_public_combine",
    "file_name_html",
    "html_name_to_path_dev",
    "name",
    "file_name",
    "joined",
    "file_path"
   ]
  },
  "html_new": {
   "async": true,
   "identifiers": [
    "html_update",
    "html_name_to_path",
    "assert_file_exists_not",
    "html_new",
    "name",
    "file_path"
   ]
  },
  "html_on": {
   "async": false,
   "identifiers": [
    "html_component_element_get",
    "html_on",
    "component",
    "name_event",
    "lambda",
    "element",
    "addEventListener"
   ]
  },
  "html_on_click": {
   "async": false,
   "identifiers": [
    "html_on",
    "html_on_click",
    "component",
    "lambda",
    "name_event"
   ]
  },
  "html_on_keydown": {
   "async": false,
   "identifiers": [
    "marker",
    "html_on",
    "html_on_keydown",
    "component",
    "lambda",
    "name_event"
   ]
  },
  "html_overwrite": {
   "async": true,
   "identifiers": [
    "file_overwrite",
    "html_overwrite",
    "name",
    "file_path",
    "body",
    "contents"
   ]
  },
  "html_p": {
   "async": false,
   "identifiers": [
    "html_element",
    "html_p",
    "root",
    "component"
   ]
  },
  "html_parse": {
   "async": true,
   "identifiers": [
    "import_install",
    "html_parse",
    "contents",
    "cheerio",
    "d",
    "load",
    "root",
    "result"
   ]
  },
  "html_parse_attr": {
   "async": false,
   "identifiers": [
    "html_parse_attr",
    "d",
    "item",
    "name",
    "v",
    "attr"
   ]
  },
  "html_parse_classes_preview": {
   "async": false,
   "identifiers": [
    "list_to_dictionary",
    "html_parse_text",
    "html_parse_find",
    "html_parse_classes_preview",
    "main",
    "d",
    "classes",
    "lambda",
    "c",
    "e",
    "text",
    "dictionary"
   ]
  },
  "html_parse_descendants_classes": {
   "async": false,
   "identifiers": [
    "list_sort_string",
    "string_split",
    "each",
    "list_adder",
    "string_is",
    "list_unique",
    "html_parse_attr",
    "html_parse_find_list_to",
    "html_parse_descendants_classes",
    "item",
    "d",
    "descendants",
    "lambda2",
    "la",
    "lambda",
    "c",
    "split",
    "list",
    "classes"
   ]
  },
  "html_parse_find": {
   "async": false,
   "identifiers": [
    "html_parse_find",
    "root",
    "selector",
    "result",
    "find"
   ]
  },
  "html_parse_find_a_href_starts_with": {
   "async": false,
   "identifiers": [
    "list_filter_starts_with",
    "list_map_property",
    "html_parse_href_text_map",
    "html_parse_find_list_to",
    "html_parse_find_a_href_starts_with",
    "root",
    "d",
    "book_code",
    "list",
    "mapped",
    "mapped2",
    "filtered"
   ]
  },
  "html_parse_find_list_href_text": {
   "async": false,
   "identifiers": [
    "marker",
    "html_parse_href_text_map",
    "html_parse_find_list_to",
    "html_parse_find_list_href_text",
    "bl",
    "selector",
    "d",
    "list",
    "mapped"
   ]
  },
  "html_parse_find_list_to": {
   "async": false,
   "identifiers": [
    "html_parse_list_to",
    "html_parse_find",
    "html_parse_find_list_to",
    "bl",
    "selector",
    "query",
    "list"
   ]
  },
  "html_parse_find_remove": {
   "async": false,
   "identifiers": [
    "html_parse_find",
    "html_parse_find_remove",
    "main",
    "selector",
    "result",
    "remove"
   ]
  },
  "html_parse_href": {
   "async": false,
   "identifiers": [
    "html_parse_attr",
    "marker",
    "html_parse_href",
    "d",
    "item",
    "name",
    "href"
   ]
  },
  "html_parse_href_text": {
   "async": false,
   "identifiers": [
    "html_parse_href",
    "html_parse_text",
    "html_parse_href_text",
    "d",
    "item",
    "text",
    "href",
    "both"
   ]
  },
  "html_parse_href_text_map": {
   "async": false,
   "identifiers": [
    "list_map",
    "html_parse_href_text",
    "html_parse_href_text_map",
    "d",
    "list",
    "lambda",
    "item",
    "both",
    "mapped"
   ]
  },
  "html_parse_list_to": {
   "async": false,
   "identifiers": [
    "html_parse_list_to",
    "query",
    "v",
    "get"
   ]
  },
  "html_parse_read": {
   "async": true,
   "identifiers": [
    "html_parse",
    "file_read",
    "html_parse_read",
    "file_path",
    "contents",
    "parsed"
   ]
  },
  "html_parse_text": {
   "async": false,
   "identifiers": [
    "html_parse_text",
    "d",
    "item",
    "text"
   ]
  },
  "html_p_text": {
   "async": false,
   "identifiers": [
    "html_text_set",
    "html_p",
    "html_p_text",
    "root",
    "text",
    "p"
   ]
  },
  "html_p_text_multiple": {
   "async": false,
   "identifiers": [
    "each",
    "html_p_text",
    "html_p_text_multiple",
    "parent",
    "list",
    "lambda2",
    "item"
   ]
  },
  "html_remove": {
   "async": false,
   "identifiers": [
    "marker",
    "html_component_element_get",
    "html_remove",
    "component",
    "element",
    "remove"
   ]
  },
  "html_style_assign": {
   "async": false,
   "identifiers": [
    "object_assign",
    "marker",
    "html_component_element_get",
    "html_style_assign",
    "b",
    "s",
    "b_element",
    "style"
   ]
  },
  "html_style_font_size": {
   "async": false,
   "identifiers": [
    "html_style_set",
    "html_style_font_size",
    "html",
    "value"
   ]
  },
  "html_style_remove": {
   "async": false,
   "identifiers": [
    "marker",
    "html_component_element_get",
    "html_style_remove",
    "b",
    "style_key",
    "b_element",
    "style",
    "removeProperty"
   ]
  },
  "html_style_set": {
   "async": false,
   "identifiers": [
    "html_component_element_get",
    "html_style_set",
    "b",
    "style_key",
    "style_value",
    "b_element",
    "style"
   ]
  },
  "html_style_set_or_remove": {
   "async": false,
   "identifiers": [
    "html_style_remove",
    "html_style_set",
    "html_style_set_or_remove",
    "condition",
    "component",
    "style_key",
    "style_value"
   ]
  },
  "html_text_set": {
   "async": false,
   "identifiers": [
    "html_component_element_get",
    "html_text_set",
    "component",
    "text",
    "element",
    "innerHTML"
   ]
  },
  "html_text_set_if": {
   "async": false,
   "identifiers": [
    "html_text_set",
    "ternary",
    "html_text_set_if",
    "condition",
    "on_true",
    "on_false",
    "component",
    "label_rules_text"
   ]
  },
  "html_update": {
   "async": true,
   "identifiers": [
    "html_update_dev",
    "html_update_public",
    "html_update",
    "name"
   ]
  },
  "html_update_dev": {
   "async": true,
   "identifiers": [
    "app_name_main",
    "folder_previous",
    "folder_src",
    "html_name_to_path_dev",
    "html_update_generic",
    "marker",
    "html_update_dev",
    "name",
    "file_path",
    "paths_get",
    "f_name_ext",
    "src",
    "previous",
    "from_paths"
   ]
  },
  "html_update_generic": {
   "async": true,
   "identifiers": [
    "file_open",
    "html_overwrite",
    "js_code_import_single",
    "folder_current_join_code",
    "path_join",
    "function_name_to_base",
    "js_code_call_statement",
    "html_update_generic",
    "name",
    "file_path",
    "lambda$f_name_ext",
    "lambda$fn_get",
    "name_prefixed",
    "call",
    "f_name_ext",
    "from_paths",
    "f_path",
    "from",
    "code",
    "body"
   ]
  },
  "html_update_public": {
   "async": true,
   "identifiers": [
    "app_name_prefixed",
    "folder_src",
    "html_update_generic",
    "marker",
    "html_name_to_path",
    "html_update_public",
    "name",
    "file_path",
    "paths_get",
    "f_name_ext",
    "src",
    "from_paths"
   ]
  },
  "http": {
   "async": true,
   "identifiers": [
    "http_sleep",
    "html_loading",
    "catch_call",
    "promise_wrap",
    "round",
    "string_starts_with",
    "browser_is",
    "error",
    "not",
    "assert_json",
    "http",
    "url",
    "b",
    "lambda3",
    "response",
    "fetch",
    "ok",
    "buf",
    "arrayBuffer",
    "v",
    "h",
    "sw",
    "buffer",
    "lambda",
    "resolve",
    "reject",
    "lambda2",
    "res",
    "chunks",
    "on_data",
    "chunk",
    "v2",
    "push",
    "result",
    "on",
    "on_end",
    "statusCode",
    "d",
    "rounded",
    "v3",
    "Buffer",
    "concat",
    "result2",
    "get"
   ]
  },
  "http_firebase": {
   "async": true,
   "identifiers": [
    "firebase_storage_download",
    "firebase_upload_buffer",
    "cache_generic",
    "http_firebase_file_path",
    "firebase_storage_exists",
    "http",
    "http_firebase",
    "url",
    "key_get",
    "cached_exists",
    "cached_get",
    "value_get",
    "cache_save",
    "key",
    "value",
    "result"
   ]
  },
  "http_firebase_file_name": {
   "async": false,
   "identifiers": [
    "string_base64_to",
    "http_firebase_file_name",
    "url",
    "safe"
   ]
  },
  "http_firebase_file_path": {
   "async": false,
   "identifiers": [
    "http_firebase_file_name",
    "marker",
    "firebase_path_fix",
    "path_join",
    "http_firebase_file_path",
    "url",
    "file_name",
    "joined"
   ]
  },
  "http_json": {
   "async": true,
   "identifiers": [
    "buffer_string_to",
    "json_from",
    "http",
    "marker",
    "http_json",
    "url",
    "buffer",
    "text",
    "parsed"
   ]
  },
  "http_local": {
   "async": true,
   "identifiers": [
    "file_write_buffer",
    "file_read_buffer",
    "file_exists",
    "http_local_file_name",
    "http_firebase",
    "marker",
    "cache_generic",
    "http_local",
    "url",
    "key_get",
    "cached_exists",
    "cached_get",
    "value_get",
    "cache_save",
    "result"
   ]
  },
  "http_local_file_name": {
   "async": false,
   "identifiers": [
    "local_function_path",
    "http_firebase_file_name",
    "http_local",
    "http_local_file_name",
    "url",
    "file_name",
    "fn",
    "joined"
   ]
  },
  "http_local_text": {
   "async": true,
   "identifiers": [
    "buffer_string_to",
    "http_local",
    "marker",
    "http_local_text",
    "url",
    "buffer",
    "text"
   ]
  },
  "http_sleep": {
   "async": true,
   "identifiers": [
    "integer_random",
    "sleep",
    "http_sleep"
   ]
  },
  "identity": {
   "async": false,
   "identifiers": [
    "identity",
    "a"
   ]
  },
  "import_install": {
   "async": true,
   "identifiers": [
    "npm_install",
    "import_install",
    "name",
    "v",
    "err",
    "code",
    "v2"
   ]
  },
  "integer_is": {
   "async": false,
   "identifiers": [
    "marker",
    "integer_is",
    "value",
    "ii",
    "Number",
    "isInteger"
   ]
  },
  "integer_is_assert": {
   "async": false,
   "identifiers": [
    "assert_json",
    "integer_is",
    "integer_is_assert",
    "index",
    "ii"
   ]
  },
  "integer_random": {
   "async": false,
   "identifiers": [
    "random",
    "floor",
    "integer_random",
    "min",
    "max",
    "r"
   ]
  },
  "integer_to": {
   "async": false,
   "identifiers": [
    "integer_to",
    "input",
    "i",
    "parseInt",
    "Number",
    "isNaN",
    "v"
   ]
  },
  "json_format_to": {
   "async": false,
   "identifiers": [
    "json_format_to",
    "object",
    "v",
    "JSON",
    "stringify"
   ]
  },
  "json_from": {
   "async": false,
   "identifiers": [
    "json_from",
    "json",
    "v",
    "JSON",
    "parse"
   ]
  },
  "json_to": {
   "async": false,
   "identifiers": [
    "json_to",
    "object",
    "v",
    "JSON",
    "stringify"
   ]
  },
  "js_arrow_blockify": {
   "async": true,
   "identifiers": [
    "js_if_blockify_generic",
    "js_arrow_blockify",
    "ast",
    "type",
    "property_name"
   ]
  },
  "js_arrow_to_function": {
   "async": false,
   "identifiers": [
    "object_property_set",
    "js_visit_type",
    "js_arrow_to_function",
    "ast",
    "lambda",
    "v",
    "node"
   ]
  },
  "js_assert_arguments_args": {
   "async": false,
   "identifiers": [
    "list_replace_all",
    "list_size",
    "js_declaration_params_get",
    "js_declaration_single",
    "js_keyword_arguments",
    "js_parse_expression",
    "assert_arguments",
    "js_visit_calls_named",
    "js_assert_arguments_args",
    "ast",
    "declaration",
    "params",
    "size",
    "lambda2",
    "args",
    "code_expression",
    "args_expression",
    "size_expression",
    "args_new",
    "name"
   ]
  },
  "js_assign_combine": {
   "async": false,
   "identifiers": [
    "js_identifiers_named_count",
    "list_not_is",
    "js_identifier_not_is",
    "list_next_try",
    "list_remove",
    "object_property_set",
    "equal",
    "js_node_type_not_is",
    "object_property_get",
    "null_is",
    "list_get_end_1",
    "js_declare_single",
    "js_visit_type",
    "js_assign_combine",
    "ast",
    "lambda",
    "v",
    "node",
    "stack",
    "declaration",
    "e1",
    "nl",
    "next",
    "declaration2",
    "init2",
    "nti",
    "name2",
    "id",
    "nti2",
    "name",
    "count",
    "init"
   ]
  },
  "js_atomize": {
   "async": true,
   "identifiers": [
    "list_get_end_1",
    "js_node_atomize",
    "each_async",
    "js_type",
    "list_is",
    "js_identifiers_names",
    "js_atomize",
    "ast",
    "existing",
    "ces",
    "lambda",
    "v",
    "stack",
    "stack1"
   ]
  },
  "js_atomize_function": {
   "async": true,
   "identifiers": [
    "js_block_insert",
    "js_declaration_name",
    "list_get_end_2",
    "list_get_end_1",
    "each_async",
    "object_copy",
    "js_type",
    "marker",
    "list_is",
    "object_replace",
    "js_parse_expression",
    "js_node_type_is",
    "js_atomize_function",
    "ast",
    "fes",
    "lambda",
    "v",
    "stack",
    "stack1",
    "stack2",
    "type_is",
    "node",
    "name",
    "copy",
    "expression"
   ]
  },
  "js_auto": {
   "async": true,
   "identifiers": [
    "js_auto_transforms",
    "each_async",
    "js_auto",
    "ast",
    "transforms",
    "lambda",
    "t"
   ]
  },
  "js_auto_transforms": {
   "async": false,
   "identifiers": [
    "js_assert_arguments_args",
    "js_assign_combine",
    "js_atomize",
    "js_outside_move",
    "js_dollar",
    "js_call_fill",
    "js_return_atomize",
    "js_atomize_function",
    "js_if_else_if_combine",
    "js_declare_assign_null",
    "js_let_add",
    "js_function_id_add",
    "js_arrow_to_function",
    "js_if_blockify",
    "js_arrow_blockify",
    "js_await_add",
    "js_bang_to_not",
    "marker",
    "js_auto_transforms",
    "transforms"
   ]
  },
  "js_auto_transform_new": {
   "async": true,
   "identifiers": [
    "js_auto_transform_new_inner",
    "function_new_js",
    "js_auto_transform_new",
    "f_name_unprefixed"
   ]
  },
  "js_auto_transform_new_inner": {
   "async": true,
   "identifiers": [
    "js_declaration_single_block_body_add_return",
    "function_open",
    "js_auto_transforms",
    "function_transform_marker_specified",
    "js_imports_missing_add",
    "list_add",
    "js_parse_expression",
    "marker_next_declare_single_init_elements",
    "marker",
    "function_new_js_name",
    "js_auto_transform_new_inner",
    "f_name_unprefixed",
    "combined",
    "lambda",
    "a",
    "elements",
    "expression",
    "ast",
    "code",
    "name"
   ]
  },
  "js_await": {
   "async": false,
   "identifiers": [
    "object_property_set",
    "js_parse_expression",
    "js_code_await",
    "js_await",
    "expression",
    "code_expression",
    "awaited"
   ]
  },
  "js_await_add": {
   "async": true,
   "identifiers": [
    "data_functions_get",
    "js_await_add_inner",
    "js_await_add",
    "ast",
    "functions",
    "visited",
    "v2"
   ]
  },
  "js_await_add_inner": {
   "async": true,
   "identifiers": [
    "js_visit_type_each_async",
    "js_call_function_if",
    "js_node_type_not_is_if",
    "object_replace",
    "js_await",
    "object_copy",
    "list_get_end_1",
    "js_function_last_asyncify",
    "marker",
    "not",
    "object_property_exists_not",
    "object_property_get",
    "js_await_add_inner",
    "functions",
    "ast",
    "visited",
    "lambda",
    "v",
    "node",
    "lambda3",
    "name",
    "en",
    "f",
    "async_is",
    "n",
    "stack",
    "stack1",
    "lambda4",
    "copy",
    "awaited"
   ]
  },
  "js_await_add_task_simple": {
   "async": false,
   "identifiers": [
    "todo",
    "js_await_add_task_simple"
   ]
  },
  "js_await_wrap": {
   "async": false,
   "identifiers": [
    "object_property_set",
    "js_parse_expression",
    "js_code_await",
    "js_await_wrap",
    "expression",
    "code_expression",
    "awaited"
   ]
  },
  "js_bang_to_not": {
   "async": false,
   "identifiers": [
    "js_declaration_single_name",
    "object_replace",
    "object_copy",
    "js_parse_expression",
    "not",
    "js_code_call",
    "object_property_get",
    "equal",
    "js_visit_type",
    "marker",
    "list_add",
    "js_bang_to_not",
    "ast",
    "name",
    "lambda",
    "v",
    "node",
    "operator",
    "argument",
    "copy",
    "code",
    "expression",
    "arguments2"
   ]
  },
  "js_block_child_graph": {
   "async": false,
   "identifiers": [
    "log_unparse_try",
    "list_includes",
    "null_not_is",
    "list_adder",
    "js_stack_last",
    "each",
    "js_visitors",
    "marker",
    "js_block_child_graph",
    "ast",
    "lambda2",
    "la",
    "lambda",
    "v",
    "node",
    "right",
    "stack",
    "left",
    "nn",
    "body",
    "includes",
    "vs",
    "edges"
   ]
  },
  "js_block_child_graph_unparse": {
   "async": true,
   "identifiers": [
    "js_block_child_graph",
    "list_map_unordered_async",
    "js_unparse",
    "marker",
    "js_block_child_graph_unparse",
    "ast",
    "edges",
    "a",
    "lambda",
    "edge",
    "waited",
    "mapped"
   ]
  },
  "js_block_insert": {
   "async": false,
   "identifiers": [
    "list_insert",
    "list_index_of",
    "list_next",
    "js_stack_last",
    "js_block_insert",
    "stack",
    "inserted",
    "block",
    "block_body",
    "block_body_item",
    "block_body_item_index"
   ]
  },
  "js_calls_to_each": {
   "async": false,
   "identifiers": [
    "js_parse_expression",
    "js_code_brackets_empty",
    "js_call_new",
    "not",
    "js_call_callee_name",
    "equal_by",
    "js_node_type_not_is",
    "js_statement_expression_get",
    "null_is",
    "list_next_try",
    "list_get_end_1",
    "object_property_get",
    "js_node_type_is_if",
    "js_visit_type",
    "each_async",
    "js_unparse",
    "js_calls_to_each",
    "ast",
    "call_name",
    "lambda",
    "v",
    "node",
    "stack",
    "expression",
    "async_is",
    "call",
    "lambda3",
    "e1",
    "next",
    "nti",
    "expression2",
    "call2",
    "name",
    "n",
    "lambda6",
    "c",
    "jin2",
    "callee",
    "code",
    "eq",
    "parsed",
    "expression3",
    "arguments2",
    "code2",
    "array_expression",
    "elements",
    "d",
    "a",
    "b"
   ]
  },
  "js_calls_to_each_task_simple": {
   "async": false,
   "identifiers": [
    "todo",
    "js_calls_to_each_task_simple"
   ]
  },
  "js_call_callee_name": {
   "async": false,
   "identifiers": [
    "js_node_type_not_is",
    "js_identifier_not_is",
    "object_property_get_name",
    "object_property_get",
    "js_call_callee_name",
    "expression",
    "name",
    "jin2",
    "callee",
    "jin"
   ]
  },
  "js_call_fill": {
   "async": true,
   "identifiers": [
    "data_functions_get",
    "js_function_last_asyncify",
    "function_name_unalias",
    "js_visit_type_each_async",
    "functions_names_includes",
    "js_call_new",
    "js_identifier_is",
    "object_replace",
    "js_call_fill",
    "ast",
    "functions",
    "visited",
    "lambda",
    "v",
    "node",
    "stack",
    "expression",
    "name",
    "unaliased",
    "valid",
    "parsed",
    "async_is"
   ]
  },
  "js_call_function_if": {
   "async": true,
   "identifiers": [
    "functions_names_includes",
    "js_node_type_is",
    "js_call_function_if",
    "node",
    "lambda$name",
    "callee",
    "name",
    "valid"
   ]
  },
  "js_call_insert": {
   "async": false,
   "identifiers": [
    "js_code_call_args",
    "list_insert",
    "js_parse_statement",
    "js_call_insert",
    "f_name",
    "args_code",
    "list",
    "index",
    "code",
    "parsed"
   ]
  },
  "js_call_new": {
   "async": true,
   "identifiers": [
    "js_call_new_code",
    "js_code_let_assign",
    "js_parse_statement",
    "object_property_get",
    "js_identifier_unique",
    "js_call_new",
    "f_name_call",
    "ast",
    "code",
    "return_name",
    "existing",
    "declaration",
    "unique",
    "parsed",
    "v",
    "async_is"
   ]
  },
  "js_call_new_code": {
   "async": true,
   "identifiers": [
    "js_return_name",
    "js_code_call_args_await_maybe",
    "list_map_unordered_async",
    "js_unparse",
    "each",
    "js_declaration_param_add",
    "js_parse_statement_module",
    "js_code_declaration",
    "object_property_get",
    "list_slice",
    "list_size",
    "list_first",
    "string_split",
    "js_identifier_unique",
    "js_declaration_params_names",
    "js_identifiers_names",
    "function_parse_declaration",
    "js_call_new_code",
    "f_name_call",
    "ast",
    "declaration",
    "unaliased",
    "ast_call",
    "existing",
    "arg_names",
    "lambda3",
    "arg_name",
    "arg_code",
    "split",
    "lambda",
    "skip_count",
    "b",
    "remaining",
    "lamda_name",
    "async_is",
    "code",
    "declaration_lambda",
    "lambda2",
    "p",
    "unique",
    "args_code",
    "return_name",
    "v"
   ]
  },
  "js_call_new_expression": {
   "async": true,
   "identifiers": [
    "js_parse_expression",
    "js_call_new_code",
    "js_call_new_expression",
    "f_name",
    "ast",
    "code",
    "expression"
   ]
  },
  "js_code_arrow": {
   "async": false,
   "identifiers": [
    "js_code_braces_empty",
    "js_code_parenthesis_open_close",
    "js_code_arrow",
    "oc",
    "code"
   ]
  },
  "js_code_assign": {
   "async": false,
   "identifiers": [
    "js_code_assign",
    "left",
    "right",
    "code"
   ]
  },
  "js_code_await": {
   "async": false,
   "identifiers": [
    "js_keyword_await",
    "js_code_await",
    "code",
    "v"
   ]
  },
  "js_code_braces_empty": {
   "async": false,
   "identifiers": [
    "js_code_wrap_braces",
    "js_code_braces_empty",
    "v"
   ]
  },
  "js_code_brackets_empty": {
   "async": false,
   "identifiers": [
    "js_code_wrap_brackets",
    "marker",
    "js_code_brackets_empty",
    "code"
   ]
  },
  "js_code_call": {
   "async": false,
   "identifiers": [
    "js_code_call_args",
    "js_code_call",
    "fn_name",
    "args",
    "result"
   ]
  },
  "js_code_call_args": {
   "async": false,
   "identifiers": [
    "js_code_wrap_parenthesis",
    "list_join_comma_space",
    "js_code_call_args",
    "fn_name",
    "args",
    "joined",
    "v"
   ]
  },
  "js_code_call_args_await_maybe": {
   "async": false,
   "identifiers": [
    "js_code_await",
    "object_property_get",
    "js_code_call_args",
    "js_code_call_args_await_maybe",
    "unaliased",
    "args_code",
    "declaration",
    "code"
   ]
  },
  "js_code_call_statement": {
   "async": false,
   "identifiers": [
    "js_code_call",
    "js_code_statement",
    "js_code_call_statement",
    "f_name",
    "code",
    "result"
   ]
  },
  "js_code_declaration": {
   "async": false,
   "identifiers": [
    "js_code_declaration_args",
    "js_code_declaration",
    "f_name",
    "inside",
    "async_is",
    "args",
    "code"
   ]
  },
  "js_code_declaration_args": {
   "async": false,
   "identifiers": [
    "js_code_wrap_braces",
    "js_code_call_args",
    "js_keyword_function",
    "js_code_declaration_args",
    "async_is",
    "f_name",
    "args",
    "inside",
    "prefix",
    "code"
   ]
  },
  "js_code_dot": {
   "async": false,
   "identifiers": [
    "string_dot",
    "marker",
    "js_code_dot",
    "left",
    "right",
    "code"
   ]
  },
  "js_code_export": {
   "async": false,
   "identifiers": [
    "js_code_export",
    "code_declaration",
    "v"
   ]
  },
  "js_code_import_single": {
   "async": false,
   "identifiers": [
    "js_keyword_from",
    "js_code_wrap_braces",
    "js_keyword_import",
    "js_code_import_single",
    "import_",
    "from",
    "v"
   ]
  },
  "js_code_let_assign": {
   "async": false,
   "identifiers": [
    "js_code_assign",
    "js_keyword_let",
    "js_code_let_assign",
    "left",
    "right",
    "v"
   ]
  },
  "js_code_or": {
   "async": false,
   "identifiers": [
    "js_operator_or",
    "js_code_or",
    "left",
    "right",
    "v2"
   ]
  },
  "js_code_parenthesis_open_close": {
   "async": false,
   "identifiers": [
    "js_code_wrap_parenthesis",
    "js_code_parenthesis_open_close",
    "result"
   ]
  },
  "js_code_return": {
   "async": false,
   "identifiers": [
    "js_code_return",
    "code",
    "v"
   ]
  },
  "js_code_return_empty": {
   "async": false,
   "identifiers": [
    "js_code_return",
    "js_code_return_empty",
    "v"
   ]
  },
  "js_code_statement": {
   "async": false,
   "identifiers": [
    "js_code_statement",
    "code",
    "v"
   ]
  },
  "js_code_string": {
   "async": false,
   "identifiers": [
    "js_string",
    "js_unparse",
    "js_code_string",
    "value_string",
    "parsed_string",
    "code_string"
   ]
  },
  "js_code_wrap_braces": {
   "async": false,
   "identifiers": [
    "js_code_wrap_braces",
    "inside",
    "v"
   ]
  },
  "js_code_wrap_brackets": {
   "async": false,
   "identifiers": [
    "marker",
    "js_code_wrap_brackets",
    "inside",
    "code"
   ]
  },
  "js_code_wrap_parenthesis": {
   "async": false,
   "identifiers": [
    "js_code_wrap_parenthesis",
    "inside",
    "v"
   ]
  },
  "js_declaration_asyncify": {
   "async": false,
   "identifiers": [
    "object_property_get",
    "object_property_set",
    "js_declaration_asyncify",
    "declaration",
    "other",
    "value"
   ]
  },
  "js_declaration_name": {
   "async": false,
   "identifiers": [
    "object_property_get",
    "js_declaration_name",
    "declaration",
    "declaration_id",
    "name"
   ]
  },
  "js_declaration_params_get": {
   "async": false,
   "identifiers": [
    "js_declaration_params_get",
    "declaration",
    "params"
   ]
  },
  "js_declaration_params_names": {
   "async": false,
   "identifiers": [
    "list_map_squash",
    "js_declaration_params_get",
    "js_identifiers_to_names",
    "js_declaration_params_names_node",
    "js_declaration_params_names",
    "declaration",
    "params",
    "params_names"
   ]
  },
  "js_declaration_params_names_node": {
   "async": false,
   "identifiers": [
    "list_map_squash",
    "error",
    "js_node_type_is",
    "object_property_get",
    "js_identifier_is",
    "json_format_to",
    "js_declaration_params_names_node",
    "node",
    "names",
    "ii",
    "name",
    "type_is",
    "properties",
    "value",
    "message"
   ]
  },
  "js_declaration_param_add": {
   "async": false,
   "identifiers": [
    "js_declaration_param_add_node",
    "js_parse_expression",
    "js_declaration_param_add",
    "declaration",
    "param_name",
    "item"
   ]
  },
  "js_declaration_param_add_node": {
   "async": false,
   "identifiers": [
    "list_add",
    "js_declaration_params_get",
    "marker",
    "js_declaration_param_add_node",
    "declaration",
    "item",
    "params"
   ]
  },
  "js_declaration_param_named": {
   "async": false,
   "identifiers": [
    "list_find_property",
    "js_declaration_param_named",
    "declaration",
    "param_name",
    "params",
    "result"
   ]
  },
  "js_declaration_single": {
   "async": false,
   "identifiers": [
    "list_adder",
    "list_single",
    "js_visit_type",
    "js_declaration_single",
    "ast",
    "lambda2",
    "la",
    "lambda",
    "v",
    "node",
    "nameds",
    "named",
    "declaration"
   ]
  },
  "js_declaration_single_block_body": {
   "async": false,
   "identifiers": [
    "marker",
    "js_declaration_to_block_body",
    "js_declaration_single",
    "js_declaration_single_block_body",
    "ast",
    "declaration",
    "body_block"
   ]
  },
  "js_declaration_single_block_body_add_return": {
   "async": false,
   "identifiers": [
    "js_statement_return_empty_add",
    "js_declaration_single_block_body",
    "js_declaration_single_block_body_add_return",
    "ast",
    "body_block"
   ]
  },
  "js_declaration_single_name": {
   "async": false,
   "identifiers": [
    "js_declaration_name",
    "js_declaration_single",
    "js_declaration_single_name",
    "ast",
    "declaration",
    "name"
   ]
  },
  "js_declaration_single_params_add": {
   "async": false,
   "identifiers": [
    "js_declaration_param_add",
    "each",
    "js_declaration_single",
    "js_declaration_single_params_add",
    "ast",
    "param_names",
    "declaration",
    "lambda",
    "param_name",
    "v"
   ]
  },
  "js_declaration_to_block_body": {
   "async": false,
   "identifiers": [
    "js_declaration_to_block_body",
    "declaration",
    "body",
    "block",
    "body_block"
   ]
  },
  "js_declare": {
   "async": false,
   "identifiers": [
    "js_declare_init_set",
    "js_parse_statement",
    "js_code_let_assign",
    "js_declare",
    "name",
    "init",
    "assign_code",
    "assign"
   ]
  },
  "js_declare_assign": {
   "async": false,
   "identifiers": [
    "js_visit_type",
    "object_property_set",
    "js_node_type_not_is",
    "list_get_end",
    "js_declare_assign",
    "ast",
    "lambda",
    "lambda2",
    "v",
    "node",
    "stack",
    "init",
    "stack3",
    "n",
    "value"
   ]
  },
  "js_declare_assign_null": {
   "async": false,
   "identifiers": [
    "js_null",
    "js_declare_assign",
    "js_declare_assign_null",
    "ast",
    "lambda",
    "value"
   ]
  },
  "js_declare_init_set": {
   "async": false,
   "identifiers": [
    "js_declare_single",
    "object_property_set",
    "js_declare_init_set",
    "vd",
    "init",
    "declarators"
   ]
  },
  "js_declare_single": {
   "async": false,
   "identifiers": [
    "list_size_1",
    "not",
    "list_single",
    "js_node_type_is",
    "js_declare_single",
    "vd",
    "b",
    "declaration",
    "declarations",
    "s1"
   ]
  },
  "js_declare_single_init": {
   "async": false,
   "identifiers": [
    "object_property_get",
    "js_declare_single",
    "js_declare_single_init",
    "next",
    "declarator",
    "init"
   ]
  },
  "js_dollar": {
   "async": true,
   "identifiers": [
    "marker",
    "js_dollar_choices",
    "list_get_end_3",
    "lambda_invoke_multiple",
    "list_get_end_2",
    "list_first_second",
    "list_skip",
    "string_empty_not_is",
    "string_split",
    "object_property_get",
    "js_visit_type_each_async",
    "list_get_end_1",
    "each_async",
    "js_dollar",
    "ast",
    "choices",
    "afters",
    "lambda",
    "v",
    "lambda2",
    "c",
    "name",
    "choice_name",
    "fn",
    "node",
    "stack",
    "stack1",
    "stack2",
    "stack3",
    "separator",
    "split",
    "first",
    "second",
    "ne",
    "remaining",
    "a"
   ]
  },
  "js_dollar_a": {
   "async": false,
   "identifiers": [
    "list_remove_multiple",
    "list_first",
    "integer_to",
    "list_size_1",
    "marker",
    "js_dollar_a_generic",
    "each",
    "object_replace",
    "object_copy",
    "js_identifiers_named",
    "js_dollar_a",
    "stack1",
    "stack2",
    "ast",
    "afters",
    "remaining",
    "count",
    "s1",
    "first",
    "lambda",
    "next",
    "declarations",
    "lambda2",
    "declaration",
    "id",
    "init",
    "name",
    "is",
    "lambda3",
    "item",
    "replacement"
   ]
  },
  "js_dollar_aa": {
   "async": false,
   "identifiers": [
    "list_remove",
    "js_code_call",
    "assert_arguments",
    "list_add_first",
    "js_declaration_single_block_body",
    "marker",
    "js_parse_statement",
    "js_dollar_aa",
    "remaining",
    "node",
    "stack1",
    "stack2",
    "stack3",
    "ast",
    "afters",
    "body_block",
    "code",
    "name",
    "expression"
   ]
  },
  "js_dollar_a_generic": {
   "async": false,
   "identifiers": [
    "each_range",
    "list_add",
    "list_next",
    "list_is",
    "js_node_type_is",
    "js_dollar_a_generic",
    "stack1",
    "stack2",
    "afters",
    "lambda",
    "ast",
    "count",
    "l",
    "next",
    "lambda3",
    "type_is",
    "declarations",
    "after"
   ]
  },
  "js_dollar_choices": {
   "async": false,
   "identifiers": [
    "js_dollar_aa",
    "js_dollar_ine",
    "js_dollar_ib",
    "js_dollar_l",
    "js_dollar_ir",
    "js_dollar_ien",
    "marker",
    "js_dollar_f",
    "js_dollar_s",
    "js_dollar_g",
    "js_dollar_a",
    "js_dollar_rf",
    "js_dollar_rt",
    "js_dollar_r",
    "js_dollar_ie",
    "js_dollar_i",
    "js_dollar_x",
    "js_dollar_choices",
    "choices",
    "name",
    "fn"
   ]
  },
  "js_dollar_choice_arguments": {
   "async": true,
   "identifiers": [
    "js_dollar",
    "function_transform_marker_specified",
    "marker_next_declare_single_init",
    "js_dollar_choice_arguments",
    "result",
    "lambda",
    "a",
    "code2",
    "name"
   ]
  },
  "js_dollar_choice_arguments_names": {
   "async": true,
   "identifiers": [
    "js_dollar_choice_arguments",
    "marker",
    "js_identifiers_to_names",
    "list_map_property",
    "js_dollar_choice_arguments_names",
    "oe",
    "properties",
    "mapped",
    "names"
   ]
  },
  "js_dollar_f": {
   "async": false,
   "identifiers": [
    "list_add",
    "js_code_arrow",
    "object_replace",
    "js_parse_expression",
    "js_dollar_f",
    "node",
    "afters",
    "code",
    "parsed",
    "lambda"
   ]
  },
  "js_dollar_g": {
   "async": true,
   "identifiers": [
    "each_reverse",
    "list_size_1_assert",
    "list_first_remaining",
    "list_add",
    "js_declare",
    "js_identifier_unique_ast",
    "js_node_type_is",
    "object_replace",
    "js_parse_expression",
    "object_property_get",
    "js_code_call_args",
    "js_code_string",
    "list_insert",
    "list_remove",
    "list_index_of_next_outside",
    "js_dollar_g",
    "remaining",
    "node",
    "stack1",
    "stack2",
    "ast",
    "afters",
    "first",
    "object_name",
    "property_names",
    "lambda2",
    "property_name",
    "code_string",
    "code",
    "name",
    "parsed",
    "unique",
    "assign",
    "index",
    "lambda"
   ]
  },
  "js_dollar_i": {
   "async": false,
   "identifiers": [
    "marker",
    "js_keyword_false",
    "object_replace",
    "js_code_braces_empty",
    "js_code_wrap_parenthesis",
    "js_keyword_if",
    "js_parse_statement",
    "js_dollar_i",
    "stack1",
    "inside",
    "from"
   ]
  },
  "js_dollar_ib": {
   "async": true,
   "identifiers": [
    "js_dollar_if_call",
    "browser_is",
    "js_dollar_ib",
    "stack1",
    "ast",
    "fn"
   ]
  },
  "js_dollar_ie": {
   "async": true,
   "identifiers": [
    "js_dollar_if_call",
    "equal",
    "js_dollar_ie",
    "stack1",
    "ast",
    "fn"
   ]
  },
  "js_dollar_ien": {
   "async": true,
   "identifiers": [
    "js_dollar_ien_generic",
    "null_is",
    "js_dollar_ien",
    "remaining",
    "node",
    "stack1",
    "stack2",
    "stack3",
    "ast",
    "afters",
    "fn"
   ]
  },
  "js_dollar_ien_generic": {
   "async": true,
   "identifiers": [
    "object_property_set",
    "js_call_new_expression",
    "js_dollar_i",
    "js_dollar_ien_generic",
    "stack1",
    "fn",
    "ast",
    "expression",
    "name"
   ]
  },
  "js_dollar_if_call": {
   "async": true,
   "identifiers": [
    "object_property_set",
    "js_call_new_expression",
    "js_dollar_i",
    "js_dollar_if_call",
    "stack1",
    "fn",
    "ast",
    "expression",
    "name"
   ]
  },
  "js_dollar_ine": {
   "async": true,
   "identifiers": [
    "js_dollar_ien_generic",
    "equal_not",
    "js_dollar_ine",
    "remaining",
    "node",
    "stack1",
    "stack2",
    "stack3",
    "ast",
    "afters",
    "fn"
   ]
  },
  "js_dollar_ir": {
   "async": false,
   "identifiers": [
    "js_statement_return_empty_add",
    "object_property_get",
    "js_dollar_i",
    "marker",
    "js_dollar_ir",
    "remaining",
    "node",
    "stack1",
    "stack2",
    "stack3",
    "ast",
    "afters",
    "consequent",
    "body_block"
   ]
  },
  "js_dollar_l": {
   "async": false,
   "identifiers": [
    "marker",
    "js_dollar_l",
    "remaining",
    "node",
    "stack1",
    "stack2",
    "stack3",
    "ast",
    "afters"
   ]
  },
  "js_dollar_new": {
   "async": true,
   "identifiers": [
    "js_declaration_single_block_body_add_return",
    "marker_next_declare_single_init_elements",
    "js_dollar_new_args_inner",
    "js_dollar_new_name",
    "function_new",
    "js_imports_missing_add",
    "function_transform",
    "list_add",
    "js_code_string",
    "js_property_parse_expression_add",
    "js_dollar_choices",
    "function_transform_marker_specified",
    "marker",
    "js_dollar_new",
    "code",
    "combined",
    "lambda2",
    "ast",
    "lambda",
    "a",
    "elements",
    "oe",
    "type",
    "properties",
    "code_string",
    "code2",
    "name"
   ]
  },
  "js_dollar_new_args": {
   "async": true,
   "identifiers": [
    "js_dollar_new_args_inner",
    "function_transform",
    "js_dollar_new_name",
    "marker",
    "js_dollar_new_args",
    "code",
    "combined"
   ]
  },
  "js_dollar_new_args_inner": {
   "async": true,
   "identifiers": [
    "js_declaration_param_add_node",
    "js_declaration_single",
    "js_dollar_choice_arguments",
    "js_dollar_new_args_inner",
    "ast",
    "names",
    "declaration"
   ]
  },
  "js_dollar_new_name": {
   "async": false,
   "identifiers": [
    "js_dollar",
    "function_name_combine",
    "js_dollar_new_name",
    "code",
    "combined2",
    "name"
   ]
  },
  "js_dollar_r": {
   "async": false,
   "identifiers": [
    "js_return_empty",
    "object_property_set",
    "list_second",
    "js_node_type_is",
    "object_replace",
    "js_dollar_r",
    "stack1",
    "stack2",
    "stack3",
    "from",
    "type_is",
    "to",
    "expressions",
    "second"
   ]
  },
  "js_dollar_rf": {
   "async": false,
   "identifiers": [
    "js_return_code_replace",
    "marker",
    "js_dollar_rf",
    "stack1",
    "code"
   ]
  },
  "js_dollar_rt": {
   "async": false,
   "identifiers": [
    "js_return_code_replace",
    "marker",
    "js_dollar_rt",
    "stack1",
    "code"
   ]
  },
  "js_dollar_s": {
   "async": false,
   "identifiers": [
    "null_is",
    "js_node_type_is",
    "js_declare",
    "list_next_index",
    "list_insert",
    "list_add",
    "object_property_get",
    "js_left_right_set",
    "js_code_assign",
    "list_remove",
    "list_size_1",
    "assert",
    "each",
    "object_replace",
    "js_dollar_a_generic",
    "js_parse_statement",
    "js_null",
    "js_dollar_s",
    "stack1",
    "stack2",
    "ast",
    "afters",
    "count",
    "lambda",
    "next",
    "declarations",
    "s1",
    "lambda2",
    "declaration",
    "code",
    "s",
    "expression",
    "id",
    "init",
    "type_is",
    "value",
    "name3",
    "init2",
    "assign",
    "index_next"
   ]
  },
  "js_dollar_task_each_code_own_fn": {
   "async": false,
   "identifiers": [
    "todo",
    "js_dollar_task_each_code_own_fn"
   ]
  },
  "js_dollar_task_if_else_to_generic": {
   "async": false,
   "identifiers": [
    "todo",
    "js_dollar_task_if_else_to_generic"
   ]
  },
  "js_dollar_x": {
   "async": true,
   "identifiers": [
    "list_remove",
    "list_get",
    "list_next_index",
    "list_is",
    "js_expand_generic",
    "marker",
    "js_dollar_x",
    "remaining",
    "node",
    "stack1",
    "stack2",
    "stack3",
    "ast",
    "afters",
    "l",
    "index",
    "next",
    "inserted"
   ]
  },
  "js_expand_generic": {
   "async": true,
   "identifiers": [
    "list_remove_all_multiple",
    "functions_names",
    "list_concat",
    "js_identifier_unique",
    "each",
    "js_unparse",
    "list_map",
    "list_insert",
    "each_reverse",
    "noop",
    "js_return_on",
    "list_add",
    "js_declare",
    "js_declaration_name",
    "list_remove",
    "list_last",
    "js_declaration_to_block_body",
    "js_identifier_replace",
    "each_pair",
    "js_declaration_params_names",
    "list_empty_not_is",
    "list_intersect",
    "js_identifiers_names",
    "function_parse_declaration",
    "js_identifiers_to_names",
    "js_statement_call_get",
    "js_expand_generic",
    "next",
    "stack2",
    "index",
    "ast",
    "inserted",
    "expression",
    "declaration",
    "declaration_call",
    "callee",
    "arguments",
    "arguments2",
    "a_names",
    "name",
    "ast_call",
    "identifiers_call",
    "identifiers",
    "intesection",
    "identifiers_all",
    "f_names",
    "lambda2",
    "i",
    "unique",
    "params_names",
    "lambda3",
    "param_name",
    "a_name",
    "body_block",
    "last",
    "lambda",
    "argument",
    "assign",
    "lambda4",
    "item"
   ]
  },
  "js_format": {
   "async": true,
   "identifiers": [
    "prettier",
    "parserBabel",
    "js_format",
    "code",
    "formatted",
    "format",
    "parser",
    "plugins",
    "braceStyle"
   ]
  },
  "js_function_id_add": {
   "async": false,
   "identifiers": [
    "object_property_get",
    "js_identifier_unique_ast",
    "object_property_set",
    "js_visit_type",
    "js_parse_expression",
    "js_function_id_add",
    "ast",
    "lambda",
    "v",
    "node",
    "id",
    "unique",
    "value"
   ]
  },
  "js_function_last_asyncify": {
   "async": true,
   "identifiers": [
    "list_difference",
    "list_add",
    "js_await_add_inner",
    "js_declaration_name",
    "function_transform",
    "each_async",
    "object_properties",
    "data_identifiers_search",
    "equal",
    "js_declaration_single",
    "marker",
    "not",
    "js_stack_last_function",
    "object_property_set",
    "object_property_get",
    "js_function_last_asyncify",
    "stack",
    "async_is",
    "ast",
    "functions",
    "visited",
    "f",
    "property_name",
    "async",
    "declaration",
    "name",
    "value",
    "result",
    "properties",
    "difference",
    "lambda",
    "f_name",
    "lambda2",
    "v",
    "output"
   ]
  },
  "js_identifiers": {
   "async": false,
   "identifiers": [
    "js_visit_type",
    "list_adder_unique",
    "js_identifiers",
    "ast",
    "lambda2",
    "la",
    "lambda",
    "v",
    "node",
    "result"
   ]
  },
  "js_identifiers_named": {
   "async": false,
   "identifiers": [
    "object_property_get",
    "list_filter",
    "js_identifiers",
    "js_identifiers_named",
    "ast",
    "identifier_name",
    "identifiers",
    "lambda",
    "i",
    "v",
    "identifiers_named"
   ]
  },
  "js_identifiers_named_count": {
   "async": false,
   "identifiers": [
    "counter",
    "js_visit_type",
    "object_property_get",
    "js_identifiers_named_count",
    "ast",
    "i_name",
    "lambda3",
    "c",
    "lambda2",
    "v",
    "node",
    "name",
    "count"
   ]
  },
  "js_identifiers_names": {
   "async": false,
   "identifiers": [
    "js_visit_type",
    "object_property_get",
    "list_adder_unique",
    "js_identifiers_names",
    "ast",
    "lambda2",
    "la",
    "lambda",
    "v",
    "node",
    "value",
    "names"
   ]
  },
  "js_identifiers_to_names": {
   "async": false,
   "identifiers": [
    "assert_message",
    "js_identifier_is",
    "list_all",
    "list_map_property",
    "json_to",
    "js_identifiers_to_names",
    "identifiers",
    "b2",
    "message2",
    "names"
   ]
  },
  "js_identifier_defineds": {
   "async": false,
   "identifiers": [
    "list_index_of_next_outside",
    "js_declaration_params_names",
    "js_types_function",
    "js_stack_filtered_multiple_each",
    "js_stack_filtered_each",
    "js_identifiers_to_names",
    "list_map_property",
    "js_node_type_is",
    "list_get",
    "each_range",
    "list_next",
    "each",
    "list_adder_multiple",
    "object_property_get",
    "error",
    "json_to",
    "js_identifier_defineds",
    "v",
    "stack",
    "lambda4",
    "la",
    "lambda3",
    "bs",
    "list",
    "item",
    "index",
    "lambda2",
    "i",
    "list_item",
    "declarations",
    "ids",
    "lambda",
    "id",
    "properties",
    "values",
    "names",
    "elements",
    "value",
    "types",
    "lambda5",
    "node",
    "params_names",
    "defineds"
   ]
  },
  "js_identifier_is": {
   "async": false,
   "identifiers": [
    "js_node_type_is",
    "js_identifier_is",
    "node",
    "ii"
   ]
  },
  "js_identifier_not_is": {
   "async": false,
   "identifiers": [
    "js_node_type_not_is",
    "js_identifier_not_is",
    "id",
    "jin"
   ]
  },
  "js_identifier_replace": {
   "async": false,
   "identifiers": [
    "equal",
    "object_property_set",
    "js_visit_type",
    "object_property_get",
    "js_identifier_replace",
    "ast",
    "name_from",
    "name_to",
    "lambda",
    "v",
    "node"
   ]
  },
  "js_identifier_unique": {
   "async": false,
   "identifiers": [
    "js_keyword_arguments",
    "list_concat",
    "string_is_assert",
    "list_all",
    "string_empty_not_is",
    "string_empty_is",
    "list_add",
    "list_includes",
    "js_identifier_unique",
    "existing",
    "name",
    "v2",
    "used",
    "unique",
    "attempt",
    "suffix"
   ]
  },
  "js_identifier_unique_ast": {
   "async": false,
   "identifiers": [
    "js_identifier_unique",
    "js_identifiers_names",
    "js_identifier_unique_ast",
    "ast",
    "property_name",
    "existing",
    "unique"
   ]
  },
  "js_if_blockify": {
   "async": true,
   "identifiers": [
    "js_if_blockify_generic",
    "js_if_blockify",
    "ast",
    "type",
    "property_name"
   ]
  },
  "js_if_blockify_generic": {
   "async": true,
   "identifiers": [
    "js_statement_return_add",
    "not",
    "js_visit_type_each_async",
    "object_replace",
    "list_includes",
    "js_node_type",
    "object_copy",
    "js_node_type_not_is",
    "object_property_get",
    "js_if_blockify_generic",
    "ast",
    "type",
    "property_name",
    "lambda",
    "v",
    "node",
    "body",
    "nti",
    "copy",
    "nt",
    "includes",
    "bs_body"
   ]
  },
  "js_if_else_if_combine": {
   "async": true,
   "identifiers": [
    "js_visit_type_each_async",
    "object_property_set",
    "js_left_right_set",
    "js_code_or",
    "js_parse_expression",
    "equal_by_async",
    "object_property_get",
    "js_node_type_is_if_async",
    "js_unparse",
    "list_get_end_1",
    "js_if_else_if_combine",
    "ast",
    "lambda",
    "v",
    "node",
    "stack",
    "stack1",
    "lambda3",
    "consequent2",
    "consequent",
    "eq",
    "test",
    "test2",
    "code_expression",
    "expression"
   ]
  },
  "js_imports": {
   "async": false,
   "identifiers": [
    "js_imports_declarations",
    "list_map_property",
    "js_imports",
    "ast",
    "imports_declarations",
    "imports"
   ]
  },
  "js_imports_all": {
   "async": false,
   "identifiers": [
    "js_type",
    "js_imports_all",
    "ast",
    "imports"
   ]
  },
  "js_imports_declarations": {
   "async": false,
   "identifiers": [
    "marker",
    "not",
    "js_imports_all",
    "list_size_1",
    "js_node_type_is",
    "string_starts_with",
    "list_single",
    "list_map_property",
    "list_unique",
    "list_adder_unique",
    "each",
    "js_imports_declarations",
    "ast",
    "vs",
    "lambda2",
    "la",
    "lambda",
    "v",
    "node",
    "specifiers",
    "source",
    "a",
    "a2",
    "value",
    "a3",
    "specifier",
    "imported",
    "local",
    "both",
    "mapped",
    "unique",
    "name",
    "declaration",
    "imports"
   ]
  },
  "js_imports_fix": {
   "async": true,
   "identifiers": [
    "list_remove",
    "object_property_get",
    "js_imports_missing_add",
    "js_imports_unused",
    "each",
    "js_imports_fix",
    "ast",
    "unuseds",
    "body",
    "lambda",
    "unused",
    "declaration",
    "v"
   ]
  },
  "js_imports_missing": {
   "async": true,
   "identifiers": [
    "js_declaration_single_name",
    "list_intersect",
    "functions_names",
    "list_difference",
    "list_concat",
    "js_identifiers_names",
    "js_imports",
    "js_declaration_single",
    "js_imports_missing",
    "ast",
    "name",
    "declaration",
    "imports",
    "identifiers",
    "imports_self",
    "missing",
    "f_names",
    "imports_missing"
   ]
  },
  "js_imports_missing_add": {
   "async": true,
   "identifiers": [
    "function_imports_add",
    "js_imports_missing",
    "js_imports_missing_add",
    "ast",
    "imports_missing"
   ]
  },
  "js_imports_paths_fix": {
   "async": false,
   "identifiers": [
    "js_parse_expression",
    "object_property_set",
    "function_name_to_path_import",
    "object_property_get",
    "each",
    "js_imports_declarations",
    "marker",
    "js_imports_paths_fix",
    "ast",
    "imports_declarations",
    "lambda",
    "i",
    "name",
    "declaration",
    "from",
    "expression"
   ]
  },
  "js_imports_unused": {
   "async": false,
   "identifiers": [
    "list_filter_property",
    "list_map",
    "js_imports_declarations",
    "js_identifiers_named_count",
    "object_property_get",
    "marker",
    "object_merge",
    "js_imports_unused",
    "ast",
    "imports",
    "lambda",
    "i",
    "name",
    "declaration",
    "count_import",
    "count_declaration",
    "to",
    "unused",
    "mapped",
    "unuseds"
   ]
  },
  "js_imports_unused_remove": {
   "async": true,
   "identifiers": [
    "list_remove",
    "each",
    "object_property_get",
    "js_imports_unused",
    "marker",
    "js_imports_unused_remove",
    "ast",
    "unuseds",
    "body",
    "lambda",
    "unused",
    "declaration"
   ]
  },
  "js_import_inside": {
   "async": false,
   "identifiers": [
    "js_import_inside",
    "ast"
   ]
  },
  "js_import_inside_task_simple": {
   "async": false,
   "identifiers": [
    "todo",
    "js_import_inside_task_simple"
   ]
  },
  "js_keyword_arguments": {
   "async": false,
   "identifiers": [
    "js_keyword_arguments",
    "a"
   ]
  },
  "js_keyword_await": {
   "async": false,
   "identifiers": [
    "js_keyword_await",
    "v2"
   ]
  },
  "js_keyword_false": {
   "async": false,
   "identifiers": [
    "js_keyword_false",
    "v"
   ]
  },
  "js_keyword_from": {
   "async": false,
   "identifiers": [
    "js_keyword_from",
    "v"
   ]
  },
  "js_keyword_function": {
   "async": false,
   "identifiers": [
    "js_keyword_function",
    "v"
   ]
  },
  "js_keyword_if": {
   "async": false,
   "identifiers": [
    "js_keyword_if",
    "v"
   ]
  },
  "js_keyword_import": {
   "async": false,
   "identifiers": [
    "js_keyword_import",
    "v"
   ]
  },
  "js_keyword_let": {
   "async": false,
   "identifiers": [
    "js_keyword_let",
    "v"
   ]
  },
  "js_keyword_null": {
   "async": false,
   "identifiers": [
    "js_keyword_null",
    "v"
   ]
  },
  "js_left_right_set": {
   "async": false,
   "identifiers": [
    "object_property_set",
    "js_left_right_set",
    "expression",
    "left",
    "right"
   ]
  },
  "js_let_add": {
   "async": false,
   "identifiers": [
    "js_identifier_is",
    "not",
    "list_includes",
    "js_identifier_defineds",
    "object_replace",
    "object_property_get",
    "js_declare",
    "js_node_type_is",
    "list_get_end_1",
    "js_visit_type",
    "js_let_add",
    "ast",
    "lambda",
    "v",
    "stack",
    "stack1",
    "type_is",
    "node",
    "left",
    "right",
    "ii",
    "name",
    "defineds",
    "includes",
    "assign"
   ]
  },
  "js_let_add_task_simple": {
   "async": false,
   "identifiers": [
    "todo",
    "js_let_add_task_simple"
   ]
  },
  "js_log_remove": {
   "async": false,
   "identifiers": [
    "list_remove",
    "list_get_end_2",
    "log",
    "list_get_end_1",
    "js_node_type_is_if",
    "js_visit_type",
    "marker",
    "js_log_remove",
    "ast",
    "lambda",
    "v",
    "stack",
    "node",
    "e1",
    "e2",
    "lambda3",
    "callee",
    "name"
   ]
  },
  "js_markers": {
   "async": false,
   "identifiers": [
    "js_marker_is",
    "list_filter",
    "js_type",
    "js_markers",
    "ast",
    "visitors",
    "markers"
   ]
  },
  "js_marker_insert": {
   "async": true,
   "identifiers": [
    "js_call_insert",
    "marker",
    "js_code_string",
    "js_marker_insert",
    "name",
    "list",
    "index",
    "code_string",
    "f_name",
    "args_code"
   ]
  },
  "js_marker_is": {
   "async": false,
   "identifiers": [
    "js_marker_name_get",
    "js_marker_is",
    "v",
    "marker_name_actual",
    "v2"
   ]
  },
  "js_marker_named": {
   "async": false,
   "identifiers": [
    "js_marker_name_get",
    "js_marker_named",
    "v",
    "marker_name",
    "marker_name_actual",
    "v2",
    "v3"
   ]
  },
  "js_marker_named_ast": {
   "async": false,
   "identifiers": [
    "list_single",
    "js_marker_named",
    "list_filter",
    "js_type",
    "js_marker_named_ast",
    "ast",
    "m_name_from",
    "visitors",
    "lambda",
    "v",
    "result",
    "filtered",
    "marker_v"
   ]
  },
  "js_marker_named_ast_arg": {
   "async": false,
   "identifiers": [
    "function_transform_marker_arg",
    "js_marker_named_ast",
    "js_marker_named_ast_arg",
    "ast",
    "m_name_to",
    "marker_v_to",
    "a_to"
   ]
  },
  "js_marker_name_get": {
   "async": false,
   "identifiers": [
    "not",
    "error",
    "list_is",
    "list_first",
    "list_empty_is",
    "marker",
    "js_node_type_is",
    "js_node_is",
    "list_get_end",
    "js_marker_name_get",
    "v",
    "stack",
    "stack1",
    "a",
    "v2",
    "a2",
    "v3",
    "node",
    "callee",
    "a3",
    "v4",
    "name",
    "v5",
    "arguments",
    "arguments2",
    "v6",
    "a_first",
    "a4",
    "v7",
    "stack2",
    "a5",
    "value"
   ]
  },
  "js_node_atomize": {
   "async": true,
   "identifiers": [
    "function_exists_strict",
    "function_parse_strict_declaration",
    "js_call_function_if",
    "js_block_insert",
    "equal_by",
    "js_declare",
    "object_replace",
    "js_parse_expression",
    "list_index_of",
    "object_copy",
    "js_identifier_unique",
    "js_return_name",
    "function_parse",
    "js_node_type_is",
    "list_get_end",
    "list_is",
    "list_get",
    "object_property_get",
    "list_size",
    "assert_json",
    "js_node_atomize",
    "existing",
    "v",
    "variable_name",
    "node",
    "stack",
    "lambda",
    "name",
    "ast",
    "ast_callee",
    "return_name",
    "stack2",
    "stack1",
    "callee",
    "exists",
    "declaration",
    "params",
    "index",
    "param",
    "b",
    "message",
    "unique",
    "copy",
    "assign",
    "v2"
   ]
  },
  "js_node_is": {
   "async": false,
   "identifiers": [
    "object_property_exists",
    "js_node_is",
    "n",
    "ni"
   ]
  },
  "js_node_type": {
   "async": false,
   "identifiers": [
    "object_property_get",
    "js_node_type",
    "n",
    "nt"
   ]
  },
  "js_node_types": {
   "async": false,
   "identifiers": [
    "js_node_type",
    "js_visit_nodes",
    "list_adder_unique",
    "js_node_types",
    "ast",
    "lambda2",
    "la",
    "lambda",
    "node",
    "nt",
    "result"
   ]
  },
  "js_node_types_includes": {
   "async": false,
   "identifiers": [
    "list_includes",
    "js_node_types",
    "js_node_types_includes",
    "ast",
    "node_type",
    "list",
    "includes"
   ]
  },
  "js_node_types_is": {
   "async": false,
   "identifiers": [
    "list_any",
    "js_node_type_is",
    "js_node_types_is",
    "item",
    "types",
    "lambda2",
    "type",
    "type_is",
    "match"
   ]
  },
  "js_node_type_is": {
   "async": false,
   "identifiers": [
    "js_node_is",
    "js_node_type",
    "js_node_type_is",
    "node",
    "type",
    "type_is"
   ]
  },
  "js_node_type_is_assert": {
   "async": false,
   "identifiers": [
    "assert",
    "js_node_type_is",
    "js_node_type_is_assert",
    "node",
    "type",
    "type_is"
   ]
  },
  "js_node_type_is_if": {
   "async": false,
   "identifiers": [
    "marker",
    "js_node_type_is",
    "js_node_type_is_if",
    "node",
    "type",
    "lambda",
    "type_is"
   ]
  },
  "js_node_type_is_if_async": {
   "async": true,
   "identifiers": [
    "js_node_type_is",
    "js_node_type_is_if_async",
    "node",
    "type",
    "lambda",
    "type_is"
   ]
  },
  "js_node_type_not_is": {
   "async": false,
   "identifiers": [
    "not",
    "js_node_type_is",
    "js_node_type_not_is",
    "node",
    "type",
    "type_is",
    "nti"
   ]
  },
  "js_node_type_not_is_if": {
   "async": false,
   "identifiers": [
    "js_node_type_not_is",
    "marker",
    "js_node_type_not_is_if",
    "node",
    "type",
    "lambda",
    "type_is"
   ]
  },
  "js_null": {
   "async": false,
   "identifiers": [
    "js_parse_expression",
    "js_keyword_null",
    "js_null",
    "init_code",
    "n"
   ]
  },
  "js_operator_or": {
   "async": false,
   "identifiers": [
    "js_operator_or",
    "v2"
   ]
  },
  "js_outside_move": {
   "async": true,
   "identifiers": [
    "js_imports_fix",
    "each",
    "list_filter_property",
    "list_remove",
    "function_new_declaration",
    "assert_file_exists_not",
    "each_async",
    "marker",
    "js_declaration_name",
    "function_name_to_path",
    "js_outside_move",
    "ast",
    "body",
    "fds",
    "lambda",
    "fd",
    "f_name",
    "f_path",
    "lambda2",
    "lambda3"
   ]
  },
  "js_parse": {
   "async": false,
   "identifiers": [
    "acorn",
    "log_keep",
    "js_parse",
    "code",
    "ast",
    "parse",
    "ecmaVersion",
    "sourceType",
    "e"
   ]
  },
  "js_parse_expression": {
   "async": false,
   "identifiers": [
    "object_property_get",
    "js_parse_statement",
    "js_parse_expression",
    "code_expression",
    "statement",
    "expression"
   ]
  },
  "js_parse_statement": {
   "async": false,
   "identifiers": [
    "js_code_declaration",
    "js_parse",
    "list_first",
    "js_parse_statement",
    "code",
    "code2",
    "ast",
    "body",
    "declaration",
    "block",
    "statements",
    "statement"
   ]
  },
  "js_parse_statement_module": {
   "async": false,
   "identifiers": [
    "js_parse",
    "list_first",
    "js_parse_statement_module",
    "code",
    "ast",
    "body",
    "statement"
   ]
  },
  "js_property": {
   "async": false,
   "identifiers": [
    "js_property_generic",
    "js_property",
    "key",
    "value",
    "shorthand",
    "p"
   ]
  },
  "js_property_generic": {
   "async": false,
   "identifiers": [
    "js_property_generic",
    "shorthand",
    "key",
    "value",
    "v",
    "type",
    "method",
    "computed",
    "kind"
   ]
  },
  "js_property_identifier": {
   "async": false,
   "identifiers": [
    "js_property_generic",
    "js_parse_expression",
    "js_property_identifier",
    "param_name",
    "key",
    "value",
    "v"
   ]
  },
  "js_property_parse_expression": {
   "async": false,
   "identifiers": [
    "js_property",
    "js_parse_expression",
    "js_property_parse_expression",
    "key_code",
    "value_code",
    "key",
    "expression",
    "p"
   ]
  },
  "js_property_parse_expression_add": {
   "async": false,
   "identifiers": [
    "list_add",
    "js_property_parse_expression",
    "js_property_parse_expression_add",
    "key_code",
    "value_code",
    "properties",
    "p"
   ]
  },
  "js_return_atomize": {
   "async": true,
   "identifiers": [
    "js_return_on_async",
    "each_async",
    "js_type",
    "js_node_atomize",
    "js_visit_match",
    "noop",
    "js_identifiers_names",
    "js_return_atomize",
    "ast",
    "existing",
    "rs",
    "lambda",
    "v",
    "node",
    "identifier_not",
    "argument"
   ]
  },
  "js_return_code_replace": {
   "async": false,
   "identifiers": [
    "object_replace",
    "object_property_set",
    "js_parse_expression",
    "js_return_empty",
    "js_return_code_replace",
    "code",
    "replace_to",
    "from",
    "expression"
   ]
  },
  "js_return_empty": {
   "async": false,
   "identifiers": [
    "js_parse_statement",
    "js_code_return_empty",
    "js_return_empty",
    "code",
    "from"
   ]
  },
  "js_return_name": {
   "async": false,
   "identifiers": [
    "js_return_on",
    "list_last",
    "list_empty_not_is",
    "js_declaration_single_block_body",
    "js_return_name",
    "ast",
    "body_block",
    "return_name",
    "last",
    "identifier_if",
    "identifier_not",
    "argument",
    "name",
    "name_argument"
   ]
  },
  "js_return_on": {
   "async": false,
   "identifiers": [
    "js_node_type_is",
    "js_return_on",
    "node",
    "identifier_if",
    "identifier_not",
    "argument"
   ]
  },
  "js_return_on_async": {
   "async": true,
   "identifiers": [
    "js_node_type_is",
    "js_return_on_async",
    "node",
    "identifier_if",
    "identifier_not",
    "argument"
   ]
  },
  "js_stack_declaration_asyncify": {
   "async": false,
   "identifiers": [
    "js_stack_last",
    "object_property_get",
    "object_property_set",
    "js_stack_declaration_asyncify",
    "stack",
    "declaration",
    "last"
   ]
  },
  "js_stack_filtered": {
   "async": false,
   "identifiers": [
    "js_node_type_is",
    "list_filter",
    "js_stack_filtered",
    "stack",
    "type",
    "lambda",
    "n",
    "type_is",
    "filtered"
   ]
  },
  "js_stack_filtered_each": {
   "async": false,
   "identifiers": [
    "js_stack_filtered_multiple_each",
    "js_stack_filtered_each",
    "stack",
    "type",
    "lambda"
   ]
  },
  "js_stack_filtered_multiple": {
   "async": false,
   "identifiers": [
    "js_node_types_is",
    "list_filter",
    "js_stack_filtered_multiple",
    "stack",
    "types",
    "lambda",
    "item",
    "result",
    "filtered"
   ]
  },
  "js_stack_filtered_multiple_each": {
   "async": false,
   "identifiers": [
    "each",
    "js_stack_filtered_multiple",
    "js_stack_filtered_multiple_each",
    "stack",
    "types",
    "lambda$node",
    "filtered"
   ]
  },
  "js_stack_last": {
   "async": false,
   "identifiers": [
    "js_stack_last_multiple",
    "js_stack_last",
    "stack",
    "type",
    "last"
   ]
  },
  "js_stack_last_function": {
   "async": false,
   "identifiers": [
    "js_stack_last_multiple",
    "js_types_function",
    "js_stack_last_function",
    "stack",
    "types",
    "f"
   ]
  },
  "js_stack_last_multiple": {
   "async": false,
   "identifiers": [
    "list_last_or_null",
    "js_stack_filtered_multiple",
    "js_stack_last_multiple",
    "stack",
    "types",
    "filtered",
    "last"
   ]
  },
  "js_stack_list_block_is": {
   "async": false,
   "identifiers": [
    "not",
    "js_node_type_is",
    "list_is",
    "list_get_end",
    "js_stack_list_block_is",
    "stack",
    "index",
    "stack1",
    "a",
    "v",
    "stack2",
    "a2",
    "v2",
    "v3"
   ]
  },
  "js_statement_call_get": {
   "async": false,
   "identifiers": [
    "not",
    "object_property_get",
    "list_single",
    "list_multiple_is",
    "js_node_type_is",
    "js_statement_call_get",
    "node",
    "expression",
    "declaration",
    "expression_next",
    "declarations",
    "v",
    "a",
    "v2",
    "v3"
   ]
  },
  "js_statement_expression_get": {
   "async": false,
   "identifiers": [
    "object_property_get",
    "js_statement_expression_get",
    "node",
    "value"
   ]
  },
  "js_statement_return": {
   "async": false,
   "identifiers": [
    "js_parse_statement",
    "js_code_return",
    "js_statement_return",
    "code",
    "code2",
    "item"
   ]
  },
  "js_statement_return_add": {
   "async": false,
   "identifiers": [
    "list_add",
    "object_property_set",
    "js_statement_return_empty",
    "js_statement_return_add",
    "argument",
    "list",
    "r"
   ]
  },
  "js_statement_return_empty": {
   "async": false,
   "identifiers": [
    "js_statement_return",
    "js_statement_return_empty",
    "item"
   ]
  },
  "js_statement_return_empty_add": {
   "async": false,
   "identifiers": [
    "list_add",
    "js_statement_return_empty",
    "js_statement_return_empty_add",
    "body_block",
    "r"
   ]
  },
  "js_string": {
   "async": false,
   "identifiers": [
    "object_property_delete",
    "object_property_set",
    "js_parse_expression",
    "js_string",
    "value_string",
    "s"
   ]
  },
  "js_type": {
   "async": false,
   "identifiers": [
    "marker",
    "js_visit_type",
    "list_adder",
    "js_type",
    "ast",
    "node_type",
    "lambda",
    "la",
    "vs"
   ]
  },
  "js_types_function": {
   "async": false,
   "identifiers": [
    "js_types_function",
    "types_function"
   ]
  },
  "js_types_function_includes": {
   "async": false,
   "identifiers": [
    "list_includes",
    "js_types_function",
    "js_types_function_includes",
    "item",
    "f_types",
    "includes"
   ]
  },
  "js_unparse": {
   "async": false,
   "identifiers": [
    "js_visit_each",
    "not",
    "error_json",
    "js_visit_filter",
    "js_unparse_inner",
    "promise_not_is",
    "error",
    "js_unparse",
    "ast",
    "a2",
    "a3",
    "o",
    "code",
    "e",
    "current",
    "lambda",
    "v",
    "node",
    "v2"
   ]
  },
  "js_unparse_inner": {
   "async": false,
   "identifiers": [
    "generate",
    "js_unparse_inner",
    "ast",
    "output"
   ]
  },
  "js_visit": {
   "async": false,
   "identifiers": [
    "not",
    "promise_not_is",
    "error",
    "visit_filter",
    "js_visit_children_get",
    "js_visit_filter",
    "js_visit",
    "ast",
    "lambda$v",
    "a"
   ]
  },
  "js_visitors": {
   "async": false,
   "identifiers": [
    "list_adder",
    "js_visit",
    "marker",
    "js_visitors",
    "ast",
    "lambda",
    "la",
    "vs"
   ]
  },
  "js_visit_calls_named": {
   "async": false,
   "identifiers": [
    "js_visit_type",
    "object_property_get",
    "equal_not",
    "js_call_callee_name",
    "js_visit_calls_named",
    "f_name",
    "lambda",
    "ast",
    "lambda_inner",
    "v",
    "node",
    "name",
    "args"
   ]
  },
  "js_visit_children_get": {
   "async": false,
   "identifiers": [
    "object_properties",
    "list_is",
    "string_is",
    "object_property_get",
    "list_map",
    "js_visit_children_get",
    "n",
    "v",
    "lambda",
    "p",
    "value",
    "list",
    "mapped"
   ]
  },
  "js_visit_each": {
   "async": false,
   "identifiers": [
    "each",
    "marker",
    "js_visit",
    "list_adder",
    "js_visit_each",
    "a",
    "lambda$item",
    "lambda2",
    "la",
    "v",
    "vs"
   ]
  },
  "js_visit_each_async": {
   "async": true,
   "identifiers": [
    "each_async",
    "js_visit",
    "list_adder",
    "js_visit_each_async",
    "a",
    "lambda",
    "lambda2",
    "la",
    "v",
    "vs"
   ]
  },
  "js_visit_filter": {
   "async": false,
   "identifiers": [
    "js_node_is",
    "list_is",
    "js_visit_filter",
    "n",
    "v"
   ]
  },
  "js_visit_match": {
   "async": false,
   "identifiers": [
    "list_single",
    "js_visit",
    "list_adder",
    "js_visit_match",
    "ast",
    "search",
    "lambda2",
    "la",
    "lambda",
    "v",
    "node",
    "matches",
    "v_match"
   ]
  },
  "js_visit_nodes": {
   "async": false,
   "identifiers": [
    "not",
    "js_visit",
    "js_node_is",
    "js_visit_nodes",
    "parsed",
    "on_each",
    "lambda",
    "v",
    "node",
    "a"
   ]
  },
  "js_visit_type": {
   "async": false,
   "identifiers": [
    "js_visit_types",
    "js_visit_type",
    "ast",
    "type",
    "lambda$v"
   ]
  },
  "js_visit_types": {
   "async": false,
   "identifiers": [
    "js_node_types_is",
    "marker",
    "js_visit",
    "js_node_is",
    "js_visit_types",
    "ast",
    "types",
    "lambda$v",
    "lambda",
    "v",
    "node"
   ]
  },
  "js_visit_type_each_async": {
   "async": true,
   "identifiers": [
    "list_adder",
    "each_async",
    "js_visit_type",
    "js_visit_type_each_async",
    "ast",
    "type",
    "lambda",
    "lambda2",
    "la",
    "v",
    "vs"
   ]
  },
  "keyboard_type_delay": {
   "async": true,
   "identifiers": [
    "each_async",
    "sleep",
    "keyboard_typing_delay",
    "string_list_to",
    "keyboard_type_delay",
    "message",
    "fn",
    "list",
    "lambda",
    "item",
    "delay_ms"
   ]
  },
  "keyboard_typing_delay": {
   "async": false,
   "identifiers": [
    "integer_random",
    "keyboard_typing_delay",
    "characters_per_minute",
    "seconds_per_minute",
    "ms_per_second",
    "ms_per_minute",
    "ms_per_character",
    "high",
    "delay_ms"
   ]
  },
  "kjv": {
   "async": false,
   "identifiers": [
    "kjv",
    "v"
   ]
  },
  "lambda_get": {
   "async": false,
   "identifiers": [
    "lambda_get",
    "value",
    "value_get"
   ]
  },
  "lambda_invoke": {
   "async": false,
   "identifiers": [
    "lambda_invoke",
    "lambda"
   ]
  },
  "lambda_invoke_multiple": {
   "async": false,
   "identifiers": [
    "lambda_invoke",
    "each",
    "lambda_invoke_multiple",
    "afters"
   ]
  },
  "lambda_value": {
   "async": false,
   "identifiers": [
    "marker",
    "lambda_value",
    "value",
    "v",
    "lambda"
   ]
  },
  "lists_get": {
   "async": false,
   "identifiers": [
    "list_get",
    "list_map",
    "lists_get",
    "lists",
    "index",
    "lambda",
    "list",
    "item",
    "items"
   ]
  },
  "list_add": {
   "async": false,
   "identifiers": [
    "list_add",
    "list",
    "item",
    "push"
   ]
  },
  "list_adder": {
   "async": false,
   "identifiers": [
    "list_adder_generic",
    "list_add",
    "list_adder",
    "lambda$la",
    "fn",
    "list"
   ]
  },
  "list_adder_async": {
   "async": true,
   "identifiers": [
    "list_add",
    "list_adder_async",
    "lambda$la",
    "list",
    "list_adder_inner",
    "item"
   ]
  },
  "list_adder_generic": {
   "async": false,
   "identifiers": [
    "list_adder_generic",
    "lambda",
    "fn",
    "list",
    "list_adder_inner",
    "item"
   ]
  },
  "list_adder_generic_async": {
   "async": true,
   "identifiers": [
    "marker",
    "list_adder_generic_async",
    "lambda",
    "fn",
    "list",
    "list_adder_inner",
    "item"
   ]
  },
  "list_adder_multiple": {
   "async": false,
   "identifiers": [
    "list_adder_generic",
    "list_add_multiple",
    "list_adder_multiple",
    "lambda$la",
    "fn",
    "list"
   ]
  },
  "list_adder_multiple_async": {
   "async": true,
   "identifiers": [
    "list_adder_generic_async",
    "marker",
    "list_add_multiple",
    "list_adder_multiple_async",
    "lambda$la",
    "fn",
    "list"
   ]
  },
  "list_adder_unique": {
   "async": false,
   "identifiers": [
    "list_adder",
    "list_unique",
    "list_adder_unique",
    "lambda",
    "items",
    "unique"
   ]
  },
  "list_adder_unique_async": {
   "async": true,
   "identifiers": [
    "list_adder_async",
    "list_unique",
    "list_adder_unique_async",
    "lambda",
    "items",
    "unique"
   ]
  },
  "list_add_first": {
   "async": false,
   "identifiers": [
    "list_insert",
    "list_add_first",
    "list",
    "item"
   ]
  },
  "list_add_if_not_includes": {
   "async": false,
   "identifiers": [
    "not",
    "list_add",
    "list_includes",
    "list_add_if_not_includes",
    "list",
    "item",
    "exists"
   ]
  },
  "list_add_multiple": {
   "async": false,
   "identifiers": [
    "list_add_multiple",
    "list",
    "items",
    "push"
   ]
  },
  "list_all": {
   "async": false,
   "identifiers": [
    "list_filter",
    "list_size",
    "list_all",
    "list",
    "lambda$item",
    "list2",
    "a",
    "filtered",
    "v2"
   ]
  },
  "list_any": {
   "async": false,
   "identifiers": [
    "marker",
    "list_empty_not_is",
    "list_filter",
    "list_any",
    "list",
    "lambda$item",
    "filtered",
    "any"
   ]
  },
  "list_any_starts_with": {
   "async": false,
   "identifiers": [
    "list_any",
    "string_starts_with",
    "list_any_starts_with",
    "item",
    "prefixes",
    "lambda2",
    "item2",
    "sw",
    "any"
   ]
  },
  "list_concat": {
   "async": false,
   "identifiers": [
    "list_is",
    "assert",
    "list_concat",
    "a",
    "b",
    "l",
    "concated",
    "concat"
   ]
  },
  "list_concat_multiple": {
   "async": false,
   "identifiers": [
    "list_concat",
    "each",
    "marker",
    "list_concat_multiple",
    "lists",
    "combined",
    "lambda",
    "item"
   ]
  },
  "list_copy": {
   "async": false,
   "identifiers": [
    "list_copy",
    "original",
    "copy"
   ]
  },
  "list_copy_reverse": {
   "async": false,
   "identifiers": [
    "list_reverse",
    "list_copy",
    "list_copy_reverse",
    "previous",
    "copy"
   ]
  },
  "list_difference": {
   "async": false,
   "identifiers": [
    "not",
    "each",
    "list_adder",
    "list_includes",
    "list_difference",
    "list",
    "other",
    "lambda2",
    "la",
    "lambda",
    "l",
    "a",
    "difference"
   ]
  },
  "list_empty": {
   "async": false,
   "identifiers": [
    "object_property_set",
    "list_empty",
    "list"
   ]
  },
  "list_empty_is": {
   "async": false,
   "identifiers": [
    "list_size",
    "list_empty_is",
    "list",
    "e"
   ]
  },
  "list_empty_is_assert": {
   "async": false,
   "identifiers": [
    "assert_json",
    "list_empty_is",
    "list_empty_is_assert",
    "extra",
    "j",
    "e"
   ]
  },
  "list_empty_not_is": {
   "async": false,
   "identifiers": [
    "not",
    "list_empty_is",
    "list_empty_not_is",
    "list",
    "a",
    "ne"
   ]
  },
  "list_empty_not_is_assert": {
   "async": false,
   "identifiers": [
    "assert",
    "list_empty_not_is",
    "list_empty_not_is_assert",
    "list",
    "ne"
   ]
  },
  "list_filter": {
   "async": false,
   "identifiers": [
    "list_is",
    "assert",
    "list_filter",
    "list",
    "lambda$item",
    "l",
    "filtered",
    "filter"
   ]
  },
  "list_filter_empty_not_is": {
   "async": false,
   "identifiers": [
    "string_empty_not_is",
    "list_filter",
    "list_filter_empty_not_is",
    "item",
    "filtered2"
   ]
  },
  "list_filter_ends_with_any": {
   "async": false,
   "identifiers": [
    "list_filter",
    "list_any",
    "string_ends_with",
    "list_filter_ends_with_any",
    "suffixes",
    "list",
    "lambda",
    "item",
    "lambda3",
    "suffix",
    "ew",
    "any",
    "filtered"
   ]
  },
  "list_filter_ends_with_not_any": {
   "async": false,
   "identifiers": [
    "string_ends_with_not",
    "marker",
    "list_filter",
    "list_any",
    "list_filter_ends_with_not_any",
    "suffixes",
    "list",
    "lambda",
    "item",
    "lambda3",
    "suffix",
    "ewn",
    "any",
    "filtered"
   ]
  },
  "list_filter_property": {
   "async": false,
   "identifiers": [
    "object_property_equals_lambda",
    "list_filter",
    "list_filter_property",
    "list",
    "property_name",
    "property_value",
    "filter",
    "filtered"
   ]
  },
  "list_filter_starts_with": {
   "async": false,
   "identifiers": [
    "list_filter",
    "string_starts_with",
    "list_filter_starts_with",
    "list",
    "prefix",
    "lambda",
    "item",
    "sw",
    "filtered"
   ]
  },
  "list_filter_starts_with_any": {
   "async": false,
   "identifiers": [
    "list_any_starts_with",
    "list_filter",
    "list_filter_starts_with_any",
    "prefixes",
    "list",
    "lambda",
    "item",
    "any",
    "verse_references"
   ]
  },
  "list_filter_starts_with_not": {
   "async": false,
   "identifiers": [
    "string_starts_with_not",
    "marker",
    "list_filter",
    "list_filter_starts_with_not",
    "mapped",
    "book_code",
    "lambda",
    "item",
    "sw",
    "filtered"
   ]
  },
  "list_filter_starts_with_not_multiple": {
   "async": false,
   "identifiers": [
    "list_all",
    "string_starts_with_not",
    "marker",
    "list_filter",
    "list_filter_starts_with_not_multiple",
    "mapped",
    "prefixes",
    "lambda",
    "item",
    "lambda2",
    "prefix",
    "sw",
    "v",
    "filtered"
   ]
  },
  "list_find": {
   "async": false,
   "identifiers": [
    "list_filter",
    "list_single",
    "list_find",
    "list",
    "predicate",
    "filtered",
    "only"
   ]
  },
  "list_find_property": {
   "async": false,
   "identifiers": [
    "object_property_equals_lambda",
    "list_find",
    "list_find_property",
    "list",
    "property_name",
    "property_value",
    "filter",
    "item"
   ]
  },
  "list_find_starts_with": {
   "async": false,
   "identifiers": [
    "marker",
    "string_starts_with",
    "list_find",
    "list_find_starts_with",
    "item",
    "prefixes",
    "lambda2",
    "item2",
    "sw",
    "any"
   ]
  },
  "list_first": {
   "async": false,
   "identifiers": [
    "list_get",
    "list_first",
    "list",
    "index",
    "first"
   ]
  },
  "list_first_remaining": {
   "async": false,
   "identifiers": [
    "list_first_second_generic",
    "list_skip_1",
    "marker",
    "list_first_remaining",
    "list",
    "property_name",
    "value_get",
    "result"
   ]
  },
  "list_first_second": {
   "async": false,
   "identifiers": [
    "list_first_second_generic",
    "list_second",
    "list_first_second",
    "list",
    "property_name",
    "value_get",
    "result"
   ]
  },
  "list_first_second_generic": {
   "async": false,
   "identifiers": [
    "list_multiple_is",
    "list_first",
    "list_empty_not_is",
    "list_first_second_generic",
    "list",
    "value_get",
    "property_name",
    "first",
    "second",
    "result"
   ]
  },
  "list_get": {
   "async": false,
   "identifiers": [
    "integer_is_assert",
    "assert_json",
    "assert_message",
    "assert",
    "integer_is",
    "undefined_not_is_assert_lambda",
    "list_get",
    "list",
    "index",
    "item",
    "object_get",
    "v"
   ]
  },
  "list_get_end": {
   "async": false,
   "identifiers": [
    "list_index_last",
    "list_get",
    "list_get_end",
    "stack",
    "index_from_end",
    "difference",
    "item"
   ]
  },
  "list_get_end_1": {
   "async": false,
   "identifiers": [
    "list_get_end",
    "list_get_end_1",
    "stack",
    "e1"
   ]
  },
  "list_get_end_2": {
   "async": false,
   "identifiers": [
    "list_get_end",
    "list_get_end_2",
    "stack",
    "e2"
   ]
  },
  "list_get_end_3": {
   "async": false,
   "identifiers": [
    "list_get_end",
    "list_get_end_3",
    "stack",
    "item"
   ]
  },
  "list_includes": {
   "async": false,
   "identifiers": [
    "list_includes",
    "list",
    "item",
    "includes"
   ]
  },
  "list_includes_assert": {
   "async": false,
   "identifiers": [
    "assert",
    "list_includes",
    "list_includes_assert",
    "all",
    "repo_name",
    "includes"
   ]
  },
  "list_index_is": {
   "async": false,
   "identifiers": [
    "list_index_last",
    "list_empty_is",
    "list_index_is",
    "list",
    "index",
    "e",
    "v",
    "index_last",
    "ii"
   ]
  },
  "list_index_last": {
   "async": false,
   "identifiers": [
    "list_size",
    "list_index_last",
    "list",
    "index_last"
   ]
  },
  "list_index_of": {
   "async": false,
   "identifiers": [
    "error_json",
    "list_index_of",
    "list",
    "item",
    "index",
    "indexOf"
   ]
  },
  "list_index_of_delta": {
   "async": false,
   "identifiers": [
    "list_index_of_delta_outside",
    "not",
    "list_index_is",
    "list_index_of_delta",
    "list",
    "item",
    "delta",
    "index_next",
    "ii",
    "v"
   ]
  },
  "list_index_of_delta_outside": {
   "async": false,
   "identifiers": [
    "list_index_of",
    "list_index_of_delta_outside",
    "list",
    "item",
    "delta",
    "index",
    "index_next"
   ]
  },
  "list_index_of_last": {
   "async": false,
   "identifiers": [
    "marker",
    "error_json",
    "list_index_of_last",
    "list",
    "item",
    "index",
    "lastIndexOf"
   ]
  },
  "list_index_of_next": {
   "async": false,
   "identifiers": [
    "list_index_of_delta",
    "list_index_of_next",
    "list",
    "item",
    "delta",
    "index_next"
   ]
  },
  "list_index_of_next_outside": {
   "async": false,
   "identifiers": [
    "marker",
    "list_index_of_delta_outside",
    "list_index_of_next_outside",
    "list",
    "item",
    "delta",
    "index_next"
   ]
  },
  "list_index_of_previous": {
   "async": false,
   "identifiers": [
    "list_index_of_delta",
    "list_index_of_previous",
    "list",
    "item",
    "delta",
    "index_previous"
   ]
  },
  "list_insert": {
   "async": false,
   "identifiers": [
    "list_insert_generic",
    "list_insert",
    "list",
    "index",
    "value",
    "delete_count"
   ]
  },
  "list_insert_generic": {
   "async": false,
   "identifiers": [
    "list_splice",
    "assert",
    "number_is",
    "list_insert_generic",
    "index",
    "list",
    "delete_count",
    "value",
    "b"
   ]
  },
  "list_intersect": {
   "async": false,
   "identifiers": [
    "each",
    "list_adder",
    "list_includes",
    "list_intersect",
    "list",
    "other",
    "lambda2",
    "la",
    "lambda",
    "l",
    "list2"
   ]
  },
  "list_intersect_empty_is_assert": {
   "async": false,
   "identifiers": [
    "list_empty_is_assert",
    "list_intersect",
    "list_intersect_empty_is_assert",
    "include",
    "exclude",
    "i"
   ]
  },
  "list_is": {
   "async": false,
   "identifiers": [
    "list_is",
    "value",
    "l",
    "Array",
    "isArray"
   ]
  },
  "list_is_assert": {
   "async": false,
   "identifiers": [
    "assert_json",
    "list_is",
    "list_is_assert",
    "list",
    "result"
   ]
  },
  "list_join": {
   "async": false,
   "identifiers": [
    "list_join",
    "list",
    "separator",
    "joined",
    "join"
   ]
  },
  "list_join_comma": {
   "async": false,
   "identifiers": [
    "list_join",
    "list_join_comma",
    "names",
    "result"
   ]
  },
  "list_join_comma_space": {
   "async": false,
   "identifiers": [
    "list_join",
    "list_join_comma_space",
    "args",
    "v"
   ]
  },
  "list_join_empty": {
   "async": false,
   "identifiers": [
    "list_join",
    "string_empty",
    "list_join_empty",
    "letters",
    "e",
    "joined"
   ]
  },
  "list_join_newline": {
   "async": false,
   "identifiers": [
    "list_join",
    "newline",
    "list_join_newline",
    "list",
    "separator",
    "joined"
   ]
  },
  "list_join_newline_2": {
   "async": false,
   "identifiers": [
    "marker",
    "list_join",
    "newline",
    "list_join_newline_2",
    "list",
    "separator",
    "joined"
   ]
  },
  "list_join_slash_forward": {
   "async": false,
   "identifiers": [
    "list_join",
    "list_join_slash_forward",
    "list",
    "joined"
   ]
  },
  "list_join_space": {
   "async": false,
   "identifiers": [
    "list_join",
    "list_join_space",
    "args",
    "joined"
   ]
  },
  "list_last": {
   "async": false,
   "identifiers": [
    "list_empty_not_is_assert",
    "list_get_end",
    "list_last",
    "list",
    "last"
   ]
  },
  "list_last_is": {
   "async": false,
   "identifiers": [
    "list_last",
    "list_last_is",
    "list",
    "item",
    "last",
    "v"
   ]
  },
  "list_last_or_null": {
   "async": false,
   "identifiers": [
    "list_last",
    "list_empty_is",
    "marker",
    "list_last_or_null",
    "list",
    "result",
    "v",
    "item"
   ]
  },
  "list_map": {
   "async": false,
   "identifiers": [
    "list_map",
    "list",
    "lambda$item",
    "mapped",
    "map"
   ]
  },
  "list_map_combine": {
   "async": false,
   "identifiers": [
    "list_map",
    "list_map_combine",
    "right",
    "list",
    "lambda",
    "left",
    "combined",
    "combineds"
   ]
  },
  "list_map_filter_string_empty_not_is": {
   "async": false,
   "identifiers": [
    "list_filter_empty_not_is",
    "marker",
    "list_map",
    "list_map_filter_string_empty_not_is",
    "list",
    "mapped4"
   ]
  },
  "list_map_first": {
   "async": false,
   "identifiers": [
    "list_first",
    "list_map",
    "list_map_first",
    "mapped4",
    "mapped6"
   ]
  },
  "list_map_index": {
   "async": false,
   "identifiers": [
    "list_map",
    "list_map_index",
    "list",
    "lambda$item$index",
    "index",
    "lambda",
    "item",
    "value",
    "mapped"
   ]
  },
  "list_map_lower": {
   "async": false,
   "identifiers": [
    "string_lower_to",
    "list_map",
    "list_map_lower",
    "input",
    "mapped"
   ]
  },
  "list_map_name": {
   "async": false,
   "identifiers": [
    "list_map_property",
    "list_map_name",
    "list",
    "property_name",
    "result"
   ]
  },
  "list_map_path_join": {
   "async": false,
   "identifiers": [
    "list_map",
    "path_join",
    "list_map_path_join",
    "list",
    "f_name",
    "lambda",
    "item",
    "joined",
    "mapped2"
   ]
  },
  "list_map_prefix_any": {
   "async": false,
   "identifiers": [
    "list_find_starts_with",
    "marker",
    "list_map",
    "list_map_prefix_any",
    "list",
    "prefixes",
    "lambda",
    "item",
    "prefix",
    "mapped"
   ]
  },
  "list_map_prefix_without": {
   "async": false,
   "identifiers": [
    "list_map",
    "string_prefix_without",
    "list_map_prefix_without",
    "list",
    "prefix",
    "lambda",
    "item",
    "result",
    "mapped"
   ]
  },
  "list_map_prefix_without_any": {
   "async": false,
   "identifiers": [
    "list_find_starts_with",
    "marker",
    "list_map",
    "string_prefix_without",
    "list_map_prefix_without_any",
    "list",
    "prefixes",
    "lambda",
    "item",
    "prefix",
    "result",
    "mapped"
   ]
  },
  "list_map_property": {
   "async": false,
   "identifiers": [
    "object_property_get",
    "list_map",
    "list_map_property",
    "list",
    "property_name",
    "list_map_property_lambda",
    "item",
    "value",
    "mapped"
   ]
  },
  "list_map_property_to": {
   "async": false,
   "identifiers": [
    "object_property_set",
    "list_map",
    "list_map_property_to",
    "list",
    "name",
    "lambda",
    "item",
    "o",
    "mapped"
   ]
  },
  "list_map_split_comma": {
   "async": false,
   "identifiers": [
    "string_split_comma",
    "list_map",
    "list_map_split_comma",
    "mapped2",
    "mapped3"
   ]
  },
  "list_map_split_space": {
   "async": false,
   "identifiers": [
    "list_map",
    "string_split_space",
    "list_map_split_space",
    "mapped2",
    "lambda",
    "item",
    "split2",
    "mapped3"
   ]
  },
  "list_map_squash": {
   "async": false,
   "identifiers": [
    "list_squash",
    "list_map",
    "list_map_squash",
    "properties",
    "fn",
    "mapped",
    "names"
   ]
  },
  "list_map_unordered_async": {
   "async": true,
   "identifiers": [
    "list_wait",
    "list_map",
    "list_map_unordered_async",
    "list",
    "lambda$item",
    "mapped",
    "waited"
   ]
  },
  "list_map_whitespace_normalize": {
   "async": false,
   "identifiers": [
    "whitespace_normalize",
    "list_map",
    "list_map_whitespace_normalize",
    "split",
    "mapped2"
   ]
  },
  "list_multiple_is": {
   "async": false,
   "identifiers": [
    "list_size",
    "list_multiple_is",
    "list",
    "v"
   ]
  },
  "list_next": {
   "async": false,
   "identifiers": [
    "list_get",
    "list_index_of_next",
    "list_next",
    "list",
    "item",
    "index_next",
    "next"
   ]
  },
  "list_next_index": {
   "async": false,
   "identifiers": [
    "list_next",
    "list_index_of",
    "list_next_index",
    "list",
    "item",
    "next",
    "index"
   ]
  },
  "list_next_try": {
   "async": false,
   "identifiers": [
    "null_is",
    "marker",
    "list_get",
    "list_index_of_next",
    "list_next_try",
    "list",
    "item",
    "index_next",
    "next"
   ]
  },
  "list_not_is": {
   "async": false,
   "identifiers": [
    "not",
    "list_is",
    "marker",
    "list_not_is",
    "value",
    "a",
    "nl"
   ]
  },
  "list_pop": {
   "async": false,
   "identifiers": [
    "list_pop",
    "list",
    "v",
    "pop"
   ]
  },
  "list_previous": {
   "async": false,
   "identifiers": [
    "list_get",
    "list_index_of_previous",
    "list_previous",
    "list",
    "item",
    "index_previous",
    "previous"
   ]
  },
  "list_random_item": {
   "async": false,
   "identifiers": [
    "list_get",
    "floor",
    "list_size",
    "random",
    "list_random_item",
    "arr",
    "p",
    "index",
    "r"
   ]
  },
  "list_range": {
   "async": false,
   "identifiers": [
    "list_slice",
    "list_range",
    "list",
    "a",
    "b",
    "result"
   ]
  },
  "list_remove": {
   "async": false,
   "identifiers": [
    "list_remove_at",
    "list_index_of",
    "list_remove",
    "list",
    "item",
    "index"
   ]
  },
  "list_remove_all": {
   "async": false,
   "identifiers": [
    "list_remove",
    "list_includes",
    "list_remove_all",
    "list",
    "item"
   ]
  },
  "list_remove_all_multiple": {
   "async": false,
   "identifiers": [
    "marker",
    "list_remove_all",
    "each",
    "list_remove_all_multiple",
    "removals",
    "list",
    "lambda",
    "r"
   ]
  },
  "list_remove_at": {
   "async": false,
   "identifiers": [
    "list_remove_at",
    "list",
    "index",
    "splice"
   ]
  },
  "list_remove_if_exists": {
   "async": false,
   "identifiers": [
    "list_remove",
    "list_includes",
    "list_remove_if_exists",
    "list",
    "item",
    "includes"
   ]
  },
  "list_remove_multiple": {
   "async": false,
   "identifiers": [
    "list_remove",
    "marker",
    "each",
    "list_remove_multiple",
    "removals",
    "list",
    "lambda",
    "r"
   ]
  },
  "list_remove_property": {
   "async": false,
   "identifiers": [
    "list_remove",
    "list_find_property",
    "list_remove_property",
    "languages",
    "property_name",
    "en",
    "found"
   ]
  },
  "list_replace": {
   "async": false,
   "identifiers": [
    "list_insert_generic",
    "list_replace",
    "list",
    "index",
    "value",
    "delete_count"
   ]
  },
  "list_replace_all": {
   "async": false,
   "identifiers": [
    "list_add_multiple",
    "list_empty",
    "list_replace_all",
    "args",
    "args_new"
   ]
  },
  "list_reverse": {
   "async": false,
   "identifiers": [
    "list_reverse",
    "list",
    "reverse"
   ]
  },
  "list_second": {
   "async": false,
   "identifiers": [
    "list_get",
    "list_second",
    "list",
    "index",
    "second"
   ]
  },
  "list_set": {
   "async": false,
   "identifiers": [
    "marker",
    "list_set",
    "list",
    "index",
    "value"
   ]
  },
  "list_single": {
   "async": false,
   "identifiers": [
    "list_size_1_assert",
    "list_first",
    "list_single",
    "list",
    "only"
   ]
  },
  "list_size": {
   "async": false,
   "identifiers": [
    "list_is_assert",
    "list_size",
    "list",
    "size",
    "length"
   ]
  },
  "list_size_1": {
   "async": false,
   "identifiers": [
    "list_size",
    "list_size_1",
    "list",
    "s1"
   ]
  },
  "list_size_1_assert": {
   "async": false,
   "identifiers": [
    "list_size_1_assert_message",
    "string_to",
    "list_size",
    "list_size_1_assert",
    "list",
    "message",
    "message2"
   ]
  },
  "list_size_1_assert_message": {
   "async": false,
   "identifiers": [
    "not",
    "error",
    "list_size_1",
    "list_size_1_assert_message",
    "list",
    "message",
    "a"
   ]
  },
  "list_skip": {
   "async": false,
   "identifiers": [
    "list_slice",
    "list_size",
    "list_skip",
    "list",
    "skip_count",
    "b",
    "skipped"
   ]
  },
  "list_skip_1": {
   "async": false,
   "identifiers": [
    "list_skip",
    "list_skip_1",
    "list",
    "skipped"
   ]
  },
  "list_slice": {
   "async": false,
   "identifiers": [
    "list_slice",
    "list",
    "a",
    "b",
    "sliced",
    "slice"
   ]
  },
  "list_slice_count": {
   "async": false,
   "identifiers": [
    "list_slice",
    "list_slice_count",
    "list",
    "index",
    "count",
    "sliced2"
   ]
  },
  "list_slice_end": {
   "async": false,
   "identifiers": [
    "list_slice",
    "list_size",
    "list_slice_end",
    "prompts",
    "offset",
    "end",
    "start",
    "result"
   ]
  },
  "list_sort_number_mapper": {
   "async": false,
   "identifiers": [
    "list_sort_number_mapper",
    "list",
    "lambda$item",
    "lambda",
    "a",
    "b",
    "va",
    "vb",
    "sort"
   ]
  },
  "list_sort_string": {
   "async": false,
   "identifiers": [
    "list_sort_string",
    "list",
    "sort"
   ]
  },
  "list_sort_string_size": {
   "async": false,
   "identifiers": [
    "string_size",
    "list_sort_number_mapper",
    "list_sort_string_size",
    "list"
   ]
  },
  "list_splice": {
   "async": false,
   "identifiers": [
    "list_splice",
    "list",
    "index",
    "delete_count",
    "value",
    "splice"
   ]
  },
  "list_squash": {
   "async": false,
   "identifiers": [
    "list_is",
    "each",
    "list_adder",
    "list_squash",
    "list",
    "lambda2",
    "la",
    "list_process",
    "lambda",
    "item",
    "l",
    "fn",
    "squashed"
   ]
  },
  "list_swap": {
   "async": false,
   "identifiers": [
    "list_index_of",
    "list_replace",
    "list_swap",
    "list",
    "a",
    "b",
    "ai",
    "bi"
   ]
  },
  "list_take": {
   "async": false,
   "identifiers": [
    "list_slice",
    "marker",
    "list_take",
    "list",
    "count",
    "taken"
   ]
  },
  "list_to": {
   "async": false,
   "identifiers": [
    "list_to",
    "a",
    "v",
    "Array",
    "from"
   ]
  },
  "list_to_dictionary": {
   "async": false,
   "identifiers": [
    "object_property_set",
    "each",
    "list_to_dictionary",
    "list",
    "lambda$item",
    "dictionary",
    "lambda",
    "item",
    "value"
   ]
  },
  "list_to_dictionary_async": {
   "async": true,
   "identifiers": [
    "list_map_unordered_async",
    "marker",
    "object_property_set",
    "list_to_dictionary_async",
    "list",
    "lambda$item",
    "dictionary",
    "lambda",
    "item",
    "value"
   ]
  },
  "list_unique": {
   "async": false,
   "identifiers": [
    "not",
    "each",
    "list_add",
    "list_includes",
    "list_unique",
    "list",
    "unique",
    "lambda",
    "item",
    "a"
   ]
  },
  "list_unique_reverse": {
   "async": false,
   "identifiers": [
    "list_reverse",
    "list_unique",
    "list_copy_reverse",
    "list_unique_reverse",
    "previous",
    "reversed",
    "copy"
   ]
  },
  "list_wait": {
   "async": true,
   "identifiers": [
    "list_wait",
    "list",
    "v",
    "Promise",
    "all"
   ]
  },
  "local_function_path": {
   "async": false,
   "identifiers": [
    "path_join",
    "local_function_path",
    "fn",
    "file_name",
    "joined2",
    "name"
   ]
  },
  "log": {
   "async": false,
   "identifiers": [
    "log_keep",
    "log",
    "message"
   ]
  },
  "log_error": {
   "async": true,
   "identifiers": [
    "log_keep",
    "chalk_red",
    "log_error",
    "prompt",
    "colored"
   ]
  },
  "log_json": {
   "async": false,
   "identifiers": [
    "json_to",
    "log_json",
    "right",
    "message"
   ]
  },
  "log_keep": {
   "async": false,
   "identifiers": [
    "log",
    "log_keep",
    "message",
    "console"
   ]
  },
  "log_unparse": {
   "async": false,
   "identifiers": [
    "js_unparse",
    "log_unparse",
    "node",
    "code"
   ]
  },
  "log_unparse_try": {
   "async": false,
   "identifiers": [
    "log_unparse",
    "list_is",
    "not",
    "js_node_types_is",
    "log_unparse_try",
    "right",
    "a",
    "match"
   ]
  },
  "marker": {
   "async": false,
   "identifiers": [
    "noop",
    "marker",
    "marker_name"
   ]
  },
  "marker_above": {
   "async": true,
   "identifiers": [
    "marker_above_generic",
    "identity",
    "marker_above",
    "code",
    "fn",
    "v"
   ]
  },
  "marker_above_delete": {
   "async": true,
   "identifiers": [
    "list_remove_at",
    "marker_previous_index",
    "object_property_get",
    "function_transform_marker_current",
    "marker",
    "marker_above_delete",
    "lambda",
    "a",
    "p",
    "index",
    "stack2",
    "v"
   ]
  },
  "marker_above_generic": {
   "async": true,
   "identifiers": [
    "function_transform_marker_current",
    "js_auto",
    "list_insert",
    "js_parse_statement",
    "object_property_get",
    "marker_index",
    "marker",
    "marker_above_generic",
    "lambda$index",
    "code",
    "lambda",
    "a",
    "i",
    "index",
    "stack2",
    "statement",
    "ast",
    "v"
   ]
  },
  "marker_assign_replace": {
   "async": true,
   "identifiers": [
    "js_declare_init_set",
    "js_parse_expression",
    "marker_next_get",
    "js_unparse",
    "list_adder_async",
    "function_transform_marker",
    "function_current_get",
    "marker_assign_replace",
    "init_code",
    "f_name",
    "lambda2",
    "la",
    "lambda",
    "a",
    "next",
    "init",
    "list"
   ]
  },
  "marker_assign_replace_string": {
   "async": true,
   "identifiers": [
    "js_code_string",
    "marker_assign_replace",
    "marker_assign_replace_string",
    "value",
    "code_string",
    "v"
   ]
  },
  "marker_below": {
   "async": true,
   "identifiers": [
    "add_1",
    "marker",
    "marker_above_generic",
    "marker_below",
    "code",
    "fn",
    "v"
   ]
  },
  "marker_bottom": {
   "async": true,
   "identifiers": [
    "marker",
    "marker_down_generic",
    "list_index_last",
    "marker_bottom",
    "v2",
    "delta_get",
    "a",
    "choices",
    "index",
    "v"
   ]
  },
  "marker_call": {
   "async": true,
   "identifiers": [
    "js_call_new",
    "js_stack_declaration_asyncify",
    "js_imports_missing_add",
    "list_insert",
    "marker",
    "js_unparse",
    "function_transform_marker",
    "list_adder_async",
    "function_current_get",
    "marker_next_index",
    "marker_call",
    "f_name_call",
    "f_name_current",
    "lambda2",
    "la",
    "lambda",
    "a",
    "stack",
    "stack2",
    "index",
    "ast",
    "declaration",
    "parsed",
    "output",
    "list"
   ]
  },
  "marker_call_atomize": {
   "async": true,
   "identifiers": [
    "js_node_atomize",
    "js_visit_match",
    "js_identifiers",
    "marker_call_replace_generic",
    "marker_call_atomize",
    "input",
    "v",
    "lambda",
    "a",
    "replaced",
    "ast",
    "existing",
    "v_match"
   ]
  },
  "marker_call_replace": {
   "async": true,
   "identifiers": [
    "marker_call_replace_generic",
    "object_replace",
    "js_parse_expression",
    "marker_call_replace",
    "input",
    "code_replacement",
    "v",
    "lambda",
    "a",
    "replaced",
    "replacement"
   ]
  },
  "marker_call_replace_generic": {
   "async": true,
   "identifiers": [
    "js_statement_call_get",
    "js_unparse",
    "js_imports_missing_add",
    "list_get",
    "marker_next_get",
    "function_transform_marker",
    "list_adder_async",
    "function_current_get",
    "integer_to",
    "object_merge",
    "marker_call_replace_generic",
    "input",
    "lambda$a",
    "arg_index",
    "f_name",
    "lambda2",
    "la",
    "lambda",
    "a",
    "next",
    "expression",
    "arguments",
    "arguments2",
    "replaced",
    "callee",
    "arg_index_at",
    "to",
    "ast",
    "output",
    "list"
   ]
  },
  "marker_current_set": {
   "async": true,
   "identifiers": [
    "data_path",
    "data_transform",
    "marker_current_set",
    "name_marker",
    "lambda",
    "previous",
    "d_path"
   ]
  },
  "marker_down": {
   "async": true,
   "identifiers": [
    "marker",
    "marker_down_generic",
    "integer_to",
    "marker_down",
    "delta",
    "v",
    "delta_get",
    "i"
   ]
  },
  "marker_down_1": {
   "async": true,
   "identifiers": [
    "marker_down",
    "marker",
    "marker_down_1",
    "v"
   ]
  },
  "marker_down_choices": {
   "async": true,
   "identifiers": [
    "list_map_unordered_async",
    "marker_down_choices_lambda",
    "list_is",
    "list_map_property",
    "function_transform_marker",
    "function_current_get",
    "js_unparse",
    "marker_down_choices",
    "f_name",
    "choices",
    "v",
    "lambda",
    "a",
    "vs",
    "nodes",
    "lambda2",
    "item",
    "l",
    "code"
   ]
  },
  "marker_down_choices_lambda": {
   "async": false,
   "identifiers": [
    "list_includes",
    "js_declaration_to_block_body",
    "js_declaration_single",
    "list_adder",
    "js_visit",
    "js_stack_list_block_is",
    "marker_down_choices_lambda",
    "stack2",
    "stack1",
    "ast",
    "declaration",
    "body_block",
    "lambda3",
    "la",
    "lambda2",
    "v",
    "stack",
    "node",
    "includes",
    "choices"
   ]
  },
  "marker_down_generic": {
   "async": true,
   "identifiers": [
    "function_transform_marker_current",
    "list_insert",
    "list_index_of",
    "list_remove",
    "marker_down_generic",
    "delta_get",
    "v",
    "lambda",
    "a",
    "stack2",
    "stack1",
    "index",
    "index_new",
    "choices"
   ]
  },
  "marker_enter": {
   "async": true,
   "identifiers": [
    "list_get",
    "marker_next_index",
    "object_property_get",
    "null_not_is",
    "js_declaration_to_block_body",
    "list_add_first",
    "list_remove",
    "js_node_type",
    "js_types_function_includes",
    "function_transform_marker_current",
    "marker",
    "marker_enter",
    "lambda",
    "a",
    "ni",
    "index",
    "stack1",
    "stack2",
    "body",
    "next",
    "nt",
    "consequent",
    "nn",
    "v"
   ]
  },
  "marker_expand": {
   "async": true,
   "identifiers": [
    "js_expand_generic",
    "marker_next_get",
    "function_transform_marker",
    "function_current_get",
    "marker_expand",
    "f_name",
    "v",
    "lambda2",
    "a",
    "next",
    "index",
    "stack2",
    "ast",
    "inserted"
   ]
  },
  "marker_first": {
   "async": false,
   "identifiers": [
    "marker_first_index",
    "string_to",
    "marker_first",
    "index_value",
    "index"
   ]
  },
  "marker_first_index": {
   "async": false,
   "identifiers": [
    "marker_first_index",
    "index"
   ]
  },
  "marker_functionize": {
   "async": true,
   "identifiers": [
    "list_remove_multiple",
    "not",
    "object_property_equals",
    "js_outside_move",
    "js_parse_statement",
    "js_code_call_args_await_maybe",
    "js_parse_expression",
    "list_difference",
    "js_identifier_defineds",
    "range",
    "list_add_multiple",
    "js_declaration_to_block_body",
    "js_node_types_includes",
    "list_any",
    "js_parse_statement_module",
    "js_code_declaration",
    "list_range",
    "marker_previous_index",
    "js_marker_named_ast_arg",
    "marker_next_index",
    "function_current_get",
    "js_node_type_is",
    "list_get_end",
    "js_visit_type",
    "function_transform",
    "list_insert",
    "list_remove",
    "assert",
    "list_map",
    "list_add",
    "object_property_get",
    "list_includes",
    "list_adder_unique",
    "functions_names",
    "marker_functionize",
    "m_name_from",
    "m_name_to",
    "f_name_new",
    "f_name",
    "lambda_marker",
    "ast",
    "a_from",
    "index",
    "index_from",
    "a_to",
    "index_to",
    "stack2",
    "stack2_from",
    "stack2_to",
    "lambda",
    "r",
    "result",
    "async_is",
    "code_declaration",
    "declaration",
    "body_block",
    "body",
    "lambda3",
    "la",
    "lambda2",
    "v",
    "defineds",
    "node",
    "stack",
    "stack1",
    "name",
    "a",
    "missing",
    "other",
    "list",
    "items",
    "code",
    "parsed"
   ]
  },
  "marker_if_test_replace": {
   "async": true,
   "identifiers": [
    "object_property_set",
    "js_parse_expression",
    "js_stack_last",
    "function_transform_marker_current",
    "marker",
    "marker_if_test_replace",
    "replacement",
    "lambda",
    "a",
    "stack",
    "last",
    "expression",
    "v"
   ]
  },
  "marker_index": {
   "async": false,
   "identifiers": [
    "marker",
    "list_index_of",
    "object_merge",
    "marker_index",
    "a",
    "stack2",
    "stack1",
    "index",
    "i"
   ]
  },
  "marker_leave": {
   "async": true,
   "identifiers": [
    "list_insert",
    "list_remove",
    "list_get_end_2",
    "list_get_end_1",
    "list_index_of",
    "list_is_assert",
    "list_get_end",
    "function_transform_marker_current",
    "marker",
    "marker_leave",
    "lambda",
    "a",
    "stack",
    "stack4",
    "stack5",
    "index",
    "stack1",
    "stack2",
    "v"
   ]
  },
  "marker_move": {
   "async": true,
   "identifiers": [
    "js_marker_named_ast_arg",
    "marker_next_index",
    "marker_next_get",
    "function_current_get",
    "marker",
    "function_transform",
    "list_insert",
    "list_remove",
    "marker_move",
    "m_name_from",
    "m_name_to",
    "f_name",
    "lambda_marker",
    "ast",
    "a_from",
    "next",
    "stack2",
    "stack2_from",
    "a_to",
    "index",
    "stack2_to"
   ]
  },
  "marker_new": {
   "async": true,
   "identifiers": [
    "marker_current_set",
    "js_marker_insert",
    "marker",
    "marker_next_index",
    "function_transform_marker",
    "function_current_get",
    "marker_new",
    "f_name",
    "v",
    "lambda",
    "a",
    "index",
    "stack2",
    "name"
   ]
  },
  "marker_next": {
   "async": true,
   "identifiers": [
    "marker_next_get",
    "js_unparse",
    "list_adder_async",
    "function_transform_marker",
    "function_current_get",
    "marker_next",
    "f_name",
    "lambda2",
    "la",
    "lambda",
    "a",
    "next",
    "list"
   ]
  },
  "marker_next_await": {
   "async": true,
   "identifiers": [
    "marker",
    "js_await",
    "object_property_get",
    "object_property_set",
    "js_node_type_is_assert",
    "list_adder_async",
    "marker_next_get",
    "function_transform_marker",
    "function_current_get",
    "js_unparse",
    "marker_next_await",
    "f_name",
    "lambda2",
    "la",
    "lambda",
    "a",
    "next",
    "expression",
    "awaited",
    "code",
    "list"
   ]
  },
  "marker_next_declare_single_init": {
   "async": false,
   "identifiers": [
    "js_declare_single_init",
    "marker_next_get",
    "marker_next_declare_single_init",
    "a",
    "next",
    "oe"
   ]
  },
  "marker_next_declare_single_init_elements": {
   "async": false,
   "identifiers": [
    "object_property_get",
    "marker_next_declare_single_init",
    "marker_next_declare_single_init_elements",
    "a",
    "array_expression",
    "elements"
   ]
  },
  "marker_next_delete": {
   "async": true,
   "identifiers": [
    "list_remove_at",
    "marker_next_index",
    "list_adder_async",
    "function_transform_marker",
    "function_current_get",
    "marker_next_delete",
    "f_name",
    "lambda2",
    "la",
    "lambda",
    "a",
    "index",
    "stack2",
    "list"
   ]
  },
  "marker_next_delete_multiple": {
   "async": true,
   "identifiers": [
    "each_range_async",
    "marker_next_delete",
    "marker",
    "marker_next_delete_multiple",
    "count",
    "code",
    "lambda"
   ]
  },
  "marker_next_get": {
   "async": false,
   "identifiers": [
    "object_merge",
    "marker_next_index",
    "list_get",
    "marker_next_get",
    "a",
    "ni",
    "index",
    "stack2",
    "next",
    "n",
    "to"
   ]
  },
  "marker_next_index": {
   "async": false,
   "identifiers": [
    "list_index_of_next",
    "object_merge",
    "marker_next_index",
    "a",
    "stack2",
    "stack1",
    "index",
    "to"
   ]
  },
  "marker_param_add": {
   "async": true,
   "identifiers": [
    "js_declaration_param_add",
    "js_stack_last_function",
    "function_transform_marker",
    "list_adder_async",
    "function_current_get",
    "marker_param_add",
    "param_name",
    "f_name_current",
    "lambda2",
    "la",
    "lambda",
    "a",
    "stack",
    "f",
    "list"
   ]
  },
  "marker_previous_index": {
   "async": false,
   "identifiers": [
    "list_index_of_previous",
    "object_merge",
    "marker_previous_index",
    "a",
    "stack2",
    "stack1",
    "index",
    "p"
   ]
  },
  "marker_remove": {
   "async": true,
   "identifiers": [
    "function_transform_marker_all",
    "function_current_get",
    "list_remove",
    "marker_remove",
    "f_name",
    "lambda",
    "a",
    "stack2",
    "stack1"
   ]
  },
  "marker_remove_marker_top": {
   "async": true,
   "identifiers": [
    "marker_top",
    "marker_remove",
    "marker",
    "marker_remove_marker_top",
    "v"
   ]
  },
  "marker_rename": {
   "async": true,
   "identifiers": [
    "js_string",
    "object_replace",
    "js_node_type_not_is",
    "list_single",
    "not",
    "list_size_1",
    "function_transform_marker_specified",
    "function_current_get",
    "marker_rename",
    "from",
    "to",
    "lambda",
    "a",
    "node",
    "arguments",
    "arguments2",
    "s1",
    "a0",
    "nti",
    "s",
    "f_name_current",
    "v"
   ]
  },
  "marker_screen_add": {
   "async": true,
   "identifiers": [
    "marker_next_declare_single_init",
    "function_param_new",
    "function_new",
    "js_parse_expression",
    "list_add",
    "js_property",
    "function_transform_marker_specified",
    "app_name_prefixed",
    "function_name_combine",
    "data_app_current_get",
    "marker",
    "marker_screen_add",
    "screen_name",
    "a_name",
    "prefixed",
    "combined",
    "lambda",
    "a",
    "oe",
    "properties",
    "key",
    "combined_screen",
    "value",
    "p",
    "v2"
   ]
  },
  "marker_top": {
   "async": true,
   "identifiers": [
    "list_empty_not_is",
    "js_identifier_unique",
    "js_marker_insert",
    "js_declaration_single_block_body",
    "js_imports_missing_add",
    "function_current_get",
    "function_transform",
    "marker",
    "js_markers",
    "list_map",
    "js_marker_name_get",
    "marker_top",
    "f_name",
    "v",
    "lambda",
    "ast",
    "markers",
    "ne",
    "names",
    "name_next",
    "body"
   ]
  },
  "marker_up": {
   "async": true,
   "identifiers": [
    "marker",
    "marker_down_generic",
    "integer_to",
    "marker_up",
    "delta",
    "v",
    "delta_get",
    "i",
    "ni"
   ]
  },
  "marker_up_1": {
   "async": true,
   "identifiers": [
    "marker_up",
    "marker",
    "marker_up_1",
    "v"
   ]
  },
  "messenger_reply": {
   "async": true,
   "identifiers": [
    "object_property_get",
    "list_last",
    "string_split_newline",
    "object_property_set",
    "messenger_reply_messages_transform",
    "list_join_space",
    "messenger_reply_messages_message",
    "list_map_property",
    "messenger_reply_unreplied",
    "messenger_reply_wait",
    "list_filter_ends_with_not_any",
    "list_map",
    "list_first",
    "object_properties",
    "messenger_reply_messages_urls_transform",
    "messenger_reply_messages",
    "messenger_reply_puppeteer",
    "command_line_read_empty",
    "marker",
    "bind_property",
    "keyboard_type_delay",
    "messenger_reply",
    "lambda2",
    "page",
    "messages_urls",
    "transform_inner",
    "mu",
    "properties",
    "skips",
    "lambda4",
    "s",
    "v",
    "mapped",
    "filtered",
    "first",
    "messages",
    "mine_last",
    "unreplied",
    "message",
    "mine_last_lines",
    "mine_last_lines_last",
    "property_name",
    "mapped2",
    "joined",
    "lambda",
    "messages2",
    "answer",
    "p",
    "focus",
    "fn",
    "keyboard",
    "press"
   ]
  },
  "messenger_reply_login": {
   "async": true,
   "identifiers": [
    "messenger_reply_url",
    "command_line_read_empty",
    "import_install",
    "messenger_reply_login",
    "chromium",
    "firefox",
    "webkit",
    "browser",
    "launch",
    "headless",
    "context",
    "newContext",
    "page",
    "newPage",
    "v",
    "goto",
    "storageState",
    "path",
    "close"
   ]
  },
  "messenger_reply_messages": {
   "async": true,
   "identifiers": [
    "messenger_reply_messages_message",
    "messenger_reply_messages_name",
    "messenger_reply_messages_me",
    "messenger_reply_wait",
    "messenger_reply_messages_urls_add",
    "string_empty_is",
    "string_trim",
    "list_adder_async",
    "list_empty_is",
    "messenger_reply_messages",
    "page",
    "url",
    "goto",
    "conversation",
    "$",
    "lambda6",
    "la",
    "children",
    "$$",
    "c",
    "children2",
    "c2",
    "lambda2",
    "node",
    "v3",
    "parentElement",
    "tagName",
    "parentTag",
    "evaluate",
    "message",
    "lambda",
    "e",
    "lambda4",
    "imgs",
    "lambda3",
    "img",
    "v4",
    "getComputedStyle",
    "borderRadius",
    "lambda5",
    "v6",
    "src",
    "v5",
    "filter",
    "map",
    "$$eval",
    "v2",
    "textContent",
    "name",
    "messages"
   ]
  },
  "messenger_reply_messages_me": {
   "async": false,
   "identifiers": [
    "messenger_reply_messages_me",
    "v"
   ]
  },
  "messenger_reply_messages_message": {
   "async": false,
   "identifiers": [
    "messenger_reply_messages_message",
    "v"
   ]
  },
  "messenger_reply_messages_name": {
   "async": false,
   "identifiers": [
    "messenger_reply_messages_name",
    "v"
   ]
  },
  "messenger_reply_messages_transform": {
   "async": true,
   "identifiers": [
    "object_property_initialize",
    "marker",
    "file_json_transform",
    "folder_user_docs_path",
    "messenger_reply_messages_transform",
    "lambda$messages",
    "fb_path",
    "transform",
    "data",
    "value"
   ]
  },
  "messenger_reply_messages_urls_add": {
   "async": true,
   "identifiers": [
    "messenger_reply_messages_urls_add_multiple",
    "messenger_reply_messages_urls_add",
    "url",
    "urls"
   ]
  },
  "messenger_reply_messages_urls_add_multiple": {
   "async": true,
   "identifiers": [
    "messenger_reply_messages_urls_transform",
    "each",
    "object_property_set",
    "messenger_reply_messages_urls_add_multiple",
    "urls",
    "transform_inner",
    "messages_urls",
    "lambda",
    "url"
   ]
  },
  "messenger_reply_messages_urls_add_page": {
   "async": true,
   "identifiers": [
    "messenger_reply_messages_urls_add_multiple",
    "list_remove_if_exists",
    "puppeteer_hrefs_starts_with",
    "messenger_reply_messages_urls_add_page",
    "page",
    "prefix",
    "urls"
   ]
  },
  "messenger_reply_messages_urls_get": {
   "async": false,
   "identifiers": [
    "object_property_initialize",
    "messenger_reply_messages_urls_get",
    "data",
    "value"
   ]
  },
  "messenger_reply_messages_urls_transform": {
   "async": true,
   "identifiers": [
    "messenger_reply_messages_urls_get",
    "file_json_transform",
    "folder_user_docs_path",
    "messenger_reply_messages_urls_transform",
    "transform_inner",
    "fb_path",
    "transform",
    "data",
    "messages_urls"
   ]
  },
  "messenger_reply_playwright": {
   "async": true,
   "identifiers": [
    "marker",
    "equal",
    "assert",
    "log",
    "bind_property",
    "object_property_get",
    "file_read_json",
    "folder_user_docs_path",
    "keyboard_type_delay",
    "command_line_read_empty",
    "messenger_reply_url",
    "retry_on_error",
    "import_install",
    "messenger_reply_playwright",
    "p",
    "data",
    "pin",
    "chromium",
    "firefox",
    "webkit",
    "browser",
    "lambda2",
    "launch",
    "headless",
    "command",
    "context",
    "newContext",
    "storageState",
    "page",
    "newPage",
    "v",
    "goto",
    "input",
    "waitForSelector",
    "focus",
    "fn",
    "keyboard",
    "locator",
    "count",
    "b",
    "console",
    "nth",
    "click",
    "close"
   ]
  },
  "messenger_reply_puppeteer": {
   "async": true,
   "identifiers": [
    "messenger_reply_user_data_path",
    "messenger_reply_puppeteer",
    "lambda$page",
    "puppeteer",
    "browser",
    "launch",
    "headless",
    "userDataDir",
    "protocolTimeout",
    "page",
    "newPage",
    "close"
   ]
  },
  "messenger_reply_unread_click": {
   "async": true,
   "identifiers": [
    "marker",
    "list_get",
    "puppeteer_matches",
    "messenger_reply_unread_click",
    "page",
    "tag_name",
    "text",
    "matches",
    "m",
    "click"
   ]
  },
  "messenger_reply_unread_collect": {
   "async": true,
   "identifiers": [
    "messenger_reply_puppeteer",
    "http_sleep",
    "each",
    "list_add_if_not_includes",
    "list_remove",
    "string_prefix_without",
    "list_first",
    "list_empty_is",
    "messenger_reply_messages_urls_add_page",
    "messenger_reply_wait",
    "messenger_reply_unread_click",
    "messenger_reply_messages",
    "messenger_reply_url",
    "messenger_reply_unread_collect",
    "page",
    "lambda",
    "v",
    "messages",
    "urls",
    "e",
    "url",
    "prefix",
    "without",
    "selector",
    "link",
    "$",
    "click",
    "waitForSelector",
    "state",
    "urls_new",
    "lambda2",
    "url_new"
   ]
  },
  "messenger_reply_unreplied": {
   "async": false,
   "identifiers": [
    "list_skip",
    "list_index_of",
    "list_last",
    "list_filter_property",
    "messenger_reply_messages_me",
    "messenger_reply_messages_name",
    "messenger_reply_unreplied",
    "messages",
    "property_name",
    "property_value",
    "mine",
    "mine_last",
    "index_last",
    "unreplied",
    "result"
   ]
  },
  "messenger_reply_url": {
   "async": false,
   "identifiers": [
    "messenger_reply_url",
    "v"
   ]
  },
  "messenger_reply_user_data_path": {
   "async": false,
   "identifiers": [
    "messenger_reply_user_data_path",
    "v"
   ]
  },
  "messenger_reply_wait": {
   "async": true,
   "identifiers": [
    "messenger_reply_wait",
    "page",
    "s",
    "message_box",
    "waitForSelector",
    "timeout"
   ]
  },
  "newFunction": {
   "async": true,
   "identifiers": [
    "newFunction"
   ]
  },
  "newline": {
   "async": false,
   "identifiers": [
    "newline",
    "v"
   ]
  },
  "noop": {
   "async": false,
   "identifiers": [
    "noop"
   ]
  },
  "not": {
   "async": false,
   "identifiers": [
    "not",
    "a",
    "n"
   ]
  },
  "npm_install": {
   "async": true,
   "identifiers": [
    "command_line",
    "npm_install",
    "package_name"
   ]
  },
  "null_is": {
   "async": false,
   "identifiers": [
    "null_is",
    "value",
    "n"
   ]
  },
  "null_not_is": {
   "async": false,
   "identifiers": [
    "marker",
    "null_not_is",
    "value",
    "nn"
   ]
  },
  "null_not_is_assert": {
   "async": false,
   "identifiers": [
    "assert",
    "null_not_is",
    "null_not_is_assert",
    "a",
    "nn"
   ]
  },
  "number_is": {
   "async": false,
   "identifiers": [
    "number_is",
    "value",
    "v",
    "isFinite"
   ]
  },
  "number_pad": {
   "async": false,
   "identifiers": [
    "marker",
    "number_pad",
    "num",
    "count",
    "v",
    "String",
    "padStart"
   ]
  },
  "object_assign": {
   "async": false,
   "identifiers": [
    "marker",
    "object_assign",
    "to",
    "from",
    "a",
    "Object",
    "assign"
   ]
  },
  "object_copy": {
   "async": false,
   "identifiers": [
    "object_merge",
    "object_copy",
    "from",
    "copy"
   ]
  },
  "object_invert": {
   "async": false,
   "identifiers": [
    "undefined_not_is_assert",
    "object_property_initialize",
    "each_object",
    "list_add",
    "object_invert",
    "object",
    "inverted",
    "lambda",
    "value",
    "key",
    "list"
   ]
  },
  "object_merge": {
   "async": false,
   "identifiers": [
    "object_merge_generic",
    "object_merge",
    "to",
    "from",
    "strict"
   ]
  },
  "object_merge_generic": {
   "async": false,
   "identifiers": [
    "each",
    "object_properties",
    "object_property_set",
    "object_property_get",
    "object_property_exists",
    "error_json",
    "object_merge_generic",
    "strict",
    "to",
    "from",
    "lambda",
    "property_name",
    "value",
    "list"
   ]
  },
  "object_properties": {
   "async": false,
   "identifiers": [
    "object_properties",
    "obj",
    "properties",
    "Object",
    "getOwnPropertyNames"
   ]
  },
  "object_properties_delete": {
   "async": false,
   "identifiers": [
    "each",
    "object_property_delete",
    "object_properties_delete",
    "data",
    "properties",
    "lambda2",
    "p"
   ]
  },
  "object_properties_delete_all": {
   "async": false,
   "identifiers": [
    "marker",
    "object_property_delete",
    "each",
    "object_properties",
    "object_properties_delete_all",
    "obj",
    "lambda",
    "p",
    "v",
    "list"
   ]
  },
  "object_property_delete": {
   "async": false,
   "identifiers": [
    "object_property_delete",
    "object",
    "property_name"
   ]
  },
  "object_property_equals": {
   "async": false,
   "identifiers": [
    "object_property_get",
    "object_property_equals",
    "item",
    "property_name",
    "property_value",
    "v"
   ]
  },
  "object_property_equals_lambda": {
   "async": false,
   "identifiers": [
    "object_property_equals",
    "object_property_get",
    "object_property_equals_lambda",
    "property_name",
    "property_value",
    "item"
   ]
  },
  "object_property_exists": {
   "async": false,
   "identifiers": [
    "object_property_exists",
    "object",
    "property_name",
    "exists",
    "Object",
    "hasOwn"
   ]
  },
  "object_property_exists_assert": {
   "async": false,
   "identifiers": [
    "assert",
    "object_property_exists",
    "object_property_exists_assert",
    "object",
    "property_name",
    "result"
   ]
  },
  "object_property_exists_equals": {
   "async": false,
   "identifiers": [
    "object_property_equals",
    "object_property_exists",
    "object_property_exists_equals",
    "path",
    "in_progress",
    "value",
    "v"
   ]
  },
  "object_property_exists_not": {
   "async": false,
   "identifiers": [
    "not",
    "object_property_exists",
    "object_property_exists_not",
    "object",
    "property_name",
    "result",
    "n"
   ]
  },
  "object_property_exists_not_assert": {
   "async": false,
   "identifiers": [
    "object_property_exists_not",
    "marker",
    "assert",
    "object_property_exists_not_assert",
    "object",
    "property_name",
    "result"
   ]
  },
  "object_property_from": {
   "async": false,
   "identifiers": [
    "object_property_get",
    "object_property_set",
    "object_property_from",
    "to",
    "property_name",
    "from",
    "value"
   ]
  },
  "object_property_get": {
   "async": false,
   "identifiers": [
    "undefined_not_is_assert_lambda",
    "object_property_get",
    "object",
    "property_name",
    "value",
    "object_get",
    "v"
   ]
  },
  "object_property_get_name": {
   "async": false,
   "identifiers": [
    "object_property_get",
    "object_property_get_name",
    "item",
    "name"
   ]
  },
  "object_property_initialize": {
   "async": false,
   "identifiers": [
    "not",
    "object_property_set",
    "object_property_get",
    "object_property_exists",
    "object_property_initialize",
    "object",
    "property_name",
    "value_initial",
    "exists",
    "value"
   ]
  },
  "object_property_lambda": {
   "async": false,
   "identifiers": [
    "marker",
    "not",
    "object_property_set",
    "object_property_get",
    "object_property_exists",
    "object_property_lambda",
    "object",
    "property_name",
    "lambda",
    "exists",
    "value_set",
    "value"
   ]
  },
  "object_property_lambda_async": {
   "async": true,
   "identifiers": [
    "marker",
    "not",
    "object_property_set",
    "object_property_get",
    "object_property_exists",
    "object_property_lambda_async",
    "object",
    "property_name",
    "lambda",
    "exists",
    "value_set",
    "value"
   ]
  },
  "object_property_set": {
   "async": false,
   "identifiers": [
    "object_property_set",
    "object",
    "property_name",
    "value"
   ]
  },
  "object_property_set_exists_not": {
   "async": false,
   "identifiers": [
    "object_property_set",
    "object_property_exists_not_assert",
    "object_property_set_exists_not",
    "object",
    "property_name",
    "value"
   ]
  },
  "object_replace": {
   "async": false,
   "identifiers": [
    "object_properties_delete_all",
    "object_merge",
    "object_replace",
    "to",
    "from"
   ]
  },
  "path_join": {
   "async": false,
   "identifiers": [
    "assert_arguments",
    "not",
    "folder_previous",
    "path_join",
    "segments",
    "arguments",
    "parts",
    "seg",
    "split",
    "s",
    "length",
    "pop",
    "previous",
    "push",
    "joined",
    "join"
   ]
  },
  "path_name": {
   "async": false,
   "identifiers": [
    "path",
    "path_name",
    "file_path",
    "name",
    "parse"
   ]
  },
  "path_repo_about": {
   "async": false,
   "identifiers": [
    "path_repo_combine",
    "data_path_generic",
    "path_repo_about",
    "repo",
    "f_path",
    "a_path"
   ]
  },
  "path_repo_combine": {
   "async": false,
   "identifiers": [
    "repo_path",
    "path_join",
    "path_repo_combine",
    "repo",
    "f_path",
    "r_path",
    "joined"
   ]
  },
  "path_resolve": {
   "async": true,
   "identifiers": [
    "path_resolve",
    "paths",
    "path",
    "resolve"
   ]
  },
  "prayer_end": {
   "async": false,
   "identifiers": [
    "marker",
    "emoji_pray",
    "prayer_end",
    "v"
   ]
  },
  "prayer_start": {
   "async": false,
   "identifiers": [
    "emoji_trinity",
    "prayer_start",
    "v"
   ]
  },
  "promise_is": {
   "async": false,
   "identifiers": [
    "promise_is",
    "value",
    "v",
    "then",
    "catch"
   ]
  },
  "promise_not_is": {
   "async": false,
   "identifiers": [
    "not",
    "promise_is",
    "promise_not_is",
    "ast",
    "a",
    "n"
   ]
  },
  "promise_wrap": {
   "async": false,
   "identifiers": [
    "promise_wrap",
    "lambda",
    "v",
    "Promise",
    "lambda4",
    "resolve",
    "reject",
    "e"
   ]
  },
  "prompt_previous": {
   "async": true,
   "identifiers": [
    "marker",
    "log_keep",
    "data_prompts",
    "function_aliases_inverted",
    "function_run_line",
    "list_last",
    "list_difference",
    "list_concat",
    "object_property_get",
    "prompt_previous",
    "inverted",
    "prompts",
    "b",
    "name",
    "other",
    "difference",
    "previous",
    "v"
   ]
  },
  "puppeteer_hrefs": {
   "async": true,
   "identifiers": [
    "puppeteer_hrefs",
    "page",
    "lambda3",
    "links",
    "lambda",
    "link",
    "v2",
    "href",
    "lambda2",
    "v3",
    "map",
    "filter",
    "hrefs",
    "$$eval"
   ]
  },
  "puppeteer_hrefs_starts_with": {
   "async": true,
   "identifiers": [
    "puppeteer_hrefs",
    "list_filter_starts_with",
    "puppeteer_hrefs_starts_with",
    "page",
    "prefix",
    "hrefs",
    "filtered"
   ]
  },
  "puppeteer_matches": {
   "async": true,
   "identifiers": [
    "puppeteer_matches",
    "page",
    "tag_name",
    "text",
    "elements",
    "$$",
    "matches",
    "el",
    "lambda",
    "n",
    "v2",
    "textContent",
    "txt",
    "evaluate",
    "push"
   ]
  },
  "python_install": {
   "async": true,
   "identifiers": [
    "command_line",
    "marker",
    "python_install",
    "v"
   ]
  },
  "random": {
   "async": false,
   "identifiers": [
    "random",
    "v",
    "Math"
   ]
  },
  "range": {
   "async": false,
   "identifiers": [
    "marker",
    "list_add",
    "range",
    "count",
    "rr",
    "i"
   ]
  },
  "range_from": {
   "async": false,
   "identifiers": [
    "integer_to",
    "add",
    "list_map",
    "range",
    "marker",
    "range_from",
    "from",
    "to",
    "count",
    "r",
    "lambda",
    "item",
    "s",
    "mapped"
   ]
  },
  "reply": {
   "async": true,
   "identifiers": [
    "list_add_multiple",
    "list_map_property",
    "list_add",
    "object_property_set_exists_not",
    "reply_on_match",
    "ebible_languages_to_bible_folders",
    "object_property_get",
    "list_concat",
    "ebible_references_parse_lines",
    "reply_sequence",
    "list_map_lower",
    "list_filter_empty_not_is",
    "string_split_space",
    "whitespace_normalize",
    "reply",
    "a",
    "input",
    "language_codes",
    "reference",
    "b",
    "concated",
    "bible_folders",
    "fn",
    "lambda",
    "outputs",
    "list",
    "mapped",
    "items",
    "r"
   ]
  },
  "reply_on_match": {
   "async": false,
   "identifiers": [
    "reply_on_match",
    "wrapped_fn",
    "on_match",
    "fn",
    "reply_on_match_inner",
    "a",
    "matches"
   ]
  },
  "reply_sequence": {
   "async": false,
   "identifiers": [
    "object_property_get",
    "list_get",
    "each_index",
    "reply_sequence",
    "sequence",
    "fn",
    "reply_sequence_matches",
    "a",
    "tokens",
    "matches",
    "lambda",
    "sequence_item",
    "index",
    "token"
   ]
  },
  "reply_test": {
   "async": true,
   "identifiers": [
    "reply",
    "list_first",
    "object_properties",
    "messenger_reply_messages_transform",
    "reply_test",
    "messages",
    "lambda",
    "m",
    "properties",
    "first",
    "outputs",
    "input",
    "language_codes"
   ]
  },
  "repos_acronyms_to_names": {
   "async": true,
   "identifiers": [
    "repos_names",
    "object_invert",
    "repo_acronym_get",
    "list_to_dictionary_async",
    "repos_acronyms_to_names",
    "repos",
    "dictionary",
    "inverted"
   ]
  },
  "repos_folder": {
   "async": false,
   "identifiers": [
    "folder_previous",
    "repos_folder",
    "previous"
   ]
  },
  "repos_gitignore_overwrite": {
   "async": true,
   "identifiers": [
    "file_copy_overwrite",
    "equal_not",
    "path_resolve",
    "list_map_unordered_async",
    "list_map_path_join",
    "repo_path",
    "list_map",
    "repos_names",
    "marker",
    "repos_gitignore_overwrite",
    "repos",
    "f_name",
    "from",
    "mapped",
    "mapped2",
    "lambda",
    "p",
    "to",
    "waited"
   ]
  },
  "repos_names": {
   "async": true,
   "identifiers": [
    "repos_folder",
    "folder_read",
    "marker",
    "repos_names",
    "path_folder",
    "rns"
   ]
  },
  "repos_paths_map_unordered": {
   "async": true,
   "identifiers": [
    "marker",
    "list_map_unordered_async",
    "repo_path",
    "repos_names",
    "repos_paths_map_unordered",
    "lambda$folder",
    "all",
    "lambda",
    "repo_name",
    "folder",
    "mapped",
    "result"
   ]
  },
  "repo_acronym_get": {
   "async": true,
   "identifiers": [
    "path_repo_about",
    "data_get",
    "marker",
    "repo_acronym_get",
    "repo",
    "a_path",
    "value"
   ]
  },
  "repo_acronym_set": {
   "async": true,
   "identifiers": [
    "path_repo_about",
    "data_set",
    "marker",
    "repo_acronym_set",
    "repo",
    "value",
    "a_path",
    "lambda",
    "previous"
   ]
  },
  "repo_acronym_to_name": {
   "async": true,
   "identifiers": [
    "repos_acronyms_to_names",
    "list_single",
    "object_property_get",
    "repo_acronym_to_name",
    "acronym",
    "inverted",
    "repos_matching",
    "repo_name"
   ]
  },
  "repo_acronym_to_path": {
   "async": true,
   "identifiers": [
    "path_repo",
    "repo_acronym_to_name",
    "repo_acronym_to_path",
    "acronym",
    "repo_name",
    "folder"
   ]
  },
  "repo_exists_assert": {
   "async": true,
   "identifiers": [
    "list_includes_assert",
    "repos_names",
    "repo_exists_assert",
    "repo_name",
    "all"
   ]
  },
  "repo_path": {
   "async": false,
   "identifiers": [
    "repos_folder",
    "marker",
    "path_join",
    "repo_path",
    "repo_name",
    "previous",
    "r_path"
   ]
  },
  "repo_path_combine": {
   "async": false,
   "identifiers": [
    "path_join",
    "repo_path",
    "repo_path_combine",
    "repo_name",
    "f_path",
    "folder_name",
    "combined"
   ]
  },
  "retry": {
   "async": true,
   "identifiers": [
    "sleep",
    "error_json",
    "list_adder_async",
    "each_range_async",
    "log_keep",
    "retry",
    "count",
    "lambda",
    "wait",
    "result",
    "success",
    "lambda3",
    "la",
    "lambda2",
    "e",
    "message",
    "errors"
   ]
  },
  "retry_on_error": {
   "async": true,
   "identifiers": [
    "catch_only_run_async",
    "command_line_log",
    "retry_on_error",
    "command",
    "lambda2",
    "error_text",
    "lambda",
    "stdout"
   ]
  },
  "roman_to_integer": {
   "async": false,
   "identifiers": [
    "not",
    "roman_to_integer",
    "input",
    "unicodeToAscii",
    "roman",
    "map",
    "Ⅰ",
    "Ⅱ",
    "Ⅲ",
    "Ⅳ",
    "Ⅴ",
    "Ⅵ",
    "Ⅶ",
    "Ⅷ",
    "Ⅸ",
    "Ⅹ",
    "Ⅺ",
    "Ⅻ",
    "Ⅼ",
    "Ⅽ",
    "Ⅾ",
    "Ⅿ",
    "lambda",
    "ch",
    "v",
    "v3",
    "split",
    "join",
    "romanToInt",
    "values",
    "I",
    "V",
    "X",
    "L",
    "C",
    "D",
    "M",
    "total",
    "i",
    "length",
    "v1",
    "v2",
    "parseRomanOrInteger",
    "match",
    "romanPart",
    "suffix",
    "asciiRoman",
    "v5",
    "v6"
   ]
  },
  "round": {
   "async": false,
   "identifiers": [
    "round",
    "n",
    "rounded",
    "Math"
   ]
  },
  "s5": {
   "async": false,
   "identifiers": [
    "s5"
   ]
  },
  "s5_inner": {
   "async": true,
   "identifiers": [
    "sleep",
    "log",
    "s5_inner",
    "ms"
   ]
  },
  "sandbox": {
   "async": true,
   "identifiers": [
    "ebible_references_parse_lines",
    "ebible_folder_english",
    "bible_verses_encouragement",
    "marker",
    "sandbox",
    "v",
    "en",
    "r",
    "list"
   ]
  },
  "sandbox_2": {
   "async": true,
   "identifiers": [
    "command_line_cmd",
    "marker",
    "folder_user",
    "ebible_verses",
    "json_to",
    "file_write",
    "file_temp",
    "list_join_space",
    "list_map_property",
    "ebible_chapters_each_verses_list",
    "ebible_books_to_chapter_codes",
    "ebible_version_books_testament_apocrypha",
    "ebible_chapters_each_verses_check",
    "path_join",
    "sandbox_2",
    "bible_folder",
    "chapter_code",
    "verses",
    "mapped",
    "text",
    "v2",
    "lambda",
    "temp_path",
    "folder",
    "f",
    "o",
    "output_path",
    "contents",
    "c",
    "newLocal",
    "stdout",
    "books",
    "list",
    "each_chapter",
    "joined"
   ]
  },
  "sandbox_3": {
   "async": false,
   "identifiers": [
    "marker",
    "sandbox_3"
   ]
  },
  "sandbox_4_a": {
   "async": true,
   "identifiers": [
    "list_filter_starts_with_any",
    "list_map_property",
    "ebible_version_books",
    "list_map_unordered_async",
    "each_async",
    "list_first",
    "list_map_whitespace_normalize",
    "list_second",
    "string_split_semicolon",
    "list_map",
    "list_map_split_comma",
    "string_split_newline",
    "file_read",
    "folder_user_docs_path",
    "marker",
    "sandbox_4_a",
    "file_path",
    "contents",
    "split",
    "split2",
    "mapped3",
    "lambda",
    "item",
    "first",
    "second",
    "split3",
    "mapped2",
    "lambda2",
    "item2",
    "books_all",
    "bible_folders",
    "mapped",
    "books",
    "verse_references",
    "list",
    "v"
   ]
  },
  "sandbox_5": {
   "async": true,
   "identifiers": [
    "s5_inner",
    "sandbox_5"
   ]
  },
  "sandbox_5_a": {
   "async": false,
   "identifiers": [
    "assert_arguments",
    "sandbox_5_a",
    "a",
    "arguments",
    "v"
   ]
  },
  "schtasks_query": {
   "async": true,
   "identifiers": [
    "command_line_schtasks",
    "throws_not_async",
    "command_line",
    "schtasks_query",
    "name",
    "lambda2",
    "command",
    "success"
   ]
  },
  "search_generic": {
   "async": false,
   "identifiers": [
    "list_to_dictionary",
    "object_property_set",
    "each",
    "string_includes",
    "list_all",
    "list_filter",
    "string_split",
    "log",
    "search_generic",
    "search",
    "list",
    "value_get",
    "terms",
    "lambda2",
    "n",
    "lambda",
    "term",
    "v",
    "v2",
    "f_names_search",
    "result"
   ]
  },
  "server": {
   "async": false,
   "identifiers": [
    "folder_previous",
    "log_keep",
    "path_join",
    "express",
    "path",
    "fileURLToPath",
    "folder_public",
    "server",
    "app",
    "port",
    "__filename",
    "import",
    "meta",
    "url",
    "__dirname",
    "dirname",
    "result",
    "previous",
    "result2",
    "v",
    "static",
    "use",
    "lambda",
    "listen"
   ]
  },
  "sleep": {
   "async": true,
   "identifiers": [
    "sleep",
    "ms",
    "Promise",
    "lambda5",
    "resolve",
    "v",
    "setTimeout"
   ]
  },
  "storage_local_get": {
   "async": false,
   "identifiers": [
    "null_is",
    "json_from",
    "marker",
    "storage_local_key_get",
    "storage_local_get",
    "app_fn",
    "key",
    "storage_local_key",
    "json",
    "localStorage",
    "getItem",
    "n",
    "value"
   ]
  },
  "storage_local_get_context": {
   "async": false,
   "identifiers": [
    "storage_local_get",
    "storage_local_get_context",
    "context",
    "key",
    "app_fn",
    "value"
   ]
  },
  "storage_local_initialize": {
   "async": false,
   "identifiers": [
    "storage_local_set",
    "null_is",
    "storage_local_get",
    "marker",
    "storage_local_initialize",
    "app_fn",
    "key",
    "value_initial",
    "value",
    "n"
   ]
  },
  "storage_local_initialize_context": {
   "async": false,
   "identifiers": [
    "storage_local_initialize",
    "marker",
    "storage_local_initialize_context",
    "context",
    "key",
    "value_initial",
    "app_fn",
    "value"
   ]
  },
  "storage_local_key_get": {
   "async": false,
   "identifiers": [
    "storage_local_key_get",
    "app_fn",
    "key",
    "ley",
    "name"
   ]
  },
  "storage_local_set": {
   "async": false,
   "identifiers": [
    "json_to",
    "storage_local_key_get",
    "storage_local_set",
    "app_fn",
    "key",
    "value",
    "storage_local_key",
    "v",
    "localStorage",
    "setItem"
   ]
  },
  "storage_local_set_context": {
   "async": false,
   "identifiers": [
    "storage_local_set",
    "storage_local_set_context",
    "context",
    "key",
    "value",
    "app_fn"
   ]
  },
  "string_base64_to": {
   "async": false,
   "identifiers": [
    "browser_is",
    "string_base64_to",
    "s",
    "b",
    "b64",
    "btoa",
    "b64node",
    "Buffer",
    "from",
    "toString"
   ]
  },
  "string_dot": {
   "async": false,
   "identifiers": [
    "string_dot",
    "v"
   ]
  },
  "string_empty": {
   "async": false,
   "identifiers": [
    "string_empty"
   ]
  },
  "string_empty_is": {
   "async": false,
   "identifiers": [
    "string_empty_is",
    "s",
    "e"
   ]
  },
  "string_empty_not_is": {
   "async": false,
   "identifiers": [
    "string_empty_is",
    "string_empty_not_is",
    "name",
    "ne"
   ]
  },
  "string_empty_not_is_assert": {
   "async": false,
   "identifiers": [
    "assert",
    "string_empty_not_is",
    "string_empty_not_is_assert",
    "task_name",
    "ne"
   ]
  },
  "string_ends_with": {
   "async": false,
   "identifiers": [
    "string_ends_with",
    "s",
    "suffix",
    "ew",
    "endsWith"
   ]
  },
  "string_ends_with_not": {
   "async": false,
   "identifiers": [
    "not",
    "string_ends_with",
    "string_ends_with_not",
    "item",
    "suffix",
    "a",
    "ewn"
   ]
  },
  "string_ends_with_space": {
   "async": false,
   "identifiers": [
    "string_ends_with",
    "marker",
    "string_ends_with_space",
    "s",
    "sw2"
   ]
  },
  "string_includes": {
   "async": false,
   "identifiers": [
    "string_is_assert_json",
    "string_is_assert_message",
    "assert_message",
    "json_to",
    "string_includes",
    "string",
    "item",
    "o",
    "v",
    "includes"
   ]
  },
  "string_is": {
   "async": false,
   "identifiers": [
    "string_is",
    "value",
    "v"
   ]
  },
  "string_is_assert": {
   "async": false,
   "identifiers": [
    "assert",
    "string_is",
    "string_is_assert",
    "value",
    "b"
   ]
  },
  "string_is_assert_json": {
   "async": false,
   "identifiers": [
    "string_is_assert_message",
    "json_to",
    "string_is_assert_json",
    "value",
    "o",
    "message"
   ]
  },
  "string_is_assert_message": {
   "async": false,
   "identifiers": [
    "marker",
    "assert",
    "string_is",
    "assert_message",
    "string_is_assert_message",
    "value",
    "message",
    "b",
    "v"
   ]
  },
  "string_letters_only": {
   "async": false,
   "identifiers": [
    "marker",
    "string_letters_only",
    "str",
    "letters",
    "replace"
   ]
  },
  "string_list_to": {
   "async": false,
   "identifiers": [
    "undefined",
    "string_list_to",
    "str",
    "segmenter",
    "Intl",
    "Segmenter",
    "granularity",
    "lambda",
    "s",
    "v",
    "segment",
    "v2",
    "list",
    "Array",
    "from"
   ]
  },
  "string_lord_bless": {
   "async": false,
   "identifiers": [
    "string_may_the_lord",
    "string_lord_bless",
    "v"
   ]
  },
  "string_lord_bless_your": {
   "async": false,
   "identifiers": [
    "string_lord_bless",
    "string_lord_bless_your",
    "blessing"
   ]
  },
  "string_lower_to": {
   "async": false,
   "identifiers": [
    "marker",
    "string_lower_to",
    "s",
    "lower",
    "toLowerCase"
   ]
  },
  "string_may_the_lord": {
   "async": false,
   "identifiers": [
    "string_may_the_lord",
    "v"
   ]
  },
  "string_pad": {
   "async": false,
   "identifiers": [
    "string_pad",
    "padding",
    "s",
    "padded"
   ]
  },
  "string_padded_is": {
   "async": false,
   "identifiers": [
    "string_ends_with",
    "string_starts_with",
    "string_padded_is",
    "s",
    "padding",
    "sw",
    "ew",
    "p"
   ]
  },
  "string_pad_space": {
   "async": false,
   "identifiers": [
    "string_pad",
    "string_pad_space",
    "verse_number",
    "padded"
   ]
  },
  "string_prefix_without": {
   "async": false,
   "identifiers": [
    "string_skip",
    "string_starts_with",
    "string_ends_with",
    "error",
    "string_slice",
    "string_size",
    "string_prefix_without",
    "s",
    "prefix",
    "skipped"
   ]
  },
  "string_replace": {
   "async": false,
   "identifiers": [
    "list_join",
    "string_split",
    "marker",
    "string_replace",
    "s",
    "from",
    "to",
    "split",
    "replaced"
   ]
  },
  "string_size": {
   "async": false,
   "identifiers": [
    "string_size",
    "s",
    "v",
    "length"
   ]
  },
  "string_size_less_1": {
   "async": false,
   "identifiers": [
    "string_size",
    "string_size_less_1",
    "typed",
    "sz",
    "sz1"
   ]
  },
  "string_skip": {
   "async": false,
   "identifiers": [
    "string_slice",
    "string_size",
    "string_skip",
    "s",
    "skip_count",
    "b",
    "skipped"
   ]
  },
  "string_skip_while": {
   "async": false,
   "identifiers": [
    "string_skip",
    "not",
    "string_skip_while",
    "lambda$s",
    "s",
    "any"
   ]
  },
  "string_slice": {
   "async": false,
   "identifiers": [
    "string_slice",
    "s",
    "a",
    "b",
    "v",
    "slice"
   ]
  },
  "string_split": {
   "async": false,
   "identifiers": [
    "string_split",
    "s",
    "separator",
    "split"
   ]
  },
  "string_split_colon": {
   "async": false,
   "identifiers": [
    "string_split",
    "string_split_colon",
    "chapter_verses",
    "split3"
   ]
  },
  "string_split_comma": {
   "async": false,
   "identifiers": [
    "string_split",
    "string_split_comma",
    "f_names",
    "split"
   ]
  },
  "string_split_dash": {
   "async": false,
   "identifiers": [
    "string_split",
    "string_split_dash",
    "second",
    "split4"
   ]
  },
  "string_split_empty": {
   "async": false,
   "identifiers": [
    "string_split",
    "string_split_empty",
    "s",
    "split"
   ]
  },
  "string_split_newline": {
   "async": false,
   "identifiers": [
    "newline",
    "marker",
    "string_split",
    "string_split_newline",
    "list",
    "separator",
    "split"
   ]
  },
  "string_split_semicolon": {
   "async": false,
   "identifiers": [
    "marker",
    "string_split",
    "string_split_semicolon",
    "s",
    "split3"
   ]
  },
  "string_split_semicolon_space": {
   "async": false,
   "identifiers": [
    "string_split",
    "string_split_semicolon_space",
    "s",
    "split3"
   ]
  },
  "string_split_space": {
   "async": false,
   "identifiers": [
    "string_split",
    "string_split_space",
    "s",
    "split"
   ]
  },
  "string_starts_with": {
   "async": false,
   "identifiers": [
    "string_starts_with",
    "s",
    "prefix",
    "sw",
    "startsWith"
   ]
  },
  "string_starts_with_digit": {
   "async": false,
   "identifiers": [
    "list_any_starts_with",
    "digits",
    "string_starts_with_digit",
    "item2",
    "d",
    "any"
   ]
  },
  "string_starts_with_dot": {
   "async": false,
   "identifiers": [
    "string_starts_with",
    "string_starts_with_dot",
    "s",
    "sw2"
   ]
  },
  "string_starts_with_not": {
   "async": false,
   "identifiers": [
    "not",
    "string_starts_with",
    "string_starts_with_not",
    "item",
    "book_code",
    "a",
    "sw"
   ]
  },
  "string_starts_with_space": {
   "async": false,
   "identifiers": [
    "marker",
    "string_starts_with",
    "string_starts_with_space",
    "s",
    "sw2"
   ]
  },
  "string_suffix_change": {
   "async": false,
   "identifiers": [
    "string_suffix_without",
    "string_suffix_change",
    "input",
    "ending_old",
    "ending_new",
    "without",
    "changed"
   ]
  },
  "string_suffix_without": {
   "async": false,
   "identifiers": [
    "not",
    "string_ends_with",
    "error",
    "string_slice",
    "string_size",
    "string_suffix_without",
    "s",
    "suffix",
    "a",
    "without"
   ]
  },
  "string_take": {
   "async": false,
   "identifiers": [
    "string_slice",
    "string_take",
    "s",
    "count",
    "taken"
   ]
  },
  "string_take_less_1": {
   "async": false,
   "identifiers": [
    "string_take",
    "string_size_less_1",
    "string_take_less_1",
    "typed",
    "sz1"
   ]
  },
  "string_the_servant_of_god": {
   "async": false,
   "identifiers": [
    "string_the_servant_of_god",
    "v2"
   ]
  },
  "string_the_servant_of_god_is": {
   "async": false,
   "identifiers": [
    "string_the_servant_of_god",
    "string_the_servant_of_god_is",
    "v"
   ]
  },
  "string_to": {
   "async": false,
   "identifiers": [
    "string_to",
    "input",
    "s",
    "toString"
   ]
  },
  "string_trim": {
   "async": false,
   "identifiers": [
    "string_trim",
    "message",
    "v7",
    "trim"
   ]
  },
  "string_trim_right": {
   "async": false,
   "identifiers": [
    "string_size",
    "string_take",
    "marker",
    "not",
    "string_trim_right",
    "lambda$s",
    "s",
    "any",
    "z"
   ]
  },
  "string_upper_to": {
   "async": false,
   "identifiers": [
    "string_upper_to",
    "s",
    "u",
    "toUpperCase"
   ]
  },
  "tasks_run": {
   "async": true,
   "identifiers": [
    "string_pad",
    "function_name_separator",
    "function_run",
    "each_async",
    "object_properties",
    "task_function_name_part",
    "functions_search",
    "tasks_run",
    "result2",
    "separator",
    "search",
    "result",
    "properties",
    "lambda",
    "item",
    "result3"
   ]
  },
  "task_function_name_part": {
   "async": false,
   "identifiers": [
    "task_function_name_part"
   ]
  },
  "task_new": {
   "async": true,
   "identifiers": [
    "assert_arguments",
    "string_empty_not_is_assert",
    "marker",
    "data_function_current_restore",
    "function_name_unalias",
    "task_function_name_part",
    "function_name_combine_multiple",
    "js_declaration_single_block_body",
    "js_call_insert",
    "function_transform",
    "function_new",
    "function_current_get",
    "todo",
    "task_new",
    "task_name",
    "arguments",
    "f_name",
    "result2",
    "unaliased",
    "f_name_task",
    "lambda2",
    "lambda",
    "ast",
    "body_block",
    "name",
    "result"
   ]
  },
  "task_new_simple": {
   "async": true,
   "identifiers": [
    "task_new",
    "task_new_simple"
   ]
  },
  "tautology": {
   "async": false,
   "identifiers": [
    "tautology",
    "v"
   ]
  },
  "ternary": {
   "async": false,
   "identifiers": [
    "ternary",
    "condition",
    "on_true",
    "on_false",
    "result"
   ]
  },
  "throws_not_async": {
   "async": true,
   "identifiers": [
    "throws_not_async",
    "lambda",
    "success",
    "e"
   ]
  },
  "todo": {
   "async": false,
   "identifiers": [
    "error",
    "todo",
    "description"
   ]
  },
  "trinity_green": {
   "async": true,
   "identifiers": [
    "chalk_green",
    "trinity_green",
    "s"
   ]
  },
  "undefined": {
   "async": false,
   "identifiers": [
    "undefined"
   ]
  },
  "undefined_is": {
   "async": false,
   "identifiers": [
    "undefined_is",
    "value",
    "v"
   ]
  },
  "undefined_not_is_assert": {
   "async": false,
   "identifiers": [
    "undefined_not_is_assert_lambda",
    "marker",
    "undefined_not_is_assert",
    "value",
    "lambda2",
    "v2"
   ]
  },
  "undefined_not_is_assert_lambda": {
   "async": false,
   "identifiers": [
    "error",
    "json_to",
    "undefined_is",
    "undefined_not_is_assert_lambda",
    "value",
    "lambda",
    "object",
    "message"
   ]
  },
  "unzip": {
   "async": true,
   "identifiers": [
    "import_install",
    "unzip",
    "file_path",
    "buffer",
    "AdmZip",
    "default",
    "zip",
    "extractAllTo"
   ]
  },
  "urdu_allah_to_god": {
   "async": false,
   "identifiers": [
    "urdu_allah_to_god",
    "text",
    "v",
    "replace"
   ]
  },
  "user_repo_get": {
   "async": true,
   "identifiers": [
    "repo_exists_assert",
    "data_get",
    "user_repo_path",
    "marker",
    "user_repo_get",
    "f_path",
    "value",
    "repo_name"
   ]
  },
  "user_repo_path": {
   "async": false,
   "identifiers": [
    "file_name_json_folder",
    "user_repo_path",
    "f_path"
   ]
  },
  "user_repo_set": {
   "async": true,
   "identifiers": [
    "user_repo_get",
    "repo_exists_assert",
    "repo_acronym_to_name",
    "user_repo_path",
    "data_set",
    "marker",
    "user_repo_set",
    "value",
    "repo_name",
    "f_path",
    "lambda",
    "previous",
    "repo_name2"
   ]
  },
  "uuid": {
   "async": true,
   "identifiers": [
    "import_install",
    "uuid",
    "v4",
    "uuidv4",
    "u"
   ]
  },
  "visit": {
   "async": false,
   "identifiers": [
    "tautology",
    "visit_filter",
    "visit",
    "node",
    "children_get",
    "on_each"
   ]
  },
  "visit_async": {
   "async": true,
   "identifiers": [
    "visit_filter_async",
    "tautology",
    "visit_async",
    "node",
    "children_get",
    "on_each"
   ]
  },
  "visit_filter": {
   "async": false,
   "identifiers": [
    "visit_filter_recursive",
    "visit_filter",
    "node",
    "children_get",
    "filter",
    "on_each"
   ]
  },
  "visit_filter_async": {
   "async": true,
   "identifiers": [
    "visit_filter_recursive_async",
    "visit_filter_async",
    "node",
    "children_get",
    "filter",
    "on_each"
   ]
  },
  "visit_filter_recursive": {
   "async": false,
   "identifiers": [
    "each",
    "list_add",
    "list_pop",
    "list_copy",
    "error",
    "visit_filter_recursive",
    "node",
    "children_get",
    "filter",
    "on_each",
    "stack",
    "children",
    "c",
    "copy",
    "removed"
   ]
  },
  "visit_filter_recursive_async": {
   "async": true,
   "identifiers": [
    "not",
    "each_async",
    "list_add",
    "list_pop",
    "list_copy",
    "error",
    "visit_filter_recursive_async",
    "node",
    "children_get",
    "filter",
    "on_each",
    "stack",
    "a",
    "copy",
    "children",
    "lambda",
    "c",
    "removed"
   ]
  },
  "visit_unique_async": {
   "async": true,
   "identifiers": [
    "list_add_if_not_includes",
    "list_includes",
    "list_add",
    "list_difference",
    "visit_async",
    "visit_unique_async",
    "node",
    "children_get",
    "on_each",
    "found",
    "lambda",
    "children",
    "lambda2",
    "v"
   ]
  },
  "watch": {
   "async": true,
   "identifiers": [
    "command_line_node_g",
    "marker",
    "object_property_exists_equals",
    "catch_log_async",
    "function_auto_path",
    "functions_path",
    "import_install",
    "data_file_update",
    "object_property_set",
    "watch",
    "chokidar",
    "default",
    "joined",
    "watcher",
    "persistent",
    "ignoreInitial",
    "in_progress",
    "lambda2",
    "path",
    "lambda",
    "value",
    "name",
    "args",
    "on"
   ]
  },
  "whitespace_normalize": {
   "async": false,
   "identifiers": [
    "marker",
    "whitespace_normalize",
    "str",
    "v",
    "replace",
    "trim"
   ]
  },
  "repos_paths_map_unordered_combine": {
   "async": true,
   "identifiers": [
    "path_join",
    "repos_paths_map_unordered",
    "repos_paths_map_unordered_combine",
    "path",
    "mapper",
    "result",
    "each_folder",
    "folder",
    "joined",
    "f_names"
   ]
  },
  "true_is": {
   "async": false,
   "identifiers": [
    "equal",
    "true_is",
    "value",
    "ti"
   ]
  },
  "function_name_to_path_search": {
   "async": true,
   "identifiers": [
    "object_property_set",
    "list_single",
    "list_size_1",
    "list_multiple_is",
    "list_filter",
    "true_is",
    "object_property_get",
    "repos_paths_map_unordered_combine",
    "file_exists",
    "function_name_to_path",
    "function_name_to_path_search",
    "unaliased",
    "f_path",
    "lambda",
    "joined",
    "exists",
    "v",
    "mapped",
    "lambda2",
    "m",
    "exists2",
    "ti2",
    "filtered",
    "multiple",
    "result",
    "only",
    "f_path2"
   ]
  },
  "function_name_folder_to_path": {
   "async": false,
   "identifiers": [
    "path_join",
    "function_name_to_base",
    "function_name_folder_to_path",
    "f_name",
    "folder",
    "base",
    "second",
    "joined"
   ]
  },
  "repos_paths_map_unordered_combine_squash": {
   "async": true,
   "identifiers": [
    "list_squash",
    "repos_paths_map_unordered_combine",
    "functions_path",
    "repos_paths_map_unordered_combine_squash",
    "mapper",
    "path",
    "result",
    "squashed"
   ]
  },
  "functions_names_to_paths": {
   "async": true,
   "identifiers": [
    "reduce",
    "list_to_dictionary",
    "repos_paths_map_unordered_combine_squash",
    "marker",
    "functions_names_from_path",
    "function_name_folder_to_path",
    "object_merge",
    "functions_names_to_paths",
    "mapper",
    "folder",
    "f_names",
    "lambda",
    "f_name",
    "joined",
    "dictionary",
    "squashed"
   ]
  },
  "reduce": {
   "async": false,
   "identifiers": [
    "each",
    "marker",
    "reduce",
    "start",
    "list",
    "lambda$before$current",
    "reduced",
    "lambda",
    "current"
   ]
  }
 }
}