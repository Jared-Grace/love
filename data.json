{"aliases":{"a":"function_alias_add","c":"function_copy","n":"function_new","ts":"function_types","tf":"function_type_first","o":"function_open","s":"functions_search","ac":"function_alias_change","al":"function_aliases","ni":"npm_install","i":"function_imports_missing_add","fa":"functions_format","v":"server","m":"marker_top","mr":"marker_remove","md":"marker_down","ma":"marker_assign_replace","mc":"marker_call","u":"function_name_unalias","ft":"function_transform","fm":"function_format","f":"data_function_current_get","fs":"function_current_set","ai":"function_aliases_inverted","np":"noop","ps":"data_prompts","p":"prompt_previous","pn":"function_param_new","ad":"function_alias_delete","ar":"function_alias_replace","fd":"function_dependencies_code_copy","de":"function_delete","ir":"function_identifier_replace","au":"function_auto","fw":"function_wrap","sb":"sandbox","psn":"function_params_new","irs":"function_identifier_replace_suffix_add","ftc":"function_transform_command","mcr":"marker_call_replace","mnd":"marker_next_delete","fts":"function_transform_command_self","ire":"function_identifier_replace_ending_remove","mx":"marker_next","mn":"marker_new","mca":"marker_call_atomize","x":"marker_expand","ms":"marker_current_set","as":"function_aliases_search","mg":"data_marker_current_get","mm":"marker_move","mf":"marker_functionize","w":"watch","fws":"function_wrap_suffix_add","nj":"function_new_js","mb":"marker_bottom","na":"function_new_aliased","so":"functions_search_open","t":"task_new","tr":"tasks_run","op":"object_properties","ea":"each_async","tns":"task_new_simple","nti":"js_node_type_is"},"prompts":["f function_run_prompt","n function_run_line","a pr prompt_previous","s data","n list_reverse","n list_copy_reverse","i list_copy_reverse","n list_unique_reverse","i list_unique_reverse","o o","n function_current_set","i function_open","a fcs function_current_set","mc function_transform","n function_identifier_replace","c js_identifiers_names js_identifiers","fcs function_identifier_replace","mc js_identifiers","mc each","f function_identifier_replace","n js_identifiers_named","i js_identifiers_named","n object_replace","s current","n object_properties_delete","i object_properties_delete","i object_replace","c","import {assert} from 'console';","i import {assert} from 'console';","i function_identifier_replace","fcs function_param_new","function_identifier_replace lambda ast=>{}","s format","f function_param_new","fc","ac f fm","ac fc f","ac fcs fs","mc js_declaration","o pr","n object_invert","c object_invert each_object","i each_object","i object_invert","n function_aliases_inverted","i function_aliases_inverted","a ai function_aliases_inverted","prompt_previous","ppr","ac p np","pr prompt_previous","f prompt_previous","fm prompt_previous","o fm","i file_js_unparse","pr","n data_prompts","i data_prompts","a ps data_prompts","ac pr p","fs function_param_new","mc js_declaration_single","function_param_new function_dependencies","a pn function_param_new","fs function_dependencies","a fd function_dependencies","fd fd","n function_imports","i function_imports","i fd","c visit visit_async","c visit_filter visit_filter_async","c visit_filter_recursive visit_filter_recursive_async","i visit_filter_recursive_async","i visit_filter_async","n visit_unique_async","u p","i visit_async","i visit_unique_async","i function_dependencies","function_dependencies function_dependencies","n function_dependencies_code","n list_wait","i functions_format","o function_dependencies_code","i function_dependencies_code","function_dependencies_code","i function_dependencies_code ","function_dependencies_code function_dependencies_code","ni clipboardy","n clipboard_copy","n function_dependencies_code_copy","s clipboard","i function_dependencies_code_copy","u ac","a ad function_alias_delete","c function_alias_change function_alias_replace","a ar function_alias_replace","a fd function_dependencies_code_copy","ar fd function_dependencies_code_copy","c noop noop2","fd function_copy","ifunction_name_to_path","function_name_to_path","c np noop2","s delete","c file_overwrite file_delete","c function_new function_delete","i function_delete","a de function_delete","o i","n function_auto","a ir function_identifier_replace","fs function_auto ","ir lambda ast=>{}","n js_outside_move","i function_auto","a au function_auto","fm js_outside_move","f js_outside_move","mc each_async","ir lambda fd=>{}","o n","n js_code_export","n js_declaration_name","i js_declaration_name","i js_imports_missing","n function_new_declaration","js_code_export a","i function_new_declaration","function_auto function_auto","c list_map_property list_filter_property","i list_filter_property","s function_auto_test","au au","de function_auto_test","n string_split","n list_all","i list_all","i functions_search","s ht,n","n function_new_js","i function_new","i function_new_js","s slice","c string_slice list_slice","d param","au function_param_new","i mc","ir name f_name","o ir","n function_wrap","pn f_name","pn f_name_wrapped","au function_new_js","n function_name_combine","a fw function_wrap","u pn","i function_wrap","de function_params_new","fw function_param_new function_params_new","n sandbox","i sandbox","a sb sandbox","au sb","fw file_exists function_exists","i function_exists","au function_run_git","au function_run_line","c function_run_line function_run_line_git","s prompt","i function_run_prompt","i function_delete_if_exists","function_exists function_params_new","sb","o function_params_new","i function_param_new","i function_params_new","a psn function_params_new","fs function_name_combine","psn left,right","fm function_name_combine","au function_name_combine","u ir","fw function_identifier_replace function_identifier_replace_suffix","de function_identifier_replace_suffix","fw function_identifier_replace function_identifier_replace_suffix_add","i function_identifier_replace_suffix_add","a irs function_identifier_replace_suffix_add","irs f_name unprefixed","au data_prompts","i ps","fm js_stack_declaration_asyncify","o ps","n js_return_name","au function_wrap","au mc","au ast","au js_return_name","fw function_transform function_transform_command","i function_transform_command","a ftc function_transform_command","fs js_return_name","s unique","s names","i js_return_name","ftc js_return_name js_return_name","i marker_call","mc function_name_combine","ir right f_name_unprefixed","ir left \"js\"","s next","c marker_assign_replace marker_call_replace","tf AwaitExpression","marker_call_replace","s inte","marker_call_replace 1","a mr marker_call_replace","a mcr marker_call_replace","mcr 0","mcr 0 combined","c mcr marker_next_delete","s block","ir body2 body","o mc","au list_remove","i marker_next_delete","a md marker_next_delete","u mr","a mnd marker_next_delete","mc n","mc ft","ir f_name combined","mnd","o irs","c function_identifier_replace_suffix_add","c function_identifier_replace_suffix_add function_identifier_replace_suffix_remove","de function_identifier_replace_suffix_remove","c function_identifier_replace_suffix_add function_identifier_replace_ending_remove","ir suffix_to_add ending_to_remove","n js_atomize","pn as","o pn","pn ast","s type,js","ir ast2 ast","s filter","s ident","fw object_merge object_copy","au js_stack_declaration_asyncify","i function_run_line","au marker_next_index","au marker_call","i list_index_of","ftc js_atomize js_atomize","au marker_assign_replace","u ftc","fw function_transform_command function_transform_command_self","a fts function_transform_command_self","fts js_atomize","i au","ts CallExpression","tf CallExpression","au function_identifier_replace_ending_remove","integer_to a","fs function_identifier_replace_ending_remove","mcr c string_suffix_without","ir combined removed","a ire function_identifier_replace_ending_remove","ire lambda2 2","marker_down 0","fs function_new_js","cd 0","au marker_down","i md","md 0","s list,next","i marker_down","s g","o function_new_js","mc js_declaration_single_params_add","mcr 1 ['ast']","i js_atomize","au md","mc js_type","ire ast2 2","ir node_type 'Identifier'","md 4","ac mn mx","c marker_next marker_new","s call,ex","s code,call","a mn marker_new","s delim","c function_current_set marker_current_set","fs js_atomize","s arg","c marker_call_replace marker_call_atomize","i marker_call_replace","au marker_call_replace","o js_node_atomize","de js_node_tomize","au js_atomize","fm js_node_atomize","s marker,next","au marker_call_atomize","i marker_call_atomize","a mca marker_call_atomize","s parse","mca 1","c mx marker_expand","i js_node_atomize","de js_statement_call_get","au marker_call_replace_generic","s blody","au js_declaration_single_block_blody","au js_declaration_params_names","fw js_node_type_is js_identifier_is","i js_identifiers_to_names","fw each each_index","i each_pair","s identifier","s inter","s replace","s each","s copy","o marker_expand","au marker_expand","a x marker_expand","i marker_expand","ni astring","o p","i prompt_previous","au marker_new","i marker_top","i marker_new","a ms marker_current_set","au marker_top","au data_function_current_get","mc","ms","o ms","o f","c data_function_current_get data_marker_get","de data_marker_get","c data_function_current_get data_marker_current_get","o data_marker_current_get","ali","ai","u al","fw function_aliases function_aliases_search","al","au function_aliases_search","au functions_search","au search_generic","i function_aliases_search","a as function_aliases_search","as marker","a mg data_marker_current_get","c function_transform_marker marker_move","a mm marker_move","o mx","i function_transform_marker","au function_transform_marker","i marker_move","mm 1 2","md -1","mm 2 1","c marker_move marker_functionize","au marker_move","o list_index_of_","o list_index_of_next","au list_index_of_next","c list_index_of_next list_index_of_previous","i marker_previous_index","c marker_next_index marker_previous_index","fw list_slice list_range","mf marker_functionize","a mf marker_functionize","o ts","s js,node,type","au function_types","fw js_node_types js_node_types_includes","i js_node_types_includes","s any","c list_all list_any","i list_any","fs marker_functionize","s declarat","c list_add list_add_multiple","mf 1 2","","au export function js_stack_last(stack, type) {","au js_stack_last","s range","n range","fm range","fw each each_range","i each_range","i list_next_index","o list_adder","au list_adder","c list_adder list_adder_multiple","fs html_new ","au marker_functionize","s declaration","i marker_functionize","fs html_new4","o fs","s exist","i function_current_set","fs","c function_transform_marker function_transform_marker_all","i function_transform_marker_all","i marker_remove","o function_transform_marker","au function_transform_marker_all","i function_transform","i html_new","ms 1","s html","i js_outside_move","de export async function html_overwrite(name, body, file_path) {","de html_overwrite","u f","md 3","mf 1 2 html_overwrite","c function_params_new function_param_move","au function_params_new","i function_param_move","fw list_map list_map_index","fw list_filter list_find","fw list_find list_find_property","s property","au list_filter_property","i list_find_property","au function_param_swap","n list_swap","s insert","au list_insert","c list_insert list_replace","i list_swap","i js_declaration_param_named","function_param_swap body file_path","i function_param_swap","function_param_swap html_overwrite body file_path","au html_new","i html_overwrite","ni chokidar","n watch","n import_install","import_install chokidar","import_install chokdiar","u ni","i import_install","s src","s public","a w watch","s wrap","fw fw function_wrap_suffix_add","fw fws function_wrap_suffix_add","a fws function_wrap_suffix_add","fw au path","de path","de au_path","o fws","i function_wrap_suffix_add","fws au path","s path,name","s path","i folder_read","i function_import","i function_name_to_path","n path_name","i function_auto_path","function_auto_path src/noop.mjs","au function_auto_path","i watch","o mn","n string_to","s push","au git_push","s ex","md 1","au marker_first","u nj","s js","s js,new","a nj function_new_js","nj return_atomize","s atomi","s js,visit","c js_return_on js_return_on_async","ftc marker_first js_return_atomize","s expa","de js_declarator_init_set","s init","x","s marker","s uniqu","s empty","fs marker_top","mr","o mr","m","md 2","mn","o md","u mb","c md marker_bottom","a mb marker_bottom","mg","s last","n list_last_is","fs html_new","ms 2","mb","c log log_keep","o log","nj if_else_if_combine","o function_run","s swap","s json","c json_to json_format_to","s run,log","s s","nj calls_to_each","nj call_fill","np","o mf","nj dollar","fs js_dollar","tf ExpressionStatement","n equal_by","c assert assert_message","s brace","w","c catch_log catch_log_async","s eq","s prefix","s suffix","c string_suffix_without string_prefix_without","s start","si git_acp_call","fd git_acp_call","s catch","n identity","i catch_only_async","fd git_commit","fs marker_call","ps","mf 1 2 js_call_new","sgit","fd git_acp","o fd","fd js_call_fill","s git","s ignore","o au","i js_unparse","s visit,async","n js_visit_type_each_async","o w","s param","s dec,name","nj declare_assign_null","nj await_add","s await","fd js_unparse","nj import_inside","o ftc","s import","ftc js_imports js_import_inside","o js_type","js_visit_filter n","ftd js_await_add","s function,trans","fts js_await_add","ftc js_await_add js_unparse_inner","n task_new","o m","s funct,new","u s","n function_new_aliased","u a","a na function_new_aliased","s search","na functions_search_open so","o so","s alias","so fill","u ft","s body","s call","as v","as task_new","a t task_new","de js_call_fill_test","de","f_name_task","s string","t test","s test","de js_call_fill_test_test","de js_call_fill_test_test_test","de js_call_fill_test_test_test_test","de js_call_fill_test_test_test_test_test","n function_name_combine_multiple","na tasks_run tr","o s","s task_","s prop","a op object_properties","a ea each_async","s function","s task","s _task_","s parent","s combine","fts js_declare_assign_null","s auto","fs function_param_swap","t simple","tr","nj let_add","s assign","u","u t","fw t task_new_simple","fs js_let_add","ts","a tns task_new_simple","f","tns","u nt","a nti js_node_type_is","so doll","s return","s declar","p","fts js_let_add","s let","so dollar"],"marker_current":"1","function_current":"js_dollar"}