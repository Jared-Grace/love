{
 "aliases": {
  "a": "function_alias_add",
  "c": "function_copy",
  "n": "function_new",
  "ts": "function_types",
  "tf": "function_type_first",
  "o": "function_open",
  "s": "functions_search",
  "ac": "function_alias_change",
  "al": "function_aliases",
  "ni": "npm_install",
  "fa": "functions_format",
  "v": "server",
  "m": "marker_top",
  "mr": "marker_remove",
  "md": "marker_down",
  "ma": "marker_assign_replace",
  "mc": "marker_call",
  "u": "function_name_unalias",
  "ft": "function_transform",
  "fm": "function_format",
  "f": "data_function_current_get",
  "fs": "function_current_set",
  "ai": "function_aliases_inverted",
  "np": "noop",
  "ps": "data_prompts",
  "p": "prompt_previous",
  "pn": "function_param_new",
  "ad": "function_alias_delete",
  "ar": "function_alias_replace",
  "fd": "function_dependencies_code_copy",
  "de": "function_delete",
  "ir": "function_identifier_replace",
  "au": "function_auto",
  "fw": "function_wrap",
  "sb": "sandbox",
  "psn": "function_params_new",
  "irs": "function_identifier_replace_suffix_add",
  "ftc": "function_transform_command",
  "mcr": "marker_call_replace",
  "mnd": "marker_next_delete",
  "fts": "function_transform_command_self",
  "ire": "function_identifier_replace_ending_remove",
  "mx": "marker_expand",
  "mn": "marker_new",
  "mca": "marker_call_atomize",
  "ms": "marker_current_set",
  "as": "function_aliases_search",
  "mg": "data_marker_current_get",
  "mm": "marker_move",
  "mf": "marker_functionize",
  "w": "watch",
  "fws": "function_wrap_suffix_add",
  "nj": "function_new_js",
  "mb": "marker_bottom",
  "na": "function_new_aliased",
  "so": "functions_search_open",
  "t": "task_new",
  "tr": "tasks_run",
  "op": "object_properties",
  "ea": "each_async",
  "tns": "task_new_simple",
  "sei": "string_empty_is",
  "lf": "list_first",
  "ls": "list_second",
  "or": "object_replace",
  "st": "object_property_set",
  "ntn": "js_node_type_not_is",
  "oc": "object_copy",
  "jpe": "js_parse_expression",
  "lg": "list_get",
  "fns": "functions_names",
  "e": "each",
  "l1": "list_get_end_1",
  "lal": "list_all",
  "l2": "list_get_end_2",
  "fnu": "function_name_unalias",
  "lin": "list_includes",
  "li": "list_is",
  "l": "log",
  "at": "assert",
  "ld": "list_adder",
  "la": "list_add",
  "ss": "string_split",
  "ssc": "string_split_comma",
  "fnt": "function_new_transform",
  "jps": "js_parse_statement",
  "fc": "functions_combine",
  "lm": "list_map",
  "lmu": "list_map_unordered_async",
  "lmp": "list_map_property",
  "fst": "function_current_set_task_new",
  "fsp": "function_name_separator",
  "atn": "function_acronym_to_names",
  "cs": "function_copy_suffix_add",
  "er": "error",
  "fsts": "function_current_set_task_new_simple",
  "nt": "js_node_type_is",
  "nti": "js_node_type_is_if",
  "fr": "function_read",
  "": "oe",
  "oe": "function_open_editor",
  "fp": "function_parse_declaration_js_unparse",
  "oec": "function_open_editor_current",
  "cd": "function_current_declaration_code",
  "ars": "marker_assign_replace_string",
  "mdc": "marker_down_choices",
  "lz": "list_size",
  "mrt": "marker_remove_marker_top",
  "fy": "function_types",
  "lk": "list_skip",
  "ll": "list_filter",
  "jnt": "js_node_type",
  "lx": "list_index_of",
  "x": "exit",
  "ini": "integer_is",
  "lu": "log_unparse",
  "ntsi": "js_node_types_is",
  "jv": "js_visit",
  "jvt": "js_visit_type",
  "fcp": "function_copy",
  "r": "function_rename",
  "me": "marker_enter",
  "lr": "list_remove",
  "lis": "list_insert",
  "mab": "marker_above",
  "mda": "marker_delete_above",
  "ja": "js_auto",
  "lax": "list_add_if_not_includes",
  "lj": "list_join",
  "opd": "object_property_delete",
  "fwc": "function_watch_ending_change",
  "fntp": "function_name_to_path",
  "d": "data_files_update",
  "is": "data_identifiers_search",
  "lfp": "list_filter_property",
  "i": "function_imports_fix",
  "ml": "marker_leave"
 },
 "prompts": [
  "f function_run_prompt",
  "n function_run_line",
  "a pr prompt_previous",
  "n list_reverse",
  "n list_copy_reverse",
  "i list_copy_reverse",
  "n list_unique_reverse",
  "i list_unique_reverse",
  "n function_current_set",
  "i function_open",
  "a fcs function_current_set",
  "mc function_transform",
  "n function_identifier_replace",
  "c js_identifiers_names js_identifiers",
  "fcs function_identifier_replace",
  "mc js_identifiers",
  "mc each",
  "f function_identifier_replace",
  "n js_identifiers_named",
  "i js_identifiers_named",
  "n object_replace",
  "n object_properties_delete",
  "i object_properties_delete",
  "i object_replace",
  "c",
  "import {assert} from 'console';",
  "i import {assert} from 'console';",
  "i function_identifier_replace",
  "fcs function_param_new",
  "function_identifier_replace lambda ast=>{}",
  "s format",
  "f function_param_new",
  "ac f fm",
  "ac fc f",
  "ac fcs fs",
  "mc js_declaration",
  "o pr",
  "n object_invert",
  "c object_invert each_object",
  "i each_object",
  "i object_invert",
  "n function_aliases_inverted",
  "i function_aliases_inverted",
  "a ai function_aliases_inverted",
  "prompt_previous",
  "ppr",
  "ac p np",
  "pr prompt_previous",
  "f prompt_previous",
  "fm prompt_previous",
  "o fm",
  "i file_js_unparse",
  "pr",
  "n data_prompts",
  "i data_prompts",
  "a ps data_prompts",
  "ac pr p",
  "fs function_param_new",
  "mc js_declaration_single",
  "function_param_new function_dependencies",
  "a pn function_param_new",
  "fs function_dependencies",
  "a fd function_dependencies",
  "fd fd",
  "n function_imports",
  "i function_imports",
  "i fd",
  "c visit visit_async",
  "c visit_filter visit_filter_async",
  "c visit_filter_recursive visit_filter_recursive_async",
  "i visit_filter_recursive_async",
  "i visit_filter_async",
  "n visit_unique_async",
  "u p",
  "i visit_async",
  "i visit_unique_async",
  "i function_dependencies",
  "function_dependencies function_dependencies",
  "n function_dependencies_code",
  "n list_wait",
  "i functions_format",
  "o function_dependencies_code",
  "i function_dependencies_code",
  "function_dependencies_code",
  "i function_dependencies_code ",
  "function_dependencies_code function_dependencies_code",
  "ni clipboardy",
  "n clipboard_copy",
  "n function_dependencies_code_copy",
  "s clipboard",
  "i function_dependencies_code_copy",
  "u ac",
  "a ad function_alias_delete",
  "c function_alias_change function_alias_replace",
  "a ar function_alias_replace",
  "a fd function_dependencies_code_copy",
  "ar fd function_dependencies_code_copy",
  "c noop noop2",
  "fd function_copy",
  "ifunction_name_to_path",
  "function_name_to_path",
  "c np noop2",
  "c file_overwrite file_delete",
  "c function_new function_delete",
  "i function_delete",
  "a de function_delete",
  "o i",
  "n function_auto",
  "a ir function_identifier_replace",
  "fs function_auto ",
  "ir lambda ast=>{}",
  "n js_outside_move",
  "i function_auto",
  "a au function_auto",
  "fm js_outside_move",
  "f js_outside_move",
  "mc each_async",
  "ir lambda fd=>{}",
  "n js_code_export",
  "n js_declaration_name",
  "i js_declaration_name",
  "i js_imports_missing",
  "n function_new_declaration",
  "js_code_export a",
  "i function_new_declaration",
  "function_auto function_auto",
  "c list_map_property list_filter_property",
  "i list_filter_property",
  "s function_auto_test",
  "au au",
  "de function_auto_test",
  "n string_split",
  "n list_all",
  "i list_all",
  "i functions_search",
  "s ht,n",
  "n function_new_js",
  "i function_new",
  "i function_new_js",
  "s slice",
  "c string_slice list_slice",
  "d param",
  "au function_param_new",
  "i mc",
  "ir name f_name",
  "o ir",
  "n function_wrap",
  "pn f_name",
  "pn f_name_wrapped",
  "au function_new_js",
  "n function_name_combine",
  "a fw function_wrap",
  "u pn",
  "i function_wrap",
  "de function_params_new",
  "fw function_param_new function_params_new",
  "n sandbox",
  "i sandbox",
  "a sb sandbox",
  "au sb",
  "fw file_exists function_exists",
  "i function_exists",
  "au function_run_git",
  "au function_run_line",
  "c function_run_line function_run_line_git",
  "s prompt",
  "i function_run_prompt",
  "i function_delete_if_exists",
  "function_exists function_params_new",
  "o function_params_new",
  "i function_param_new",
  "i function_params_new",
  "a psn function_params_new",
  "fs function_name_combine",
  "psn left,right",
  "fm function_name_combine",
  "au function_name_combine",
  "u ir",
  "fw function_identifier_replace function_identifier_replace_suffix",
  "de function_identifier_replace_suffix",
  "fw function_identifier_replace function_identifier_replace_suffix_add",
  "i function_identifier_replace_suffix_add",
  "a irs function_identifier_replace_suffix_add",
  "irs f_name unprefixed",
  "au data_prompts",
  "i ps",
  "fm js_stack_declaration_asyncify",
  "o ps",
  "n js_return_name",
  "au function_wrap",
  "au mc",
  "au ast",
  "au js_return_name",
  "fw function_transform function_transform_command",
  "i function_transform_command",
  "a ftc function_transform_command",
  "fs js_return_name",
  "s names",
  "i js_return_name",
  "ftc js_return_name js_return_name",
  "i marker_call",
  "mc function_name_combine",
  "ir right f_name_unprefixed",
  "ir left \"js\"",
  "c marker_assign_replace marker_call_replace",
  "tf AwaitExpression",
  "marker_call_replace",
  "marker_call_replace 1",
  "a mr marker_call_replace",
  "a mcr marker_call_replace",
  "mcr 0",
  "mcr 0 combined",
  "c mcr marker_next_delete",
  "ir body2 body",
  "au list_remove",
  "i marker_next_delete",
  "a md marker_next_delete",
  "u mr",
  "a mnd marker_next_delete",
  "mc n",
  "mc ft",
  "ir f_name combined",
  "mnd",
  "o irs",
  "c function_identifier_replace_suffix_add",
  "c function_identifier_replace_suffix_add function_identifier_replace_suffix_remove",
  "de function_identifier_replace_suffix_remove",
  "c function_identifier_replace_suffix_add function_identifier_replace_ending_remove",
  "ir suffix_to_add ending_to_remove",
  "n js_atomize",
  "pn as",
  "o pn",
  "pn ast",
  "ir ast2 ast",
  "fw object_merge object_copy",
  "au js_stack_declaration_asyncify",
  "i function_run_line",
  "au marker_next_index",
  "au marker_call",
  "i list_index_of",
  "ftc js_atomize js_atomize",
  "au marker_assign_replace",
  "u ftc",
  "fw function_transform_command function_transform_command_self",
  "a fts function_transform_command_self",
  "fts js_atomize",
  "i au",
  "ts CallExpression",
  "tf CallExpression",
  "au function_identifier_replace_ending_remove",
  "integer_to a",
  "fs function_identifier_replace_ending_remove",
  "mcr c string_suffix_without",
  "ir combined removed",
  "a ire function_identifier_replace_ending_remove",
  "ire lambda2 2",
  "marker_down 0",
  "fs function_new_js",
  "cd 0",
  "au marker_down",
  "i md",
  "s list,next",
  "i marker_down",
  "s g",
  "o function_new_js",
  "mc js_declaration_single_params_add",
  "mcr 1 ['ast']",
  "i js_atomize",
  "au md",
  "mc js_type",
  "ir node_type 'Identifier'",
  "md 4",
  "ac mn mx",
  "c marker_next marker_new",
  "s call,ex",
  "s code,call",
  "a mn marker_new",
  "s delim",
  "c function_current_set marker_current_set",
  "fs js_atomize",
  "s arg",
  "c marker_call_replace marker_call_atomize",
  "i marker_call_replace",
  "au marker_call_replace",
  "o js_node_atomize",
  "de js_node_tomize",
  "au js_atomize",
  "fm js_node_atomize",
  "s marker,next",
  "au marker_call_atomize",
  "i marker_call_atomize",
  "a mca marker_call_atomize",
  "mca 1",
  "c mx marker_expand",
  "i js_node_atomize",
  "de js_statement_call_get",
  "au marker_call_replace_generic",
  "s blody",
  "au js_declaration_single_block_blody",
  "au js_declaration_params_names",
  "fw js_node_type_is js_identifier_is",
  "i js_identifiers_to_names",
  "fw each each_index",
  "i each_pair",
  "s identifier",
  "s inter",
  "s copy",
  "o marker_expand",
  "au marker_expand",
  "a x marker_expand",
  "i marker_expand",
  "ni astring",
  "i prompt_previous",
  "au marker_new",
  "i marker_top",
  "i marker_new",
  "a ms marker_current_set",
  "au marker_top",
  "au data_function_current_get",
  "mc",
  "ms",
  "o ms",
  "o f",
  "c data_function_current_get data_marker_get",
  "de data_marker_get",
  "c data_function_current_get data_marker_current_get",
  "o data_marker_current_get",
  "ali",
  "ai",
  "u al",
  "fw function_aliases function_aliases_search",
  "al",
  "au function_aliases_search",
  "au functions_search",
  "au search_generic",
  "i function_aliases_search",
  "a as function_aliases_search",
  "a mg data_marker_current_get",
  "c function_transform_marker marker_move",
  "a mm marker_move",
  "o mx",
  "i function_transform_marker",
  "au function_transform_marker",
  "i marker_move",
  "mm 1 2",
  "mm 2 1",
  "c marker_move marker_functionize",
  "au marker_move",
  "o list_index_of_",
  "o list_index_of_next",
  "au list_index_of_next",
  "c list_index_of_next list_index_of_previous",
  "i marker_previous_index",
  "c marker_next_index marker_previous_index",
  "fw list_slice list_range",
  "mf marker_functionize",
  "a mf marker_functionize",
  "s js,node,type",
  "au function_types",
  "fw js_node_types js_node_types_includes",
  "i js_node_types_includes",
  "s any",
  "c list_all list_any",
  "i list_any",
  "fs marker_functionize",
  "s declarat",
  "c list_add list_add_multiple",
  "mf 1 2",
  "",
  "au export function js_stack_last(stack, type) {",
  "au js_stack_last",
  "s range",
  "n range",
  "fm range",
  "fw each each_range",
  "i each_range",
  "i list_next_index",
  "o list_adder",
  "au list_adder",
  "c list_adder list_adder_multiple",
  "fs html_new ",
  "au marker_functionize",
  "s declaration",
  "i marker_functionize",
  "fs html_new4",
  "i function_current_set",
  "c function_transform_marker function_transform_marker_all",
  "i function_transform_marker_all",
  "i marker_remove",
  "o function_transform_marker",
  "au function_transform_marker_all",
  "i function_transform",
  "i html_new",
  "ms 1",
  "s html",
  "i js_outside_move",
  "de export async function html_overwrite(name, body, file_path) {",
  "de html_overwrite",
  "u f",
  "c function_params_new function_param_move",
  "au function_params_new",
  "i function_param_move",
  "fw list_map list_map_index",
  "fw list_filter list_find",
  "fw list_find list_find_property",
  "s property",
  "au list_filter_property",
  "i list_find_property",
  "au function_param_swap",
  "n list_swap",
  "s insert",
  "au list_insert",
  "c list_insert list_replace",
  "i list_swap",
  "i js_declaration_param_named",
  "function_param_swap body file_path",
  "i function_param_swap",
  "function_param_swap html_overwrite body file_path",
  "au html_new",
  "i html_overwrite",
  "ni chokidar",
  "n watch",
  "n import_install",
  "import_install chokidar",
  "import_install chokdiar",
  "u ni",
  "i import_install",
  "s src",
  "s public",
  "a w watch",
  "fw fw function_wrap_suffix_add",
  "fw fws function_wrap_suffix_add",
  "a fws function_wrap_suffix_add",
  "fw au path",
  "de path",
  "de au_path",
  "o fws",
  "i function_wrap_suffix_add",
  "fws au path",
  "s path,name",
  "s path",
  "i folder_read",
  "i function_import",
  "i function_name_to_path",
  "n path_name",
  "i function_auto_path",
  "function_auto_path src/noop.mjs",
  "au function_auto_path",
  "i watch",
  "n string_to",
  "s push",
  "au git_push",
  "s ex",
  "au marker_first",
  "u nj",
  "s js",
  "s js,new",
  "a nj function_new_js",
  "nj return_atomize",
  "c js_return_on js_return_on_async",
  "ftc marker_first js_return_atomize",
  "s expa",
  "de js_declarator_init_set",
  "s init",
  "s uniqu",
  "fs marker_top",
  "mr",
  "o mr",
  "u mb",
  "c md marker_bottom",
  "a mb marker_bottom",
  "n list_last_is",
  "ms 2",
  "mb",
  "c log log_keep",
  "o log",
  "nj if_else_if_combine",
  "o function_run",
  "s swap",
  "s json",
  "c json_to json_format_to",
  "s run,log",
  "s s",
  "nj calls_to_each",
  "nj call_fill",
  "np",
  "o mf",
  "nj dollar",
  "tf ExpressionStatement",
  "n equal_by",
  "c assert assert_message",
  "w",
  "c catch_log catch_log_async",
  "s eq",
  "s prefix",
  "c string_suffix_without string_prefix_without",
  "s start",
  "si git_acp_call",
  "fd git_acp_call",
  "n identity",
  "i catch_only_async",
  "fd git_commit",
  "fs marker_call",
  "mf 1 2 js_call_new",
  "sgit",
  "fd git_acp",
  "fd js_call_fill",
  "s ignore",
  "i js_unparse",
  "s visit,async",
  "n js_visit_type_each_async",
  "s dec,name",
  "nj declare_assign_null",
  "nj await_add",
  "fd js_unparse",
  "nj import_inside",
  "o ftc",
  "s import",
  "ftc js_imports js_import_inside",
  "o js_type",
  "js_visit_filter n",
  "ftd js_await_add",
  "s function,trans",
  "fts js_await_add",
  "ftc js_await_add js_unparse_inner",
  "n task_new",
  "s funct,new",
  "u s",
  "n function_new_aliased",
  "u a",
  "a na function_new_aliased",
  "na functions_search_open so",
  "o so",
  "so fill",
  "s body",
  "as v",
  "as task_new",
  "a t task_new",
  "de js_call_fill_test",
  "de",
  "f_name_task",
  "t test",
  "de js_call_fill_test_test",
  "de js_call_fill_test_test_test",
  "de js_call_fill_test_test_test_test",
  "de js_call_fill_test_test_test_test_test",
  "n function_name_combine_multiple",
  "na tasks_run tr",
  "o s",
  "s task_",
  "s prop",
  "a op object_properties",
  "a ea each_async",
  "s function",
  "s _task_",
  "fts js_declare_assign_null",
  "fs function_param_swap",
  "t simple",
  "tr",
  "nj let_add",
  "u",
  "fw t task_new_simple",
  "fs js_let_add",
  "a tns task_new_simple",
  "tns",
  "a nti js_node_type_is",
  "a sei string_empty_is",
  "a lf list_first",
  "s seco",
  "c list_first list_second",
  "a ls list_second",
  "de list_skip",
  "c string_skip list_skip",
  "s string",
  "so dollar",
  "a or object_replace",
  "s define",
  "fs js_identifier_defineds",
  "tf ArrowFunctionExpression",
  "nj arrow_to_function",
  "a st object_property_set",
  "c js_arrow_to_function js_arrow_blockify",
  "s js_node_type",
  "a ntn js_node_type_not_is",
  "u g",
  "s get",
  "s identi",
  "a oc object_copy",
  "o ts",
  "ft FunctionDeclaration",
  "c js_arrow_to_function js_function_id_add",
  "fs js_function_id_add",
  "s atomi",
  "c js_atomize js_atomize_function",
  "s id,name",
  "fs function_run_log",
  "t duplicate_lines_to_each",
  "a jpe js_parse_expression",
  "fts js_atomize_function",
  "de js_dollar_task_each_code_own_fn_task_if_else_to_generic",
  "fs js_dollar",
  "t each_code_own_fn",
  "t if_else_to_generic",
  "s current,set",
  "nj params_consolidate",
  "n function_params_consolidate",
  "de js_params_consolidate",
  "as exist",
  "s exist",
  "s before",
  "s previous",
  "a lg list_get",
  "u st",
  "fs js_declaration_param_add",
  "mf 1 2 js_declaration_params_get",
  "s js_dollar_g",
  "ts js_dollar_g",
  "fs js_dollar_g",
  "tf FunctionDeclaration",
  "tf Property",
  "fs function_params_consolidate",
  "s list,clear",
  "s clear",
  "s list",
  "n list_empty",
  "function_params_consolidate js_dollar_g",
  "s transform",
  "a fns function_names",
  "a fns functions_names",
  "ac fns functions_names",
  "o ac",
  "ac functions_names fns",
  "ar fns functions_names",
  "s functions_names",
  "a e each",
  "a l1 list_get_end_1",
  "c js_stack_filtered js_stack_filtered_multiple",
  "a la list_adder",
  "a lal list_all",
  "s atomize",
  "fw string_is",
  "fw string_is string_is_assert",
  "c js_stack_last js_stack_last_multiple",
  "a l2 list_get_end_2",
  "u l2",
  "ftc js_declare_assign_null e",
  "c data_function_current_get data_watch_get",
  "c function_current_set data_watch_set",
  "fs au",
  "t arrow_to_function_should_add_return",
  "s arrow",
  "de au_task_arrow_to_function_should_add_return",
  "o t",
  "a fnu function_name_unalias",
  "fs data_watch_set",
  "t add_return",
  "o e",
  "s next",
  "a li list_is",
  "ac li lin",
  "a li list_includes",
  "ar li list_is",
  "a log l",
  "s alias",
  "as alias",
  "ad log",
  "a l log",
  "o a",
  "s sort",
  "fw list_sort_string list_sort_string_mapper",
  "de list_sort_string_mapper",
  "c list_sort_string list_sort_number_mapper",
  "o list_sort_string",
  "a test t",
  "a test ttt",
  "ttt",
  "ad ttt",
  "fd list_sort_string_size",
  "a test tt",
  "tt",
  "ad tt",
  "a at assert",
  "s nodes",
  "ftc js_dollar export function js_identifier_defineds(v) {",
  "ftc js_dollar js_identifier_defineds",
  "as list",
  "ac la ld",
  "a la list_add",
  "s invo",
  "s lamb",
  "n lambda_invoke",
  "s stack",
  "s function,type",
  "s assert",
  "s param",
  "fts js_let_add",
  "n functions_combine",
  "s split",
  "a ss string_split",
  "a ssc string_split_comma",
  "s fun,new",
  "sa function_new_transform ",
  "as function_new_transform",
  "a fnt function_new_transform",
  "s combine",
  "u jsp",
  "s parse",
  "a jps js_parse_statement",
  "a fc functions_combine",
  "fc fs t",
  "lm",
  "a lm list_map",
  "s list,map",
  "a lmu list_map_unordered_async",
  "s fill",
  "u fnu",
  "de function_current_set_task_new",
  "fc fs,t",
  "de fs_t",
  "s fil",
  "s let",
  "s sand",
  "lmp",
  "a lmp list_map_property",
  "s unalias",
  "fst function_alias_add_generic unalias_from_acronyms",
  "sb",
  "a fst function_current_set_task_new",
  "n function_name_to_acronym",
  "s separ",
  "a fsp function_name_separator",
  "s part",
  "s first",
  "function_name_to_acronym function_name_to_acronym",
  "n function_names_to_acronyms",
  "s lookup",
  "s dict",
  "s object",
  "n list_to_dictionary",
  "so doll",
  "s ac",
  "s invert",
  "function_names_to_acronyms",
  "n git_push_schedule",
  "n path_resolve",
  "jis",
  "s acro",
  "n function_acronym_to_names",
  "a atn function_acronym_to_names",
  "atn ii",
  "atn jis",
  "path_resolve .",
  "s folder",
  "a ii import_install",
  "git_push_schedule",
  "fw c function_copy_suffix_add",
  "u cs",
  "a cs function_copy_suffix_add",
  "cs git_push_schedule check",
  "f ",
  "fs git_push_schedule_check",
  "git_push_schedule_check",
  "schtasks_query t",
  "s schedule",
  "as err",
  "git_push_schedule_command",
  "fd git_push_schedule_command",
  "o fd",
  "s unique",
  "cs list_adder_unique async",
  "fd git_push_schedule",
  "o command_line_schtasks ",
  "s end",
  "n js_declaration_params_names",
  "n js_declaration_params_names_node",
  "nj dollar_s",
  "s size,assert",
  "n list_squash",
  "a er error",
  "s statement",
  "nj dollar_f",
  "s parent",
  "s code,fn",
  "s code,fun",
  "s function,ke",
  "s assign",
  "s null",
  "fst function_params_consolidate simple",
  "fw fst",
  "s wrap",
  "as wrap",
  "fws fst simple",
  "a fsts function_current_set_task_new_simple",
  "fsts js_await_add",
  "fsts function_param_swap",
  "fsts js_import_inside",
  "fsts js_calls_to_each",
  "s else",
  "s visit",
  "s replace",
  "as replace",
  "o ire",
  "fs js_if_else_if_combine",
  "ir type 'IfStatement'",
  "fws nti if",
  "u nt",
  "ac nti nt",
  "u n",
  "u t",
  "a nti js_node_type_is_if",
  "c js_node_type_is_if js_node_type_is_if_async ",
  "u eb",
  "o cs",
  "de eb_async",
  "cs eb async",
  "o eb",
  "s left",
  "ftc js_if_else_if_combine marker_down_generic",
  "i js_auto",
  "mf html_overwrite",
  "mf 1 2 html_overwrite",
  "o html_overwrite",
  "fs html_new",
  "mf 1 2 html_update",
  "s brace",
  "i function_imports_add",
  "au function_imports_add",
  "ftc js_outside_move function_imports_add",
  "i folder_current_join",
  "s async",
  "mt",
  "u mt",
  "fs js_await_add",
  "o data_all",
  "da",
  "u ds",
  "o ds",
  "s read",
  "a function_read fr",
  "o fr",
  "s unal",
  "fr fr",
  "s dec",
  "fr fpd",
  "add jesus christ",
  "string_to jesus",
  "js_parse 'a'",
  "de data_property_new",
  "n data_property_new",
  "o n",
  "fr o",
  "u fo",
  "fs file_open",
  "fr file_open",
  "js_parse 1",
  "o file_open",
  "s open",
  "s await",
  "s declar",
  "fc function_parse_declaration,ju",
  "cs function_open editor",
  "s function_open_editor",
  "a oe   await function_current_set(f_name);",
  "ar oe function_open_editor",
  "a oe function_open_editor",
  "a fp function_parse_declaration_js_unparse",
  "oe js_await_add",
  "u fn",
  "u fns",
  "oe function_parse_declaration_js_unparse",
  "oe mc",
  "u ls",
  "oe list_single",
  "u fr",
  "mc jvt",
  "fr jaa",
  "sa declar",
  "as declar",
  "ire ast2 2",
  "s watch",
  "oe dwg",
  "c dwg data_editor_get",
  "s ext",
  "de data_editor_get",
  "c dwg data_terminal_get",
  "u dws",
  "oe dws",
  "oe fws",
  "oe c",
  "s run",
  " fd ii",
  "fd ii",
  "fp dts",
  "as marker",
  "ma \"terminal\"",
  "fw ar marker_assign_replace_string",
  "u ar",
  "de marker_assign_replace_string",
  " u u",
  "u u",
  "fw mar marker_assign_replace_string",
  "o fw",
  "fe fw",
  "oe fw",
  "oe mars",
  "s code,str",
  "oe u",
  "u jcs",
  "oe marker_assign_replace_string",
  "fp data_terminal_get",
  "fw fp function_current_declaration_code",
  "fw oe function_open_editor_current",
  "oe function_open_editor_current",
  "s current,get",
  "a oc function_open_editor_current",
  "a oec function_open_editor_current",
  "oe function_current_declaration_code",
  "a cd function_current_declaration_code",
  "fs data_terminal_get",
  "a ars marker_assign_replace_string",
  "o m",
  "fs dtg",
  "oe m",
  "fs m",
  "fp data_watch_set",
  "c dws data_terminal_set",
  "fs dts",
  "ars terminal",
  "oe ft",
  "s function_run",
  "fc",
  "as current",
  "fp jaa",
  "ir type \"CallExpression\"",
  "oe ir",
  "s current",
  "c marker_down_generic marker_down_choices",
  "a mdc marker_down_choices",
  "dts 1",
  "dtg",
  "o o",
  "fs",
  "oe o",
  "o jaa",
  "o p",
  "u fs",
  "c marker_down_choices function_transform_marker_empty",
  "function_transform_marker_empty",
  "m",
  "oe md",
  "oe fc",
  "1p",
  "fc mr m",
  "fcn mr,m",
  "de marker_remove_marker_top",
  "a lz list_size",
  "md -2",
  "n list_to",
  "fc mr,m",
  "a mrt marker_remove_marker_top",
  "jaa",
  "me 1",
  "oe mdc",
  "fs marker_down_choices_lambda",
  "md 3",
  "o mb",
  "oe mb",
  "md c",
  "as mark",
  "oe mrt",
  "cs list_size_1_assert message",
  "s size,1",
  "oe ms",
  "oe fs",
  "n list_map_property_to",
  "oe list_map_property_to",
  "md 2",
  "mdc",
  "md 0",
  "oe marker_down_choices_lambda",
  "mrt",
  "md 1",
  "nj marker_enter",
  "s marker",
  "fws function_transform_marker current",
  "u fts",
  "s function,types",
  "u ft",
  "a fy function_types",
  "s find",
  "s skip",
  "a lk list_skip",
  "s index,next",
  "a ll list_filter",
  "u jnt",
  "a jnt js_node_type",
  "s marker,ne",
  "s type,js",
  "c js_visit_type js_visit_types",
  "ftc js_marker_enter js_marker_enter",
  "s types",
  "fts jme",
  "fw jv js_visitors",
  "oec",
  "dts 0",
  "nj block_child_graph",
  "s last",
  "cs string_is_assert message",
  "ftc jbcg",
  "s string,assert",
  "oe opg",
  "s mult",
  "i list_first_second",
  "s empty",
  "n list_last_or_null",
  "oe ftc",
  "oe fts",
  "n null_not_is",
  "u lio",
  "a lx list_index_of",
  "s list,index",
  "n list_index_is",
  "s doll",
  "c js_dollar_r js_dollar_rt",
  "c js_dollar_rt js_dollar_rf",
  "s equ",
  "fws equal not",
  "n exit",
  "ac x me",
  "a x exit",
  "s assert,inte",
  "s asser,num",
  "s inte",
  "n integer_is",
  "u ii",
  "a ini integer_is",
  "o au",
  "nj if_blockify",
  "s return",
  "s visit,type",
  "s each",
  "u lu",
  "a lu log_unparse",
  "s function,js",
  "as node,type",
  "u jnti",
  "a ntsi js_node_types_is",
  "cs js_block_child_graph unparse",
  "u ju",
  "u lmua",
  "fs sb",
  "ftc jbcgu sb",
  "ob",
  "o sb",
  "f_name",
  "s size",
  "nj bang_to_not",
  "u jv",
  "a jv js_visit",
  "ts",
  "s js,type",
  "a jvt js_visit_type",
  "o mc",
  "nj js_dollar_ie",
  "de js_js_dollar_ie",
  "nj dollar_ie",
  "fs js_call_new",
  "mf 1 2 js_call_new_code",
  "s js_visit_type",
  "n not",
  "s js,call",
  "s js_keyword_arguments",
  "fts jbtn",
  "s au",
  "s js_block_child_graph",
  "s atom",
  "o ",
  "o js_atomize_function",
  "s visit,each",
  "s js,visit",
  "c js_visit_each_async js_visit_each",
  "fts js_block_child_graph_unparse",
  "fw list_is list_not_is",
  "fts jbcg",
  "f",
  "o jbcgu",
  "ftc jbcgu",
  "fts jbcgu",
  "      }",
  "s me",
  "u me",
  "s enter",
  "n function_rename",
  "u fc",
  "a fcp function_copy",
  "a r function_rename",
  "r js_marker_enter marker_enter",
  "ac me mx",
  "a me marker_enter",
  "u lr",
  "a lr list_remove",
  "s list,add",
  "s block",
  "n marker_above",
  "s marker,index",
  "c marker_previous_index marker_index",
  "as insert",
  "u li",
  "u lis",
  "a lis list_insert",
  "a ma marker_above",
  "a mab marker_above",
  "c mab marker_delete_above",
  "s prev",
  "a mda marker_delete_above",
  "mda",
  "u ja",
  "a ja js_auto",
  "mab $g$v$stack",
  "s function,write",
  "s write",
  "s file_js_unparse",
  "fw data_transform data_identifiers_file",
  "s list,if,not",
  "a lax list_add_if_not_includes",
  "s file_js",
  "s path_To",
  "s path_to",
  "data_property_get identifiers",
  "s join",
  "u lj",
  "a lj list_join",
  "n data_file_update",
  "de data_identifiers_file",
  "s remove",
  "dpg dfu",
  "data_property_get data_file_update",
  "dpg functions",
  "s delete",
  "a opd object_property_delete",
  "  let x = null;",
  "ps",
  "dpg identifiers",
  "s catch",
  "c chalk_green chalk_red",
  "s data,udpate",
  "c fws function_watch_suffix_change",
  "r function_watch_suffix_change function_watch_ending_change",
  "s suffix",
  "a fwc function_watch_ending_change",
  "fwc error_attention_set set clear",
  "s update",
  "s functions",
  "functions_path",
  "functions_paths",
  "de functions_paths",
  "de fs",
  "o fs",
  "function_imports_missing folder_read",
  "functions_names",
  "s data,update",
  "fws data_file_update all",
  "r data_file_update_all data_files_update",
  "u fntp",
  "a fntp function_name_to_path",
  "u d",
  "a d data_files_update",
  "o d",
  "fw dpg data_identifiers_search",
  "s search",
  "s list_To",
  "s list_to",
  "s test",
  "s task",
  "a is data_identifiers_search",
  "is v",
  "is value",
  "is null_is",
  "s unali",
  "nj imports_unused",
  "s ident",
  "n counter",
  "ftc js_imports_unused",
  "is js_imports",
  "c js_imports js_imports_declarations",
  "s dollar",
  "s remaining",
  "c list_first_second list_first_remaining",
  "s assert,size",
  "s reve",
  "s equal",
  "s filter",
  "u lfp",
  "a lfp list_filter_property",
  "fts js_imports_unused",
  "fws js_imports_unused remove",
  "fts js_imports_unused_remove",
  "s imports",
  "c function_imports_missing_add function_imports_fix",
  "ar i function_imports_fix",
  "o auto",
  "s auto",
  "fwc js_imports_missing_add missing_add fix",
  "s data,set",
  "gp",
  "data_get git_push_when",
  "dpg git_push_when",
  "x",
  "fs gp",
  "mx",
  "s date",
  "s lambda",
  "s git",
  "s data",
  "s decl",
  "s red",
  "s error_attention",
  "dpg error_attention",
  "p",
  "o gp",
  "d",
  "s name",
  "s call,name",
  "s call",
  "mc js_call_function_if",
  "mab $g$v$node",
  "ire node2 2",
  "o mm",
  "mn",
  "o mn",
  "md -1",
  "n marker_leave",
  "a ml marker_leave",
  "fd",
  "cd",
  "s assert,list",
  "me",
  "o w",
  "eac",
  "fs jaa",
  "mg",
  "ml",
  "o md",
  "c md marker_up"
 ],
 "marker_current": "1",
 "function_current": "marker_up",
 "terminal": false,
 "identifiers": {
  "log": [
   "data_identifiers_file",
   "file_js_unparse",
   "catch_log",
   "catch_log_async",
   "catch_only_async",
   "data_prompts",
   "file_exists",
   "file_open",
   "functions_combine",
   "functions_combine_name",
   "function_acronym_to_name",
   "function_alias_add_generic",
   "function_auto",
   "function_current_set",
   "function_delete_if_exists",
   "function_dependencies_code",
   "function_identifier_replace",
   "function_imports_add",
   "function_name_to_path_unalias",
   "function_new",
   "function_new_transform",
   "function_param_new",
   "function_run_log",
   "function_transform",
   "function_transform_marker",
   "function_transform_marker_all",
   "function_transform_marker_empty",
   "function_wrap",
   "js_atomize",
   "js_atomize_function",
   "js_bang_to_not",
   "js_block_child_graph",
   "js_block_child_graph_unparse",
   "js_call_fill",
   "js_declaration_params_names_node",
   "js_declaration_param_named",
   "js_declare_assign_null",
   "js_dollar",
   "js_dollar_a",
   "js_dollar_ie",
   "js_dollar_r",
   "js_dollar_rf",
   "js_dollar_rt",
   "js_dollar_s",
   "js_function_id_add",
   "js_identifier_defineds",
   "js_if_blockify",
   "js_if_else_if_combine",
   "js_let_add",
   "js_marker_named",
   "js_marker_named_ast",
   "js_node_types_is",
   "js_parse",
   "js_parse_expression",
   "js_return_atomize",
   "js_return_name",
   "js_unparse",
   "js_visit_type",
   "js_visit_types",
   "list_size_1_assert",
   "list_size_1_assert_message",
   "log",
   "log_json",
   "log_keep",
   "log_unparse",
   "marker_assign_replace",
   "marker_bottom",
   "marker_call",
   "marker_call_atomize",
   "marker_call_replace",
   "marker_down_choices",
   "marker_down_generic",
   "marker_enter",
   "marker_expand",
   "marker_functionize",
   "marker_next",
   "marker_next_delete",
   "marker_remove",
   "marker_top",
   "prompt_previous",
   "search_generic",
   "js_imports_unused",
   "git_push"
  ],
  "function_path_to_name": [
   "data_identifiers_file",
   "function_auto_path",
   "file_open",
   "function_path_declaration_unparse",
   "function_path_to_name",
   "data_file_update_inner"
  ],
  "list_add_if_not_includes": [
   "data_identifiers_file",
   "list_add_if_not_includes",
   "visit_unique_async",
   "data_file_update_inner"
  ],
  "object_property_initialize": [
   "data_identifiers_file",
   "data_get",
   "data_value",
   "function_alias_add_generic",
   "object_invert",
   "object_property_initialize",
   "data_file_update_inner"
  ],
  "each": [
   "data_identifiers_file",
   "each",
   "each_index",
   "each_object",
   "each_range",
   "each_reverse",
   "functions_search",
   "function_auto",
   "function_identifier_replace",
   "function_imports_add",
   "function_imports_missing_add",
   "function_params_new",
   "function_param_swap",
   "function_transform_marker",
   "function_transform_marker_all",
   "js_atomize",
   "js_atomize_function",
   "js_block_child_graph",
   "js_block_child_graph_unparse",
   "js_call_new",
   "js_call_new_code",
   "js_declaration_params_names",
   "js_declaration_single_params_add",
   "js_dollar",
   "js_dollar_a",
   "js_dollar_s",
   "js_identifier_defineds",
   "js_imports",
   "js_outside_move",
   "js_stack_filtered_each",
   "js_stack_filtered_multiple_each",
   "js_visit_each",
   "lambda_invoke_multiple",
   "list_difference",
   "list_intersect",
   "list_remove_multiple",
   "list_squash",
   "list_to_dictionary",
   "list_unique",
   "marker_call",
   "marker_expand",
   "marker_functionize",
   "object_invert",
   "object_merge",
   "object_properties_delete",
   "search_generic",
   "visit_filter_recursive",
   "visit_filter_recursive_async",
   "js_imports_unused",
   "js_imports_declarations",
   "js_dollar_g",
   "js_imports_unused_remove",
   "function_imports_fix",
   "js_imports_fix",
   "data_file_update_inner"
  ],
  "js_identifiers_names": [
   "data_identifiers_file",
   "function_imports_missing",
   "js_atomize",
   "js_call_new",
   "js_call_new_code",
   "js_dollar",
   "js_identifiers_names",
   "js_identifier_unique_ast",
   "js_imports_missing",
   "js_return_atomize",
   "js_return_name",
   "marker_call",
   "marker_expand",
   "data_file_update_inner"
  ],
  "data_transform": [
   "data_identifiers_file",
   "error_attention_set",
   "data_terminal_set",
   "data_transform",
   "data_watch_set",
   "function_current_set",
   "function_open",
   "function_open_editor",
   "function_run_line",
   "function_run_line_git",
   "function_run_line_parse",
   "marker_current_set",
   "prompt_previous",
   "data_set"
  ],
  "marker": [
   "data_identifiers_file",
   "watch",
   "data_file_update",
   "chalk_red",
   "function_watch_suffix_change",
   "function_watch_ending_change",
   "error_attention_clear",
   "data_file_update_all",
   "data_terminal_get",
   "data_terminal_set",
   "equal_not",
   "exit",
   "file_open",
   "function_auto",
   "function_copy",
   "function_current_set",
   "function_identifier_replace",
   "function_identifier_replace_ending_remove",
   "function_new_js",
   "function_open",
   "function_params_consolidate",
   "function_param_new",
   "function_rename",
   "function_transform_marker",
   "function_transform_marker_all",
   "function_transform_marker_current",
   "function_transform_marker_empty",
   "function_wrap",
   "git_push_schedule_check",
   "html_new",
   "integer_is",
   "js_atomize",
   "js_atomize_function",
   "js_await_add",
   "js_bang_to_not",
   "js_block_child_graph",
   "js_block_child_graph_unparse",
   "js_call_new",
   "js_declaration_param_add",
   "js_dollar_ie",
   "js_dollar_rf",
   "js_dollar_rt",
   "js_if_blockify",
   "js_if_else_if_combine",
   "js_marker_insert",
   "js_marker_named",
   "js_marker_name_get",
   "js_outside_move",
   "js_visitors",
   "js_visit_each",
   "js_visit_types",
   "list_index_is",
   "list_last_or_null",
   "list_map_property_to",
   "list_not_is",
   "list_to",
   "marker",
   "marker_above",
   "marker_bottom",
   "marker_call",
   "marker_delete_above",
   "marker_down_choices",
   "marker_down_choices_lambda",
   "marker_enter",
   "marker_functionize",
   "marker_index",
   "marker_move",
   "marker_new",
   "marker_remove_marker_top",
   "marker_top",
   "not",
   "null_not_is",
   "prompt_previous",
   "sandbox",
   "string_is_assert_message",
   "data_identifiers_search",
   "js_imports_unused",
   "counter",
   "js_imports_declarations",
   "list_first_remaining",
   "js_imports_unused_remove",
   "function_imports_fix",
   "git_push",
   "marker_leave",
   "marker_down",
   "marker_up"
  ],
  "data_identifiers_file": [
   "data_identifiers_file",
   "file_js_unparse"
  ],
  "parsed": [
   "data_identifiers_file",
   "file_js_unparse",
   "file_js_parse",
   "function_imports",
   "function_imports_missing",
   "function_imports_missing_add",
   "function_parse",
   "function_parse_declaration",
   "function_transform_result",
   "js_call_fill",
   "js_call_insert",
   "js_call_new",
   "js_dollar_f",
   "js_dollar_g",
   "js_visit_nodes",
   "marker_call",
   "marker_functionize",
   "function_imports_fix",
   "data_files_update",
   "data_file_update",
   "data_file_update_inner"
  ],
  "f_path": [
   "data_identifiers_file",
   "file_js_unparse",
   "data_file_update",
   "file_js_parse",
   "data_file_update_all",
   "file_open",
   "file_write",
   "function_auto_path",
   "function_copy",
   "function_delete",
   "function_exists",
   "function_format",
   "function_import",
   "function_name_to_path_unalias",
   "function_new_declaration",
   "function_open",
   "function_open_editor",
   "function_parse",
   "function_path_declaration_unparse",
   "function_path_to_name",
   "function_read",
   "js_outside_move",
   "data_file_update_inner"
  ],
  "ast": [
   "data_identifiers_file",
   "file_js_unparse",
   "file_js_parse",
   "functions_combine",
   "function_copy",
   "function_identifier_replace",
   "function_imports",
   "function_imports_add",
   "function_imports_missing",
   "function_imports_missing_add",
   "function_new_declaration",
   "function_new_js",
   "function_params_consolidate",
   "function_params_new",
   "function_param_swap",
   "function_parse_declaration",
   "function_transform_marker",
   "function_transform_marker_all",
   "function_transform_marker_arg",
   "function_transform_result",
   "function_types",
   "function_type_first",
   "function_wrap",
   "js_arrow_blockify",
   "js_arrow_to_function",
   "js_atomize",
   "js_atomize_function",
   "js_auto",
   "js_await_add",
   "js_bang_to_not",
   "js_block_child_graph",
   "js_block_child_graph_unparse",
   "js_calls_to_each",
   "js_call_fill",
   "js_call_new",
   "js_call_new_code",
   "js_call_new_expression",
   "js_declaration_single_block_blody",
   "js_declaration_single_params_add",
   "js_declare_assign",
   "js_declare_assign_null",
   "js_dollar",
   "js_dollar_a",
   "js_dollar_a_generic",
   "js_dollar_g",
   "js_dollar_ie",
   "js_dollar_s",
   "js_function_id_add",
   "js_identifiers",
   "js_identifiers_named",
   "js_identifiers_names",
   "js_identifier_replace",
   "js_identifier_unique_ast",
   "js_if_blockify",
   "js_if_blockify_generic",
   "js_if_else_if_combine",
   "js_imports",
   "js_imports_all",
   "js_imports_missing",
   "js_imports_missing_add",
   "js_import_inside",
   "js_let_add",
   "js_markers",
   "js_marker_named_ast",
   "js_marker_named_ast_arg",
   "js_node_atomize",
   "js_node_types",
   "js_node_types_includes",
   "js_outside_move",
   "js_parse",
   "js_parse_statement",
   "js_parse_statement_module",
   "js_return_atomize",
   "js_return_name",
   "js_type",
   "js_unparse",
   "js_unparse_inner",
   "js_visit",
   "js_visitors",
   "js_visit_match",
   "js_visit_type",
   "js_visit_types",
   "js_visit_type_each_async",
   "marker_above",
   "marker_call",
   "marker_call_atomize",
   "marker_call_replace_generic",
   "marker_down_choices_lambda",
   "marker_expand",
   "marker_functionize",
   "marker_move",
   "marker_top",
   "promise_not_is",
   "task_new",
   "js_imports_unused",
   "js_imports_declarations",
   "js_imports_unused_remove",
   "function_imports_fix",
   "js_imports_fix",
   "data_file_update_inner",
   "js_declaration_single",
   "js_identifiers_named_count"
  ],
  "code": [
   "data_identifiers_file",
   "file_js_unparse",
   "file_js_parse",
   "data_file_update",
   "function_dependencies_code_copy",
   "function_imports_add",
   "function_transform_marker",
   "function_wrap",
   "import_install",
   "js_bang_to_not",
   "js_call_insert",
   "js_call_new",
   "js_call_new_code",
   "js_call_new_expression",
   "js_code_arrow",
   "js_code_assign",
   "js_code_await",
   "js_code_call_args_await_maybe",
   "js_code_return",
   "js_code_statement",
   "js_dollar_f",
   "js_dollar_g",
   "js_dollar_rf",
   "js_dollar_rt",
   "js_dollar_s",
   "js_format",
   "js_parse",
   "js_parse_statement",
   "js_parse_statement_module",
   "js_return_code_replace",
   "js_return_empty",
   "js_statement_return",
   "js_unparse",
   "log_unparse",
   "marker_above",
   "marker_down_choices",
   "marker_functionize"
  ],
  "f_name": [
   "data_identifiers_file",
   "watch",
   "function_auto_path",
   "function_watch_suffix_change",
   "function_watch_ending_change",
   "command_line_node_g",
   "data_marker_current_get",
   "functions_combine",
   "functions_search_open",
   "function_alias_add",
   "function_alias_replace",
   "function_auto",
   "function_current_set",
   "function_current_set_task_new",
   "function_current_set_task_new_simple",
   "function_delete",
   "function_delete_if_exists",
   "function_dependencies",
   "function_dependencies_code",
   "function_dependencies_code_copy",
   "function_exists",
   "function_format",
   "function_identifier_replace",
   "function_import",
   "function_imports",
   "function_imports_missing",
   "function_imports_missing_add",
   "function_name_to_acronym",
   "function_name_to_parts",
   "function_name_to_path",
   "function_name_to_path_unalias",
   "function_name_unalias",
   "function_new",
   "function_new_aliased",
   "function_new_transform",
   "function_open",
   "function_open_editor",
   "function_params_consolidate",
   "function_param_swap",
   "function_param_swap_task_simple",
   "function_parse",
   "function_parse_declaration",
   "function_parse_declaration_js_unparse",
   "function_path_declaration_unparse",
   "function_path_to_name",
   "function_read",
   "function_run",
   "function_run_git",
   "function_run_line",
   "function_run_line_git",
   "function_run_line_parse",
   "function_run_log",
   "function_transform",
   "function_transform_command",
   "function_transform_command_self",
   "function_transform_current",
   "function_transform_marker",
   "function_transform_marker_all",
   "function_transform_marker_empty",
   "function_transform_result",
   "function_types",
   "function_type_first",
   "function_wrap",
   "function_wrap_suffix_add",
   "git_acp_call",
   "js_call_insert",
   "js_call_new_expression",
   "js_code_call_statement",
   "js_code_declaration",
   "js_marker_insert",
   "js_outside_move",
   "marker_assign_replace",
   "marker_call_replace_generic",
   "marker_down_choices",
   "marker_expand",
   "marker_functionize",
   "marker_move",
   "marker_new",
   "marker_next",
   "marker_next_delete",
   "marker_remove",
   "marker_top",
   "task_new",
   "function_imports_fix",
   "data_file_update_inner"
  ],
  "property_name": [
   "data_identifiers_file",
   "data_boolean_set",
   "data_function_current_get",
   "data_get",
   "data_marker_current_get",
   "data_property_get",
   "data_terminal_get",
   "data_terminal_set",
   "data_transform",
   "data_value",
   "data_watch_get",
   "data_watch_set",
   "js_arrow_blockify",
   "js_dollar_g",
   "js_function_last_asyncify",
   "js_identifier_unique_ast",
   "js_if_blockify",
   "js_if_blockify_generic",
   "list_filter_property",
   "list_find_property",
   "list_map_name",
   "list_map_property",
   "object_property_delete",
   "object_property_equals",
   "object_property_equals_lambda",
   "object_property_exists",
   "object_property_exists_assert",
   "object_property_from",
   "object_property_get",
   "object_property_initialize",
   "object_property_set",
   "list_first_second",
   "list_first_remaining",
   "data_set",
   "git_push",
   "data_file_update_inner",
   "list_first_second_generic",
   "function_run_prompt"
  ],
  "lambda": [
   "data_identifiers_file",
   "watch",
   "folder_read",
   "catch_ignore",
   "catch_ignore_async",
   "catch_log",
   "catch_log_async",
   "catch_only_async",
   "each_index",
   "each_multiple",
   "each_object",
   "each_pair",
   "each_range",
   "each_reverse",
   "file_exists",
   "functions_combine",
   "function_alias_add",
   "function_alias_change",
   "function_alias_delete",
   "function_alias_generic",
   "function_alias_replace",
   "function_copy",
   "function_current_set",
   "function_dependencies",
   "function_identifier_replace",
   "function_imports_add",
   "function_new_js",
   "function_params_consolidate",
   "function_params_new",
   "function_param_swap",
   "function_transform_current",
   "function_transform_marker",
   "function_wrap",
   "git_commit",
   "git_push",
   "js_arrow_to_function",
   "js_atomize",
   "js_atomize_function",
   "js_auto",
   "js_await_add",
   "js_bang_to_not",
   "js_block_child_graph",
   "js_block_child_graph_unparse",
   "js_calls_to_each",
   "js_call_fill",
   "js_call_new_code",
   "js_declare_assign",
   "js_declare_assign_null",
   "js_dollar",
   "js_dollar_a",
   "js_dollar_a_generic",
   "js_dollar_f",
   "js_dollar_g",
   "js_dollar_s",
   "js_function_id_add",
   "js_identifier_defineds",
   "js_identifier_replace",
   "js_if_blockify_generic",
   "js_if_else_if_combine",
   "js_let_add",
   "js_marker_named_ast",
   "js_node_type_is_if",
   "js_node_type_is_if_async",
   "js_outside_move",
   "js_return_atomize",
   "js_stack_filtered_each",
   "js_stack_filtered_multiple",
   "js_unparse",
   "js_visitors",
   "js_visit_each_async",
   "js_visit_types",
   "js_visit_type_each_async",
   "lambda_invoke",
   "list_adder_async",
   "list_adder_generic",
   "list_adder_multiple",
   "list_adder_unique",
   "list_adder_unique_async",
   "list_map_property_to",
   "list_sort_number_mapper",
   "list_squash",
   "list_to_dictionary",
   "marker_above",
   "marker_assign_replace",
   "marker_call",
   "marker_call_atomize",
   "marker_call_replace",
   "marker_call_replace_generic",
   "marker_delete_above",
   "marker_down_choices",
   "marker_down_generic",
   "marker_enter",
   "marker_new",
   "marker_next",
   "marker_next_delete",
   "marker_remove",
   "marker_top",
   "search_generic",
   "tasks_run",
   "task_new",
   "throws_not_async",
   "undefined_not_is_assert_lambda",
   "visit_unique_async",
   "js_imports_unused",
   "js_imports_declarations",
   "js_imports_unused_remove",
   "data_set",
   "js_imports_fix",
   "data_files_update",
   "data_file_update_inner",
   "js_declaration_single",
   "js_node_atomize",
   "marker_leave"
  ],
  "previous": [
   "data_identifiers_file",
   "data_file_update",
   "error_attention_set",
   "data_boolean_set",
   "function_current_set",
   "function_run_line_parse",
   "list_copy_reverse",
   "list_previous",
   "list_unique_reverse",
   "marker_current_set",
   "prompt_previous",
   "data_set"
  ],
  "i_names": [
   "data_identifiers_file",
   "data_file_update"
  ],
  "lambda2": [
   "data_identifiers_file",
   "watch",
   "functions_combine",
   "function_dependencies",
   "function_identifier_replace",
   "function_params_consolidate",
   "function_transform_marker",
   "js_block_child_graph",
   "js_call_new_code",
   "js_declare_assign",
   "js_dollar",
   "js_dollar_a",
   "js_dollar_s",
   "js_identifier_defineds",
   "js_node_types_is",
   "js_outside_move",
   "js_visit_each",
   "list_squash",
   "marker_call",
   "marker_call_replace_generic",
   "marker_down_choices",
   "marker_down_choices_lambda",
   "marker_expand",
   "schtasks_query",
   "search_generic",
   "visit_unique_async",
   "js_imports_declarations",
   "js_dollar_g",
   "data_file_update_inner",
   "js_declaration_single",
   "js_identifiers_named_count"
  ],
  "i_name": [
   "data_identifiers_file",
   "data_file_update_inner",
   "js_identifiers_named_count"
  ],
  "list": [
   "data_identifiers_file",
   "watch",
   "each",
   "each_async",
   "each_index",
   "each_reverse",
   "functions_combine",
   "functions_combine_test",
   "functions_names_includes",
   "function_acronym_to_names",
   "function_alias_add",
   "function_type_first",
   "js_call_insert",
   "js_identifier_defineds",
   "js_marker_insert",
   "lists_get",
   "list_add",
   "list_adder",
   "list_adder_async",
   "list_adder_generic",
   "list_adder_multiple",
   "list_add_if_not_includes",
   "list_add_multiple",
   "list_all",
   "list_any",
   "list_difference",
   "list_empty",
   "list_empty_is",
   "list_empty_not_is",
   "list_empty_not_is_assert",
   "list_filter",
   "list_filter_property",
   "list_find",
   "list_find_property",
   "list_first",
   "list_first_second",
   "list_get",
   "list_includes",
   "list_index_is",
   "list_index_last",
   "list_index_of",
   "list_index_of_delta",
   "list_index_of_next",
   "list_index_of_previous",
   "list_insert",
   "list_insert_generic",
   "list_intersect",
   "list_is_assert",
   "list_join",
   "list_last",
   "list_last_is",
   "list_last_or_null",
   "list_map",
   "list_map_index",
   "list_map_name",
   "list_map_property",
   "list_map_property_to",
   "list_map_unordered_async",
   "list_multiple_is",
   "list_next",
   "list_next_index",
   "list_pop",
   "list_previous",
   "list_range",
   "list_remove",
   "list_remove_all",
   "list_remove_at",
   "list_remove_multiple",
   "list_replace",
   "list_reverse",
   "list_second",
   "list_single",
   "list_size",
   "list_size_1",
   "list_size_1_assert",
   "list_size_1_assert_message",
   "list_skip",
   "list_slice",
   "list_sort_number_mapper",
   "list_sort_string",
   "list_sort_string_size",
   "list_splice",
   "list_squash",
   "list_swap",
   "list_to_dictionary",
   "list_unique",
   "list_wait",
   "marker_call",
   "marker_call_replace_generic",
   "marker_functionize",
   "object_invert",
   "search_generic",
   "data_identifiers_search",
   "list_first_remaining",
   "data_file_update_inner",
   "list_first_second_generic",
   "list_skip_1"
  ],
  "v": [
   "data_identifiers_file",
   "file_js_unparse",
   "function_auto_path",
   "data_file_update",
   "chalk_green",
   "function_watch_suffix_change",
   "function_watch_ending_change",
   "error_attention_clear",
   "folder_read",
   "data_file_update_all",
   "data_boolean_set",
   "data_terminal_set",
   "data_watch_set",
   "functions_combine_name",
   "function_acronym_to_name",
   "function_copy_suffix_add",
   "function_current_declaration_code",
   "function_current_set",
   "function_dependencies",
   "function_identifier_replace",
   "function_name_to_path_unalias",
   "function_name_unalias",
   "function_new_transform",
   "function_open_editor_current",
   "function_read",
   "function_transform_command",
   "function_transform_marker",
   "function_transform_marker_all",
   "function_transform_marker_arg",
   "function_transform_marker_current",
   "function_transform_marker_empty",
   "function_wrap",
   "function_wrap_suffix_add",
   "js_arrow_to_function",
   "js_atomize",
   "js_atomize_function",
   "js_await_add",
   "js_bang_to_not",
   "js_block_child_graph",
   "js_calls_to_each",
   "js_call_fill",
   "js_call_new",
   "js_call_new_code",
   "js_code_import_single",
   "js_declaration_single",
   "js_declare_assign",
   "js_dollar",
   "js_function_id_add",
   "js_identifiers",
   "js_identifiers_names",
   "js_identifier_defineds",
   "js_identifier_replace",
   "js_if_blockify_generic",
   "js_if_else_if_combine",
   "js_keyword_false",
   "js_keyword_from",
   "js_keyword_import",
   "js_let_add",
   "js_marker_is",
   "js_marker_named",
   "js_marker_named_ast",
   "js_marker_name_get",
   "js_node_atomize",
   "js_return_atomize",
   "js_unparse",
   "js_visit_each",
   "js_visit_match",
   "js_visit_nodes",
   "js_visit_types",
   "list_get",
   "list_index_is",
   "list_last_or_null",
   "list_to",
   "marker_above",
   "marker_assign_replace_string",
   "marker_bottom",
   "marker_delete_above",
   "marker_down",
   "marker_down_choices",
   "marker_down_choices_lambda",
   "marker_down_generic",
   "marker_enter",
   "marker_functionize",
   "marker_remove_marker_top",
   "marker_top",
   "object_property_get",
   "prompt_previous",
   "search_generic",
   "server",
   "string_includes",
   "string_is_assert_message",
   "visit_unique_async",
   "js_imports_declarations",
   "js_imports_fix",
   "date_diff_ms",
   "date_iso_to",
   "date_ms_to_hours",
   "date_to",
   "js_identifiers_named_count",
   "marker_new",
   "marker_leave",
   "marker_up"
  ],
  "file_overwrite": [
   "file_js_unparse",
   "file_overwrite",
   "file_overwrite_json",
   "file_write",
   "function_delete",
   "function_format",
   "function_new",
   "html_new",
   "html_overwrite"
  ],
  "js_unparse": [
   "file_js_unparse",
   "function_dependencies_code",
   "function_new",
   "function_new_declaration",
   "function_parse_declaration_js_unparse",
   "function_transform_marker",
   "function_transform_marker_empty",
   "js_block_child_graph_unparse",
   "js_call_fill",
   "js_call_new",
   "js_call_new_code",
   "js_code_string",
   "js_dollar",
   "js_dollar_ie",
   "js_if_else_if_combine",
   "js_unparse",
   "list_map_unordered_async",
   "log_unparse",
   "marker_assign_replace",
   "marker_call",
   "marker_call_atomize",
   "marker_call_replace",
   "marker_call_replace_generic",
   "marker_down_choices",
   "marker_down_generic",
   "marker_enter",
   "marker_expand",
   "marker_functionize",
   "marker_next",
   "marker_next_delete"
  ],
  "js_format": [
   "file_js_unparse",
   "function_format",
   "js_format"
  ],
  "file_js_unparse": [
   "file_js_unparse",
   "function_imports_missing_add",
   "function_transform",
   "function_transform_result",
   "function_imports_fix"
  ],
  "code_unparsed": [
   "file_js_unparse"
  ],
  "code_new": [
   "file_js_unparse"
  ],
  "message": [
   "file_js_unparse",
   "assert_json",
   "assert_message",
   "catch_log_async",
   "catch_only_async",
   "error",
   "error_json",
   "function_transform_marker",
   "git_acp",
   "git_acp_call",
   "git_acp_timestamp",
   "git_commit",
   "js_declaration_params_names_node",
   "list_size_1_assert",
   "list_size_1_assert_message",
   "log",
   "log_json",
   "log_keep",
   "string_is_assert_json",
   "string_is_assert_message",
   "undefined_not_is_assert_lambda"
  ],
  "object_property_exists_equals": [
   "watch",
   "object_property_exists_equals"
  ],
  "catch_log_async": [
   "watch",
   "catch_log_async",
   "git_push"
  ],
  "git_acp_call": [
   "function_run_git",
   "git_acp_call"
  ],
  "catch_log": [
   "catch_log"
  ],
  "catch_ignore": [
   "catch_ignore"
  ],
  "function_auto_path": [
   "watch",
   "function_auto_path"
  ],
  "functions_path": [
   "watch",
   "functions_names",
   "functions_path",
   "function_name_to_path"
  ],
  "import_install": [
   "watch",
   "chalk_green",
   "chalk_red",
   "chalk_color",
   "import_install",
   "js_unparse"
  ],
  "command_line": [
   "command_line",
   "command_line_git",
   "command_line_node_g",
   "command_line_schtasks",
   "file_open",
   "file_open_editor",
   "git_push_schedule",
   "git_push_schedule_check",
   "npm_install",
   "schtasks_query"
  ],
  "log_keep": [
   "catch_log",
   "catch_log_async",
   "command_line_node_g",
   "exit",
   "file_open",
   "function_run_log",
   "function_transform",
   "git_rebase",
   "js_parse",
   "log",
   "log_keep",
   "prompt_previous",
   "server",
   "log_error"
  ],
  "object_property_exists": [
   "function_acronym_to_name",
   "function_alias_add_generic",
   "js_call_fill",
   "js_node_is",
   "object_merge",
   "object_property_exists",
   "object_property_exists_assert",
   "object_property_exists_equals",
   "object_property_initialize"
  ],
  "object_property_equals": [
   "watch",
   "marker_functionize",
   "object_property_equals",
   "object_property_equals_lambda",
   "object_property_exists_equals"
  ],
  "object_property_set": [
   "watch",
   "data_transform",
   "functions_search",
   "function_aliases",
   "function_alias_add",
   "function_alias_change",
   "function_alias_delete",
   "function_alias_generic",
   "function_alias_replace",
   "function_open",
   "function_open_editor",
   "function_wrap",
   "js_arrow_blockify",
   "js_arrow_to_function",
   "js_call_fill",
   "js_code_string",
   "js_declaration_asyncify",
   "js_declare_assign",
   "js_declare_assign_null",
   "js_declare_init_set",
   "js_dollar_ie",
   "js_dollar_r",
   "js_dollar_rf",
   "js_dollar_rt",
   "js_dollar_s",
   "js_function_id_add",
   "js_function_last_asyncify",
   "js_identifier_replace",
   "js_if_blockify",
   "js_if_blockify_generic",
   "js_if_else_if_combine",
   "js_left_right_set",
   "js_return_code_replace",
   "js_stack_declaration_asyncify",
   "list_empty",
   "list_map_property_to",
   "list_to_dictionary",
   "marker_assign_replace",
   "marker_call",
   "marker_call_atomize",
   "marker_call_replace",
   "marker_expand",
   "marker_next_delete",
   "object_merge",
   "object_property_from",
   "object_property_initialize",
   "object_property_set",
   "search_generic",
   "data_file_update_inner"
  ],
  "watch": [
   "watch"
  ],
  "chokidar": [
   "watch"
  ],
  "default": [
   "watch",
   "chalk_color",
   "clipboard_copy"
  ],
  "joined": [
   "watch",
   "functions_path",
   "function_import",
   "function_name_to_path",
   "js_code_call_args",
   "list_join_empty"
  ],
  "watcher": [
   "watch"
  ],
  "persistent": [
   "watch"
  ],
  "ignoreInitial": [
   "watch"
  ],
  "in_progress": [
   "watch",
   "object_property_exists_equals"
  ],
  "on": [
   "watch"
  ],
  "path": [
   "watch",
   "function_import",
   "object_property_exists_equals",
   "path_join",
   "path_name",
   "path_resolve",
   "server"
  ],
  "value": [
   "watch",
   "error_attention_set",
   "data_boolean_set",
   "data_get",
   "data_property_get",
   "data_transform",
   "data_value",
   "each_object",
   "function_alias_add_generic",
   "function_params_consolidate",
   "integer_is",
   "js_declaration_params_names_node",
   "js_declare_assign",
   "js_declare_assign_null",
   "js_dollar_s",
   "js_function_id_add",
   "js_identifier_defineds",
   "js_marker_name_get",
   "list_insert",
   "list_insert_generic",
   "list_is",
   "list_map_property",
   "list_not_is",
   "list_replace",
   "list_splice",
   "list_to_dictionary",
   "marker_assign_replace_string",
   "null_is",
   "null_not_is",
   "number_is",
   "object_invert",
   "object_merge",
   "object_property_exists_equals",
   "object_property_get",
   "object_property_initialize",
   "object_property_set",
   "promise_is",
   "string_is",
   "string_is_assert",
   "string_is_assert_json",
   "string_is_assert_message",
   "undefined_is",
   "undefined_not_is_assert_lambda",
   "js_imports_declarations",
   "lambda_get"
  ],
  "name": [
   "watch",
   "file_name_html",
   "functions_names_includes",
   "function_current_set",
   "function_new_declaration",
   "function_param_swap_task_simple",
   "git_push_schedule_check",
   "git_push_schedule_task_name",
   "html_name_to_path",
   "html_new",
   "html_overwrite",
   "html_update",
   "import_install",
   "js_atomize_function",
   "js_bang_to_not",
   "js_call_fill",
   "js_declaration_name",
   "js_declaration_params_names_node",
   "js_declare",
   "js_dollar",
   "js_dollar_a",
   "js_dollar_g",
   "js_dollar_ie",
   "js_identifier_unique",
   "js_imports_missing",
   "js_let_add",
   "js_marker_insert",
   "js_marker_name_get",
   "js_node_atomize",
   "js_return_name",
   "list_map_property_to",
   "marker_expand",
   "marker_functionize",
   "marker_new",
   "path_name",
   "prompt_previous",
   "schtasks_query",
   "string_empty_not_is",
   "task_new",
   "js_imports_declarations",
   "js_imports_unused",
   "git_push",
   "js_identifiers_named_count"
  ],
  "output": [
   "watch",
   "command_line_node_g",
   "command_line_read",
   "file_open",
   "function_parse_declaration_js_unparse",
   "function_path_declaration_unparse",
   "function_transform",
   "js_unparse_inner",
   "marker_call",
   "marker_call_replace_generic"
  ],
  "args": [
   "watch",
   "command_line_node_g",
   "function_run",
   "function_run_git",
   "function_run_line",
   "function_run_line_git",
   "function_run_line_parse",
   "function_run_log",
   "git_acp_call",
   "js_code_call",
   "js_code_call_args",
   "list_join_comma_space",
   "list_join_space"
  ],
  "lj": [
   "watch"
  ],
  "list_join": [
   "functions_combine_test",
   "function_dependencies_code",
   "function_name_combine_multiple",
   "function_name_to_acronym",
   "list_join",
   "list_join_comma",
   "list_join_comma_space",
   "list_join_empty",
   "list_join_space"
  ],
  "result": [
   "watch",
   "data_file_update",
   "folder_read",
   "command_line_node_g",
   "folder_current_join",
   "functions_search",
   "functions_search_open",
   "function_aliases_search",
   "function_imports_add",
   "function_new_js",
   "function_params_consolidate",
   "function_run",
   "function_run_git",
   "function_run_log",
   "function_transform_result",
   "git_push_schedule_command",
   "js_marker_named_ast",
   "js_stack_filtered_multiple",
   "list_is_assert",
   "list_last_or_null",
   "list_map_name",
   "object_property_exists_assert",
   "search_generic",
   "server",
   "tasks_run",
   "task_new",
   "data_identifiers_search",
   "list_first_second",
   "list_first_remaining",
   "list_first_second_generic"
  ],
  "separator": [
   "watch",
   "function_name_combine_multiple",
   "function_name_separator",
   "function_name_to_parts",
   "js_dollar",
   "list_join",
   "string_split",
   "tasks_run"
  ],
  "list_join_space": [
   "command_line_node_g",
   "list_join_space"
  ],
  "command_line_node_g": [
   "watch",
   "command_line_node_g"
  ],
  "$ag": [
   "watch"
  ],
  "path_name": [
   "function_auto_path",
   "function_path_to_name",
   "path_name"
  ],
  "function_auto": [
   "function_auto_path",
   "function_auto"
  ],
  "data_file_update": [
   "data_file_update",
   "watch",
   "data_file_update_all"
  ],
  "file_js_parse": [
   "file_js_parse",
   "function_parse",
   "data_files_update",
   "data_file_update"
  ],
  "f_path2": [
   "data_file_update"
  ],
  "file_read": [
   "file_js_parse",
   "file_open",
   "file_read",
   "file_read_json",
   "function_format",
   "function_read"
  ],
  "js_parse": [
   "file_js_parse",
   "function_new_declaration",
   "js_declare_assign_null",
   "js_parse",
   "js_parse_statement",
   "js_parse_statement_module",
   "marker_assign_replace",
   "marker_call_atomize",
   "marker_call_replace",
   "marker_next_delete"
  ],
  "data_all": [
   "data_file_update",
   "data_all",
   "data_get",
   "data_value",
   "data_files_update"
  ],
  "d": [
   "data_file_update",
   "data_property_get",
   "data_transform",
   "data_files_update",
   "data_file_update_inner",
   "date_iso_to"
  ],
  "data": [
   "data_all",
   "data_get",
   "data_property_get",
   "data_save",
   "data_transform",
   "data_value",
   "file_read_json",
   "function_alias_add_generic",
   "data_file_update_inner"
  ],
  "file_path": [
   "data_file_update",
   "data_all",
   "data_get",
   "data_save",
   "file_delete",
   "file_exists",
   "file_overwrite",
   "file_overwrite_json",
   "file_read",
   "file_read_json",
   "function_alias_add_generic",
   "html_name_to_path",
   "html_new",
   "html_overwrite",
   "html_update",
   "path_name"
  ],
  "object_property_get": [
   "chalk_green",
   "chalk_red",
   "chalk_color",
   "data_function_current_get",
   "data_marker_current_get",
   "data_property_get",
   "data_terminal_get",
   "data_value",
   "data_watch_get",
   "each_object",
   "functions_combine",
   "function_acronym_to_name",
   "function_acronym_to_names",
   "function_aliases_search",
   "function_alias_add_generic",
   "function_identifier_replace",
   "function_imports_missing",
   "function_wrap",
   "js_arrow_blockify",
   "js_await_add",
   "js_bang_to_not",
   "js_call_fill",
   "js_call_new",
   "js_call_new_code",
   "js_code_call_args_await_maybe",
   "js_declaration_asyncify",
   "js_declaration_name",
   "js_declaration_params_names",
   "js_declaration_params_names_node",
   "js_dollar",
   "js_dollar_g",
   "js_dollar_s",
   "js_function_id_add",
   "js_function_last_asyncify",
   "js_identifiers",
   "js_identifiers_named",
   "js_identifiers_names",
   "js_identifier_defineds",
   "js_identifier_replace",
   "js_if_blockify",
   "js_if_blockify_generic",
   "js_if_else_if_combine",
   "js_imports_missing",
   "js_let_add",
   "js_node_atomize",
   "js_node_type",
   "js_parse_expression",
   "js_stack_declaration_asyncify",
   "js_statement_call_get",
   "js_visit_children_get",
   "list_filter_property",
   "list_map_property",
   "marker_above",
   "marker_call",
   "marker_call_atomize",
   "marker_call_replace",
   "marker_call_replace_generic",
   "marker_delete_above",
   "marker_enter",
   "marker_functionize",
   "marker_next_delete",
   "marker_top",
   "object_invert",
   "object_merge",
   "object_property_equals",
   "object_property_equals_lambda",
   "object_property_from",
   "object_property_get",
   "object_property_initialize",
   "prompt_previous",
   "data_identifiers_search",
   "js_imports_unused",
   "js_imports_unused_remove",
   "js_imports_fix",
   "data_file_update_inner",
   "js_identifiers_named_count"
  ],
  "data_save": [
   "data_file_update",
   "data_save",
   "data_transform",
   "function_alias_generic",
   "function_open",
   "function_open_editor",
   "data_files_update"
  ],
  "identifiers": [
   "js_identifiers_named",
   "js_identifiers_to_names",
   "js_imports_missing",
   "marker_expand",
   "data_identifiers_search",
   "data_file_update_inner"
  ],
  "list_difference": [
   "function_imports_missing",
   "js_imports_missing",
   "list_difference",
   "marker_functionize",
   "prompt_previous",
   "visit_unique_async",
   "data_file_update_inner"
  ],
  "removals": [
   "list_remove_multiple",
   "data_file_update_inner"
  ],
  "item": [
   "each",
   "each_async",
   "each_index",
   "each_multiple",
   "functions_combine",
   "function_wrap",
   "js_declaration_param_add",
   "js_dollar_a",
   "js_identifier_defineds",
   "js_node_types_is",
   "js_stack_filtered_multiple",
   "js_statement_return",
   "js_types_function_includes",
   "list_add",
   "list_adder_async",
   "list_adder_generic",
   "list_add_if_not_includes",
   "list_get",
   "list_get_end",
   "list_includes",
   "list_index_of",
   "list_index_of_delta",
   "list_index_of_next",
   "list_index_of_previous",
   "list_last_is",
   "list_last_or_null",
   "list_map_index",
   "list_map_property",
   "list_map_property_to",
   "list_next",
   "list_next_index",
   "list_previous",
   "list_remove",
   "list_remove_all",
   "list_squash",
   "list_to_dictionary",
   "list_unique",
   "marker_down_choices",
   "marker_expand",
   "object_property_equals",
   "object_property_equals_lambda",
   "string_includes",
   "tasks_run",
   "data_file_update_inner"
  ],
  "list_includes": [
   "functions_names_includes",
   "js_block_child_graph",
   "js_block_child_graph_unparse",
   "js_identifier_unique",
   "js_if_blockify",
   "js_if_blockify_generic",
   "js_let_add",
   "js_node_types_includes",
   "js_types_function_includes",
   "list_add_if_not_includes",
   "list_difference",
   "list_includes",
   "list_intersect",
   "list_remove_all",
   "list_unique",
   "marker_above",
   "marker_call",
   "marker_delete_above",
   "marker_down_choices_lambda",
   "marker_enter",
   "marker_functionize",
   "visit_unique_async"
  ],
  "list_remove": [
   "function_transform_marker_empty",
   "js_dollar",
   "js_dollar_s",
   "js_outside_move",
   "list_remove",
   "list_remove_all",
   "list_remove_multiple",
   "marker_assign_replace",
   "marker_bottom",
   "marker_call_atomize",
   "marker_call_replace",
   "marker_down_choices",
   "marker_down_choices_lambda",
   "marker_down_generic",
   "marker_enter",
   "marker_expand",
   "marker_functionize",
   "marker_move",
   "marker_next",
   "marker_next_delete",
   "marker_remove",
   "js_dollar_g",
   "js_imports_unused_remove",
   "js_imports_fix",
   "marker_leave"
  ],
  "list_remove_all": [
   "list_remove_all",
   "data_file_update_inner"
  ],
  "list_empty_is": [
   "function_identifier_replace",
   "function_transform_marker",
   "function_transform_marker_all",
   "function_transform_marker_empty",
   "js_marker_named",
   "js_marker_name_get",
   "js_return_name",
   "list_all",
   "list_any",
   "list_empty_is",
   "list_empty_not_is",
   "list_index_is",
   "list_last_or_null",
   "list_single",
   "marker_bottom",
   "marker_down_choices",
   "marker_down_generic",
   "marker_functionize",
   "data_file_update_inner"
  ],
  "e": [
   "catch_ignore",
   "catch_ignore_async",
   "catch_log",
   "catch_log_async",
   "catch_only_async",
   "function_exists",
   "git_rebase",
   "js_parse",
   "js_unparse",
   "list_empty_is",
   "list_index_is",
   "list_join_empty",
   "string_empty_is",
   "throws_not_async",
   "data_file_update_inner"
  ],
  "object_property_delete": [
   "function_alias_change",
   "function_alias_delete",
   "function_alias_replace",
   "js_code_string",
   "object_properties_delete",
   "object_property_delete",
   "data_file_update_inner"
  ],
  "data_boolean_set": [
   "data_boolean_set",
   "data_terminal_set",
   "data_watch_set"
  ],
  "function_name_combine": [
   "function_watch_suffix_change",
   "function_watch_ending_change",
   "function_copy_suffix_add",
   "function_identifier_replace_ending_remove",
   "function_identifier_replace_suffix_add",
   "function_name_combine",
   "function_new_js",
   "function_wrap_suffix_add",
   "task_new",
   "git_push"
  ],
  "error_attention_set": [
   "watch",
   "error_attention_set",
   "error_attention_clear"
  ],
  "data_property_get": [
   "function_run_prompt",
   "data_function_current_get",
   "data_marker_current_get",
   "data_property_get",
   "data_terminal_get",
   "data_watch_get",
   "data_identifiers_search",
   "git_push"
  ],
  "trinity_green": [
   "function_run_log",
   "trinity_green"
  ],
  "chalk_green": [
   "function_run_prompt",
   "chalk_green",
   "trinity_green"
  ],
  "function_run_line_git": [
   "function_run_prompt",
   "function_run_line_git"
  ],
  "function_run_line": [
   "function_run_line",
   "prompt_previous"
  ],
  "command_line_read": [
   "function_run_prompt",
   "command_line_read"
  ],
  "function_run_git": [
   "function_run_git",
   "function_run_line",
   "function_run_line_git"
  ],
  "list_add": [
   "functions_combine",
   "function_params_consolidate",
   "function_param_new",
   "function_run_line",
   "function_run_line_git",
   "function_run_line_parse",
   "function_transform_marker_empty",
   "function_wrap",
   "js_bang_to_not",
   "js_declaration_param_add",
   "js_dollar_a",
   "js_dollar_a_generic",
   "js_dollar_f",
   "js_dollar_g",
   "js_dollar_s",
   "js_identifier_unique",
   "js_if_blockify",
   "js_if_blockify_generic",
   "list_add",
   "list_adder",
   "list_adder_async",
   "list_adder_multiple",
   "list_add_if_not_includes",
   "list_unique",
   "marker_bottom",
   "marker_call",
   "marker_down_choices",
   "marker_down_generic",
   "marker_expand",
   "marker_functionize",
   "marker_top",
   "object_invert",
   "range",
   "visit_filter_recursive",
   "visit_filter_recursive_async",
   "visit_unique_async"
  ],
  "list_unique": [
   "function_run_line",
   "function_run_line_git",
   "js_imports",
   "list_adder_unique",
   "list_adder_unique_async",
   "list_unique",
   "list_unique_reverse",
   "js_imports_declarations"
  ],
  "function_run_prompt": [
   "function_run_prompt",
   "prompt_previous"
  ],
  "prompt_colored": [
   "function_run_prompt"
  ],
  "line": [
   "function_run_prompt",
   "function_run_line",
   "function_run_line_git",
   "function_run_line_parse"
  ],
  "ea": [
   "function_run_prompt"
  ],
  "nn": [
   "function_run_prompt",
   "js_block_child_graph",
   "null_not_is"
  ],
  "null_not_is": [
   "function_run_prompt",
   "js_block_child_graph",
   "js_block_child_graph_unparse",
   "null_not_is"
  ],
  "prompt": [
   "chalk_green",
   "chalk_red",
   "function_run_prompt",
   "chalk_color",
   "command_line_read",
   "log_error"
  ],
  "color": [
   "chalk_green",
   "chalk_red",
   "chalk_color"
  ],
  "chalk_color": [
   "chalk_green",
   "chalk_red",
   "chalk_color"
  ],
  "chalk_red": [
   "chalk_red",
   "log_error"
  ],
  "chalk": [
   "chalk_color"
  ],
  "fn": [
   "chalk_color",
   "function_run",
   "js_dollar",
   "list_adder",
   "list_adder_generic",
   "list_adder_multiple",
   "list_map_squash",
   "list_squash"
  ],
  "colored": [
   "chalk_color",
   "chalk_red",
   "log_error"
  ],
  "lambda3": [
   "error_attention_set",
   "each_pair",
   "js_call_new_code",
   "js_dollar_a",
   "js_identifier_defineds",
   "js_if_else_if_combine",
   "js_outside_move",
   "marker_down_choices_lambda",
   "marker_expand",
   "js_identifiers_named_count",
   "js_await_add"
  ],
  "value2": [
   "error_attention_set"
  ],
  "error": [
   "watch",
   "string_suffix_without",
   "assert",
   "assert_file_exists_not",
   "assert_message",
   "assert_not",
   "error",
   "error_json",
   "file_exists",
   "function_aliases",
   "function_alias_add",
   "function_alias_change",
   "function_alias_delete",
   "function_alias_generic",
   "function_alias_replace",
   "function_name_to_path",
   "function_param_swap_task_simple",
   "function_transform_marker",
   "function_transform_marker_all",
   "js_declaration_params_names_node",
   "js_identifier_defineds",
   "js_marker_named",
   "js_marker_name_get",
   "js_unparse",
   "js_visit",
   "list_index_of",
   "list_remove",
   "list_single",
   "list_size_1_assert",
   "list_size_1_assert_message",
   "marker_expand",
   "marker_functionize",
   "object_merge",
   "object_property_delete",
   "object_property_get",
   "string_prefix_without",
   "task_new",
   "todo",
   "undefined_not_is_assert_lambda",
   "visit_filter_recursive",
   "visit_filter_recursive_async"
  ],
  "json_format_to": [
   "function_run_prompt",
   "error_json",
   "file_overwrite_json",
   "function_run_log",
   "json_format_to",
   "js_declaration_params_names_node",
   "js_unparse",
   "watch"
  ],
  "function_name_unalias": [
   "function_watch_suffix_change",
   "function_watch_ending_change",
   "functions_combine",
   "functions_combine_name",
   "function_copy_suffix_add",
   "function_import",
   "function_name_to_path_unalias",
   "function_name_unalias",
   "function_run_log",
   "function_wrap_suffix_add",
   "js_call_fill",
   "js_call_new",
   "task_new"
  ],
  "function_wrap": [
   "function_watch_suffix_change",
   "function_watch_ending_change",
   "function_wrap",
   "function_wrap_suffix_add"
  ],
  "function_watch_suffix_change": [
   "function_watch_suffix_change"
  ],
  "suffix": [
   "function_watch_suffix_change",
   "string_suffix_without",
   "function_copy_suffix_add",
   "function_wrap_suffix_add",
   "js_identifier_unique",
   "string_ends_with"
  ],
  "unaliased": [
   "function_watch_suffix_change",
   "function_watch_ending_change",
   "function_alias_add",
   "function_alias_add_generic",
   "function_alias_change",
   "function_copy",
   "function_copy_suffix_add",
   "function_current_set",
   "function_import",
   "function_name_to_path_unalias",
   "function_name_unalias",
   "function_parse",
   "function_run_log",
   "function_wrap",
   "function_wrap_suffix_add",
   "js_call_fill",
   "js_call_new_code",
   "js_code_call_args_await_maybe",
   "task_new"
  ],
  "f_name_wrapped": [
   "function_watch_suffix_change",
   "function_wrap",
   "function_wrap_suffix_add"
  ],
  "function_watch_ending_change": [
   "function_watch_ending_change"
  ],
  "string_suffix_without": [
   "function_watch_ending_change",
   "string_suffix_without",
   "functions_names",
   "function_identifier_replace_ending_remove",
   "string_suffix_change"
  ],
  "not": [
   "string_suffix_without",
   "js_bang_to_not",
   "js_block_child_graph",
   "js_unparse",
   "list_add_if_not_includes",
   "list_not_is",
   "log_unparse_try",
   "not",
   "object_property_initialize",
   "js_imports",
   "js_imports_declarations",
   "js_marker_name_get"
  ],
  "string_ends_with": [
   "string_suffix_without",
   "file_open",
   "string_ends_with",
   "string_prefix_without"
  ],
  "string_slice": [
   "string_suffix_without",
   "string_prefix_without",
   "string_skip",
   "string_slice"
  ],
  "string_size": [
   "string_suffix_without",
   "function_alias_add",
   "list_sort_string_size",
   "string_prefix_without",
   "string_size",
   "string_skip"
  ],
  "s": [
   "string_suffix_without",
   "js_dollar",
   "js_dollar_s",
   "string_empty_is",
   "string_ends_with",
   "string_pad",
   "string_prefix_without",
   "string_size",
   "string_skip",
   "string_slice",
   "string_split",
   "string_starts_with",
   "string_to",
   "trinity_green",
   "data_identifiers_search"
  ],
  "a": [
   "string_suffix_without",
   "data_save",
   "each_pair",
   "equal_by",
   "equal_by_async",
   "function_aliases",
   "function_alias_add",
   "function_alias_change",
   "function_alias_delete",
   "function_alias_generic",
   "function_alias_replace",
   "function_param_swap",
   "function_transform_marker",
   "function_transform_marker_all",
   "function_transform_marker_arg",
   "identity",
   "js_block_child_graph_unparse",
   "js_keyword_arguments",
   "js_visit_each",
   "js_visit_each_async",
   "list_concat",
   "list_not_is",
   "list_range",
   "list_slice",
   "list_sort_number_mapper",
   "list_swap",
   "list_to",
   "log_unparse_try",
   "marker_above",
   "marker_assign_replace",
   "marker_bottom",
   "marker_call",
   "marker_call_atomize",
   "marker_call_replace",
   "marker_call_replace_generic",
   "marker_delete_above",
   "marker_down_choices",
   "marker_down_generic",
   "marker_enter",
   "marker_expand",
   "marker_index",
   "marker_new",
   "marker_next",
   "marker_next_delete",
   "marker_next_get",
   "marker_next_index",
   "marker_previous_index",
   "marker_remove",
   "not",
   "string_slice",
   "js_imports_declarations",
   "marker_leave",
   "js_marker_name_get"
  ],
  "without": [
   "string_suffix_without",
   "string_suffix_change"
  ],
  "ending_old": [
   "function_watch_ending_change",
   "string_suffix_change"
  ],
  "ending_new": [
   "function_watch_ending_change",
   "string_suffix_change"
  ],
  "f_name_new": [
   "function_watch_ending_change",
   "function_copy",
   "marker_functionize"
  ],
  "string_suffix_change": [
   "function_watch_ending_change",
   "string_suffix_change"
  ],
  "error_attention_clear": [
   "error_attention_clear"
  ],
  "folder_read": [
   "functions_names",
   "folder_read"
  ],
  "function_name_extension": [
   "functions_names",
   "file_open",
   "function_name_extension",
   "function_name_to_base",
   "html_update"
  ],
  "list_map": [
   "functions_names",
   "functions_combine",
   "functions_format",
   "function_dependencies_code",
   "function_name_to_acronym",
   "function_params_consolidate",
   "function_transform_marker_empty",
   "js_block_child_graph_unparse",
   "js_call_new",
   "js_declaration_params_names",
   "js_declaration_params_names_node",
   "js_visit_children_get",
   "lists_get",
   "list_filter_property",
   "list_map",
   "list_map_index",
   "list_map_property",
   "list_map_property_to",
   "list_map_squash",
   "list_map_unordered_async",
   "marker_call",
   "marker_down_choices",
   "marker_expand",
   "marker_functionize",
   "marker_top",
   "js_imports_unused",
   "functions_paths"
  ],
  "functions_names": [
   "functions_names",
   "functions_format",
   "functions_names_includes",
   "functions_search",
   "functions_search_open",
   "function_names_to_acronyms",
   "function_params_consolidate",
   "js_imports_missing",
   "marker_functionize",
   "functions_paths"
  ],
  "paths": [
   "functions_names",
   "git_push_schedule_command",
   "path_resolve"
  ],
  "p": [
   "functions_names",
   "each_object",
   "js_call_new_code",
   "js_visit_children_get",
   "marker_delete_above",
   "marker_previous_index",
   "object_merge",
   "object_properties_delete"
  ],
  "f_names": [
   "functions_names",
   "functions_combine",
   "functions_combine_name",
   "functions_search",
   "function_names_to_acronyms",
   "function_params_consolidate",
   "js_imports_missing",
   "string_split_comma",
   "functions_paths"
  ],
  "path_join": [
   "folder_read",
   "folder_current_join",
   "folder_public_combine",
   "functions_path",
   "function_import",
   "function_name_to_path",
   "html_new",
   "path_join",
   "server"
  ],
  "fs": [
   "folder_read",
   "file_copy",
   "file_delete",
   "file_exists",
   "file_overwrite",
   "file_read"
  ],
  "dirPath": [
   "folder_read"
  ],
  "file": [
   "folder_read"
  ],
  "statSync": [
   "folder_read"
  ],
  "isFile": [
   "folder_read"
  ],
  "v2": [
   "folder_read",
   "function_identifier_replace",
   "js_code_or",
   "js_identifier_unique",
   "js_marker_named",
   "js_marker_name_get",
   "js_node_atomize",
   "js_operator_or",
   "js_unparse",
   "marker_bottom",
   "search_generic",
   "data_set"
  ],
  "readdirSync": [
   "folder_read"
  ],
  "filter": [
   "folder_read",
   "list_filter",
   "list_filter_property",
   "list_find",
   "list_find_property",
   "visit_filter",
   "visit_filter_async",
   "visit_filter_recursive",
   "visit_filter_recursive_async"
  ],
  "data_file_update_all": [
   "data_file_update_all"
  ],
  "data_files_update": [
   "data_files_update"
  ],
  "function_name_to_path": [
   "functions_search",
   "function_delete",
   "function_format",
   "function_imports_missing_add",
   "function_name_to_path",
   "function_name_to_path_unalias",
   "function_new",
   "function_new_declaration",
   "function_open",
   "function_open_editor",
   "function_parse",
   "function_read",
   "js_outside_move",
   "data_identifiers_search",
   "function_imports_fix",
   "functions_paths"
  ],
  "each_async": [
   "data_files_update",
   "each_async",
   "functions_combine",
   "functions_search",
   "function_auto",
   "function_imports_add",
   "function_transform_marker",
   "function_transform_marker_all",
   "js_atomize",
   "js_atomize_function",
   "js_auto",
   "js_call_fill",
   "js_dollar",
   "js_outside_move",
   "js_return_atomize",
   "js_visit_each",
   "js_visit_each_async",
   "js_visit_type_each_async",
   "marker_functionize",
   "tasks_run",
   "visit_filter_recursive_async"
  ],
  "f_paths": [
   "data_files_update",
   "functions_paths"
  ],
  "assert": [
   "assert",
   "data_terminal_set",
   "data_watch_set",
   "functions_combine",
   "function_current_set",
   "function_transform_marker_empty",
   "js_block_child_graph",
   "js_block_child_graph_unparse",
   "js_call_fill",
   "js_declare_init_set",
   "js_dollar_s",
   "js_identifiers_to_names",
   "js_identifier_replace",
   "js_node_type_is_assert",
   "list_empty_not_is_assert",
   "list_filter",
   "list_get",
   "list_insert",
   "list_insert_generic",
   "list_last",
   "list_replace",
   "marker_assign_replace",
   "marker_bottom",
   "marker_call_atomize",
   "marker_call_replace",
   "marker_down_choices",
   "marker_down_generic",
   "marker_expand",
   "marker_functionize",
   "marker_next_delete",
   "object_property_exists_assert",
   "string_is_assert",
   "string_is_assert_message"
  ],
  "b": [
   "assert",
   "assert_json",
   "assert_message",
   "assert_not",
   "each_pair",
   "equal_by",
   "equal_by_async",
   "function_identifier_replace",
   "function_param_swap",
   "js_call_new_code",
   "js_declare_init_set",
   "js_node_atomize",
   "list_concat",
   "list_insert_generic",
   "list_range",
   "list_skip",
   "list_slice",
   "list_sort_number_mapper",
   "list_swap",
   "prompt_previous",
   "string_is_assert",
   "string_is_assert_message",
   "string_skip",
   "string_slice"
  ],
  "file_exists": [
   "assert_file_exists_not",
   "file_exists",
   "function_delete_if_exists",
   "function_exists"
  ],
  "assert_file_exists_not": [
   "assert_file_exists_not",
   "file_copy",
   "file_write",
   "function_delete",
   "function_new",
   "html_new",
   "js_outside_move"
  ],
  "file_path_new": [
   "assert_file_exists_not",
   "file_copy"
  ],
  "assert_message": [
   "assert_json",
   "assert_message",
   "js_identifiers_to_names",
   "js_node_atomize",
   "list_get",
   "string_includes",
   "string_is_assert_message"
  ],
  "json_to": [
   "assert_json",
   "catch_only_async",
   "file_overwrite_json",
   "function_run_log",
   "function_transform_marker",
   "json_to",
   "js_block_child_graph",
   "js_identifiers_to_names",
   "log_json",
   "marker_call",
   "object_property_delete",
   "object_property_get",
   "string_includes",
   "string_is_assert_json",
   "undefined_not_is_assert_lambda"
  ],
  "assert_json": [
   "assert_json",
   "integer_is_assert",
   "list_get",
   "list_is_assert"
  ],
  "o": [
   "assert_json",
   "error_json",
   "js_unparse",
   "list_map_property_to",
   "string_includes",
   "string_is_assert_json"
  ],
  "assert_not": [
   "assert_not",
   "function_identifier_replace",
   "git_push_schedule_command",
   "marker_call"
  ],
  "catch_ignore_async": [
   "catch_ignore_async"
  ],
  "identity": [
   "catch_log_async",
   "identity"
  ],
  "message_get": [
   "catch_log_async"
  ],
  "catch_only_async": [
   "catch_only_async",
   "git_commit"
  ],
  "message_fragment": [
   "catch_only_async"
  ],
  "json": [
   "catch_only_async",
   "file_overwrite_json",
   "file_read_json",
   "json_from"
  ],
  "includes": [
   "catch_only_async",
   "js_block_child_graph",
   "js_if_blockify_generic",
   "js_let_add",
   "js_types_function_includes",
   "list_includes",
   "marker_down_choices_lambda",
   "string_includes"
  ],
  "clipboard_copy": [
   "clipboard_copy",
   "function_dependencies_code_copy"
  ],
  "text": [
   "clipboard_copy"
  ],
  "clipboard": [
   "clipboard_copy"
  ],
  "write": [
   "clipboard_copy"
  ],
  "exec": [
   "command_line"
  ],
  "promisify": [
   "command_line"
  ],
  "execAsync": [
   "command_line"
  ],
  "command": [
   "command_line",
   "command_line_schtasks",
   "git_push_schedule",
   "git_push_schedule_command",
   "schtasks_query"
  ],
  "stdout": [
   "command_line",
   "command_line_read",
   "command_line_schtasks",
   "git_push_schedule"
  ],
  "encoding": [
   "command_line"
  ],
  "command_line_git_prefix": [
   "command_line_git",
   "command_line_git_prefix",
   "git_push_schedule",
   "git_push_schedule_check",
   "git_push_schedule_command"
  ],
  "command_line_git": [
   "command_line_git",
   "git_acp",
   "git_commit",
   "git_push",
   "git_rebase"
  ],
  "command_git": [
   "command_line_git",
   "git_push"
  ],
  "readline": [
   "command_line_read"
  ],
  "Promise": [
   "command_line_read",
   "list_wait"
  ],
  "resolve": [
   "command_line_read",
   "path_resolve"
  ],
  "rl": [
   "command_line_read"
  ],
  "createInterface": [
   "command_line_read"
  ],
  "input": [
   "command_line_read",
   "integer_to",
   "marker_call_atomize",
   "marker_call_replace",
   "marker_call_replace_generic",
   "string_suffix_change",
   "string_to"
  ],
  "process": [
   "command_line_read",
   "exit"
  ],
  "stdin": [
   "command_line_read"
  ],
  "question": [
   "command_line_read"
  ],
  "answer": [
   "command_line_read"
  ],
  "close": [
   "command_line_read"
  ],
  "command_line_schtasks": [
   "command_line_schtasks",
   "git_push_schedule",
   "schtasks_query"
  ],
  "prefixed": [
   "command_line_schtasks"
  ],
  "file_read_json": [
   "data_all",
   "data_get",
   "data_value",
   "file_read_json",
   "function_alias_add_generic"
  ],
  "data_get": [
   "data_function_current_get",
   "data_get",
   "data_marker_current_get",
   "data_property_get",
   "data_terminal_get",
   "data_transform",
   "data_watch_get",
   "function_alias_add_generic",
   "function_open",
   "function_open_editor",
   "marker_top"
  ],
  "data_function_current_get": [
   "data_function_current_get",
   "function_current_declaration_code",
   "function_identifier_replace",
   "function_open_editor_current",
   "function_params_new",
   "function_param_new",
   "function_param_swap",
   "function_transform_current",
   "function_transform_marker_current",
   "function_transform_marker_empty",
   "function_types",
   "function_type_first",
   "marker_assign_replace",
   "marker_bottom",
   "marker_call",
   "marker_call_atomize",
   "marker_call_replace",
   "marker_call_replace_generic",
   "marker_down_choices",
   "marker_down_generic",
   "marker_expand",
   "marker_functionize",
   "marker_move",
   "marker_new",
   "marker_next",
   "marker_next_delete",
   "marker_remove",
   "marker_top",
   "task_new"
  ],
  "f_name_current": [
   "data_function_current_get",
   "function_current_declaration_code",
   "function_open_editor_current",
   "function_transform_marker_current",
   "marker_call",
   "task_new"
  ],
  "value_initial": [
   "data_get",
   "data_transform"
  ],
  "data_marker_current_get": [
   "data_marker_current_get",
   "function_transform_marker",
   "function_transform_marker_all",
   "marker_functionize"
  ],
  "list_slice_end": [
   "data_prompts",
   "list_slice_end"
  ],
  "data_value": [
   "data_prompts",
   "data_value",
   "prompt_previous"
  ],
  "list_size": [
   "data_prompts",
   "functions_combine",
   "function_transform_marker",
   "function_transform_marker_all",
   "js_call_new",
   "js_call_new_code",
   "js_node_atomize",
   "list_all",
   "list_any",
   "list_empty_is",
   "list_get_end",
   "list_index_last",
   "list_multiple_is",
   "list_size",
   "list_size_1",
   "list_size_1_assert",
   "list_size_1_assert_message",
   "list_skip",
   "list_slice_end",
   "marker_call",
   "marker_functionize"
  ],
  "list_slice": [
   "data_prompts",
   "js_call_new",
   "js_call_new_code",
   "list_range",
   "list_skip",
   "list_slice",
   "list_slice_end",
   "marker_call",
   "marker_functionize"
  ],
  "data_prompts": [
   "data_prompts",
   "prompt_previous"
  ],
  "prompts": [
   "data_prompts",
   "list_slice_end",
   "prompt_previous"
  ],
  "offset": [
   "data_prompts",
   "list_slice_end"
  ],
  "data_property_new": [
   "data_property_new"
  ],
  "file_overwrite_json": [
   "data_save",
   "file_overwrite_json",
   "function_aliases",
   "function_alias_add",
   "function_alias_change",
   "function_alias_delete",
   "function_alias_generic",
   "function_alias_replace"
  ],
  "data_terminal_get": [
   "data_terminal_get",
   "file_open",
   "function_transform"
  ],
  "w": [
   "data_terminal_get",
   "data_watch_get"
  ],
  "function_exists": [
   "data_terminal_set",
   "data_watch_set",
   "function_current_set",
   "function_delete_if_exists",
   "function_exists",
   "js_node_atomize"
  ],
  "marker_first": [
   "data_terminal_set",
   "data_watch_set",
   "function_current_set",
   "marker_first",
   "marker_top"
  ],
  "marker_current_set": [
   "data_terminal_set",
   "data_watch_set",
   "function_current_set",
   "marker_current_set",
   "marker_new"
  ],
  "data_terminal_set": [
   "data_terminal_set"
  ],
  "lambda$previous": [
   "data_transform",
   "data_set",
   "git_push"
  ],
  "value_previous": [
   "data_transform"
  ],
  "data_watch_get": [
   "data_watch_get"
  ],
  "data_watch_set": [
   "data_watch_set"
  ],
  "todo": [
   "data_watch_set_task_add_return",
   "function_params_consolidate_task_simple",
   "function_param_swap_task_simple",
   "function_run_log_task_duplicate_lines_to_each",
   "js_await_add_task_simple",
   "js_calls_to_each_task_simple",
   "js_dollar_task_each_code_own_fn",
   "js_dollar_task_if_else_to_generic",
   "js_import_inside_task_simple",
   "js_let_add_task_simple",
   "marker_expand",
   "task_new",
   "todo"
  ],
  "data_watch_set_task_add_return": [
   "data_watch_set_task_add_return"
  ],
  "lambda$item": [
   "each",
   "each_async",
   "equal_by",
   "equal_by_async",
   "js_visit_each",
   "list_all",
   "list_any",
   "list_filter",
   "list_map",
   "list_map_unordered_async",
   "list_sort_number_mapper",
   "list_to_dictionary"
  ],
  "each_index": [
   "each_index",
   "each_multiple",
   "marker_expand"
  ],
  "index": [
   "each_index",
   "each_multiple",
   "integer_is_assert",
   "js_call_insert",
   "js_identifier_defineds",
   "js_marker_insert",
   "js_node_atomize",
   "js_stack_list_block_is",
   "lists_get",
   "list_first",
   "list_get",
   "list_index_is",
   "list_index_of",
   "list_index_of_delta",
   "list_insert",
   "list_insert_generic",
   "list_map_index",
   "list_next_index",
   "list_remove",
   "list_remove_at",
   "list_replace",
   "list_second",
   "list_splice",
   "marker_above",
   "marker_bottom",
   "marker_call",
   "marker_delete_above",
   "marker_down_generic",
   "marker_expand",
   "marker_first",
   "marker_first_index",
   "marker_functionize",
   "marker_index",
   "marker_move",
   "marker_new",
   "marker_next_delete",
   "marker_next_get",
   "marker_next_index",
   "marker_previous_index",
   "js_dollar_g",
   "marker_leave"
  ],
  "lists_get": [
   "each_multiple",
   "lists_get",
   "marker_expand"
  ],
  "list_first": [
   "each_multiple",
   "function_name_to_acronym",
   "function_transform_marker",
   "function_transform_marker_all",
   "function_type_first",
   "js_call_new",
   "js_call_new_code",
   "js_dollar",
   "js_marker_named",
   "js_marker_name_get",
   "js_parse_statement",
   "js_parse_statement_module",
   "list_first",
   "list_first_second",
   "list_single",
   "marker_call",
   "marker_expand",
   "marker_functionize",
   "list_first_remaining",
   "list_first_second_generic"
  ],
  "each_multiple": [
   "each_multiple",
   "each_pair"
  ],
  "lists": [
   "each_multiple",
   "each_pair",
   "lists_get"
  ],
  "first": [
   "each_multiple",
   "function_alias_add",
   "js_dollar",
   "js_dollar_g",
   "list_first",
   "list_single",
   "list_first_second_generic"
  ],
  "items": [
   "each_multiple",
   "each_pair",
   "lists_get",
   "list_adder_unique",
   "list_adder_unique_async",
   "list_add_multiple",
   "marker_functionize"
  ],
  "object_properties": [
   "each_object",
   "functions_search_open",
   "function_aliases_search",
   "js_visit_children_get",
   "object_invert",
   "object_merge",
   "object_properties",
   "object_properties_delete",
   "tasks_run"
  ],
  "each_object": [
   "each_object",
   "object_invert"
  ],
  "object": [
   "each_object",
   "file_overwrite_json",
   "json_format_to",
   "json_to",
   "object_invert",
   "object_property_delete",
   "object_property_exists",
   "object_property_exists_assert",
   "object_property_get",
   "object_property_initialize",
   "object_property_set",
   "undefined_not_is_assert_lambda"
  ],
  "each_pair": [
   "each_pair",
   "marker_expand"
  ],
  "list_a": [
   "each_pair"
  ],
  "list_b": [
   "each_pair"
  ],
  "range": [
   "each_range",
   "marker_functionize",
   "range"
  ],
  "each_range": [
   "each_range",
   "js_identifier_defineds",
   "marker_functionize"
  ],
  "count": [
   "each_range",
   "range"
  ],
  "list_copy_reverse": [
   "each_reverse",
   "function_run_line",
   "function_run_line_git",
   "list_copy_reverse",
   "list_unique_reverse"
  ],
  "each_reverse": [
   "each_reverse",
   "marker_expand",
   "js_dollar_g"
  ],
  "reversed": [
   "each_reverse",
   "list_unique_reverse"
  ],
  "equal": [
   "equal",
   "equal_by",
   "equal_not",
   "js_bang_to_not",
   "js_dollar_ie"
  ],
  "left": [
   "equal",
   "equal_by",
   "equal_not",
   "function_name_combine",
   "js_block_child_graph",
   "js_code_assign",
   "js_code_let_assign",
   "js_code_or",
   "js_left_right_set",
   "js_let_add"
  ],
  "right": [
   "equal",
   "equal_by",
   "equal_not",
   "function_name_combine",
   "js_block_child_graph",
   "js_code_assign",
   "js_code_let_assign",
   "js_code_or",
   "js_left_right_set",
   "js_let_add",
   "log_json",
   "log_unparse_try"
  ],
  "eq": [
   "equal",
   "equal_by",
   "equal_by_async",
   "js_if_else_if_combine"
  ],
  "equal_by": [
   "equal_by",
   "js_node_atomize"
  ],
  "equal_by_async": [
   "equal_by_async",
   "js_if_else_if_combine"
  ],
  "equal_not": [
   "equal_not",
   "js_block_child_graph",
   "js_block_child_graph_unparse"
  ],
  "ne": [
   "equal_not",
   "js_dollar",
   "list_empty_not_is",
   "list_empty_not_is_assert",
   "marker_top",
   "string_empty_not_is"
  ],
  "Error": [
   "error",
   "function_import"
  ],
  "error_json": [
   "error_json",
   "js_unparse"
  ],
  "exit": [
   "exit",
   "js_block_child_graph",
   "js_block_child_graph_unparse",
   "js_if_blockify"
  ],
  "file_copy": [
   "file_copy",
   "function_copy"
  ],
  "file_path_old": [
   "file_copy"
  ],
  "promises": [
   "file_copy",
   "file_delete",
   "file_exists",
   "file_overwrite",
   "file_read"
  ],
  "copyFile": [
   "file_copy"
  ],
  "file_delete": [
   "file_delete",
   "function_delete"
  ],
  "unlink": [
   "file_delete"
  ],
  "throws_not_async": [
   "file_exists",
   "schtasks_query",
   "throws_not_async"
  ],
  "promise_is": [
   "file_exists",
   "js_visit",
   "promise_is",
   "promise_not_is"
  ],
  "string_is": [
   "file_exists",
   "js_marker_named",
   "js_visit_children_get",
   "string_is",
   "string_is_assert",
   "string_is_assert_message"
  ],
  "access": [
   "file_exists"
  ],
  "constants": [
   "file_exists"
  ],
  "success": [
   "file_exists",
   "schtasks_query",
   "throws_not_async"
  ],
  "F_OK": [
   "file_exists"
  ],
  "file_name_html": [
   "file_name_html",
   "html_name_to_path",
   "html_new"
  ],
  "function_current_set": [
   "file_open",
   "function_copy",
   "function_current_set",
   "function_current_set_task_new",
   "function_open",
   "function_open_editor",
   "task_new"
  ],
  "function_path_declaration_unparse": [
   "file_open",
   "function_path_declaration_unparse"
  ],
  "function_parse_declaration_js_unparse": [
   "file_open",
   "function_current_declaration_code",
   "function_current_set",
   "function_parse_declaration_js_unparse",
   "function_path_declaration_unparse",
   "function_transform"
  ],
  "file_open_editor": [
   "file_open",
   "file_open_editor",
   "function_open_editor"
  ],
  "file_open": [
   "file_open",
   "function_copy",
   "function_delete",
   "function_new",
   "function_open",
   "function_open_editor",
   "html_new",
   "html_update"
  ],
  "terminal": [
   "file_open"
  ],
  "ext": [
   "file_open",
   "function_name_extension",
   "html_update"
  ],
  "ew": [
   "file_open",
   "string_ends_with"
  ],
  "filePath": [
   "file_open_editor"
  ],
  "contents": [
   "file_overwrite",
   "file_write",
   "function_new_declaration",
   "html_overwrite"
  ],
  "writeFile": [
   "file_overwrite"
  ],
  "readFile": [
   "file_read"
  ],
  "json_from": [
   "file_read_json",
   "json_from"
  ],
  "file_write": [
   "file_write",
   "function_delete",
   "function_new",
   "function_new_declaration",
   "html_new"
  ],
  "folder_current": [
   "folder_current",
   "folder_current_join",
   "git_push_schedule",
   "git_push_schedule_check",
   "git_push_schedule_command"
  ],
  "current": [
   "folder_current",
   "folder_current_join",
   "js_unparse"
  ],
  "folder_current_join": [
   "folder_current_join",
   "function_imports_add"
  ],
  "value_string": [
   "folder_current_join",
   "function_imports_add",
   "js_code_string"
  ],
  "folder_public": [
   "folder_public",
   "folder_public_combine",
   "functions_path",
   "html_new",
   "server"
  ],
  "folder_public_combine": [
   "folder_public_combine",
   "functions_path",
   "html_name_to_path",
   "html_new"
  ],
  "second": [
   "folder_public_combine",
   "functions_path",
   "function_alias_add",
   "function_name_to_path",
   "js_dollar",
   "js_dollar_r",
   "list_second",
   "list_first_second_generic"
  ],
  "list_to": [
   "functions_combine",
   "list_to"
  ],
  "list_size_1_assert": [
   "functions_combine",
   "function_transform_marker",
   "list_single",
   "list_size_1_assert",
   "js_dollar_g"
  ],
  "list_size_1": [
   "functions_combine",
   "function_acronym_to_name",
   "function_alias_add_generic",
   "js_dollar_s",
   "js_imports",
   "list_single",
   "list_size_1",
   "list_size_1_assert",
   "list_size_1_assert_message",
   "marker_assign_replace",
   "marker_call_atomize",
   "marker_call_replace",
   "marker_next_delete",
   "js_imports_declarations"
  ],
  "js_auto": [
   "functions_combine",
   "function_auto",
   "js_auto",
   "marker_above"
  ],
  "js_visit_match": [
   "functions_combine",
   "js_return_atomize",
   "js_visit_match",
   "marker_call_atomize"
  ],
  "functions_combine_name": [
   "functions_combine",
   "functions_combine_name",
   "functions_combine_test"
  ],
  "js_function_last_asyncify": [
   "functions_combine",
   "js_call_fill",
   "js_function_last_asyncify"
  ],
  "list_map_unordered_async": [
   "functions_combine",
   "functions_combine_name",
   "function_dependencies_code",
   "function_transform_marker_empty",
   "js_block_child_graph_unparse",
   "js_call_new",
   "js_call_new_code",
   "list_map_unordered_async",
   "marker_down_choices",
   "marker_enter",
   "data_files_update"
  ],
  "js_declaration_single_block_blody": [
   "functions_combine",
   "function_wrap",
   "js_declaration_single_block_blody",
   "js_return_name",
   "marker_call",
   "marker_down_choices_lambda",
   "marker_top",
   "task_new"
  ],
  "js_parse_statement": [
   "functions_combine",
   "function_imports_missing_add",
   "function_wrap",
   "js_atomize",
   "js_atomize_function",
   "js_call_insert",
   "js_call_new",
   "js_declare",
   "js_dollar",
   "js_dollar_i",
   "js_dollar_ie",
   "js_dollar_r",
   "js_dollar_rf",
   "js_dollar_rt",
   "js_dollar_s",
   "js_marker_insert",
   "js_parse_expression",
   "js_parse_statement",
   "js_return_empty",
   "js_statement_return",
   "marker_above",
   "marker_assign_replace",
   "marker_call",
   "marker_call_atomize",
   "marker_call_replace",
   "marker_delete_above",
   "marker_functionize",
   "marker_next_delete",
   "marker_top",
   "function_imports_fix"
  ],
  "function_parse_declaration": [
   "functions_combine",
   "function_dependencies_code",
   "function_imports_missing",
   "function_parse_declaration",
   "function_parse_declaration_js_unparse",
   "function_wrap",
   "js_call_new",
   "js_call_new_code",
   "js_node_atomize",
   "marker_call",
   "marker_expand"
  ],
  "js_code_call_args_await_maybe": [
   "functions_combine",
   "function_wrap",
   "js_call_insert",
   "js_call_new",
   "js_call_new_code",
   "js_code_call_args_await_maybe",
   "js_marker_insert",
   "marker_call",
   "marker_functionize"
  ],
  "function_name_combine_multiple": [
   "functions_combine",
   "functions_combine_name",
   "function_name_combine",
   "function_name_combine_multiple",
   "task_new"
  ],
  "function_new_transform": [
   "functions_combine",
   "function_new_js",
   "function_new_transform",
   "function_wrap"
  ],
  "string_split_comma": [
   "functions_combine",
   "functions_combine_name",
   "string_split_comma"
  ],
  "string_split": [
   "functions_combine",
   "functions_search",
   "function_name_to_acronym",
   "function_name_to_parts",
   "function_params_new",
   "function_param_swap",
   "js_call_new",
   "js_call_new_code",
   "js_dollar",
   "marker_call",
   "search_generic",
   "string_split",
   "string_split_comma"
  ],
  "js_parse_expression": [
   "functions_combine",
   "function_identifier_replace",
   "function_new",
   "function_params_consolidate",
   "function_param_new",
   "function_wrap",
   "js_atomize",
   "js_atomize_function",
   "js_bang_to_not",
   "js_call_new_expression",
   "js_code_string",
   "js_declaration_param_add",
   "js_declare_assign_null",
   "js_dollar",
   "js_dollar_f",
   "js_dollar_g",
   "js_dollar_ie",
   "js_dollar_rf",
   "js_dollar_rt",
   "js_dollar_s",
   "js_function_id_add",
   "js_if_else_if_combine",
   "js_node_atomize",
   "js_null",
   "js_parse_expression",
   "js_return_code_replace",
   "marker_assign_replace",
   "marker_call_atomize",
   "marker_call_replace",
   "marker_functionize",
   "marker_next_delete"
  ],
  "functions_combine": [
   "functions_combine",
   "functions_combine_test"
  ],
  "f_names_comma": [
   "functions_combine",
   "functions_combine_name",
   "functions_combine_test"
  ],
  "arguments": [
   "functions_combine",
   "js_marker_name_get",
   "marker_call_replace_generic",
   "marker_expand"
  ],
  "combined": [
   "functions_combine",
   "functions_combine_name",
   "functions_combine_test",
   "function_copy_suffix_add",
   "function_name_combine",
   "function_name_combine_multiple",
   "function_new_js"
  ],
  "body_block": [
   "functions_combine",
   "function_wrap",
   "js_declaration_single_block_blody",
   "js_declaration_to_block_body",
   "js_return_name",
   "marker_down_choices_lambda",
   "marker_expand",
   "marker_functionize",
   "task_new"
  ],
  "list_map_property": [
   "functions_combine_name",
   "function_dependencies_code",
   "function_transform_marker_empty",
   "js_identifiers_to_names",
   "js_identifier_defineds",
   "js_imports",
   "list_map_name",
   "list_map_property",
   "marker_bottom",
   "marker_call",
   "marker_down_choices",
   "marker_down_choices_lambda",
   "marker_down_generic",
   "marker_functionize",
   "js_imports_declarations"
  ],
  "split": [
   "functions_combine_name",
   "function_run_line_parse",
   "js_call_new_code",
   "js_dollar",
   "string_split"
  ],
  "results": [
   "functions_combine_name"
  ],
  "list_join_comma": [
   "functions_combine_test",
   "list_join_comma"
  ],
  "function_delete_if_exists": [
   "functions_combine_test",
   "function_delete_if_exists"
  ],
  "list_map_name": [
   "functions_combine_test",
   "list_map_name"
  ],
  "functions_combine_test": [
   "functions_combine_test"
  ],
  "names": [
   "functions_combine_test",
   "function_aliases_search",
   "js_declaration_params_names_node",
   "js_identifiers_names",
   "js_identifiers_to_names",
   "js_identifier_defineds",
   "list_join_comma",
   "list_map_squash",
   "marker_top"
  ],
  "list_wait": [
   "functions_format",
   "function_dependencies_code",
   "list_map_unordered_async",
   "list_wait"
  ],
  "function_format": [
   "functions_format",
   "function_format"
  ],
  "functions_format": [
   "functions_format"
  ],
  "mapped": [
   "functions_format",
   "function_dependencies_code",
   "js_block_child_graph_unparse",
   "list_map",
   "list_map_property",
   "list_map_property_to",
   "list_map_squash",
   "list_map_unordered_async",
   "js_imports_declarations",
   "js_imports_unused"
  ],
  "functions_names_includes": [
   "functions_names_includes",
   "js_call_fill"
  ],
  "valid": [
   "functions_names_includes",
   "js_call_fill"
  ],
  "search_generic": [
   "functions_search",
   "function_aliases_search",
   "search_generic"
  ],
  "list_all": [
   "functions_search",
   "js_identifiers_to_names",
   "js_identifier_unique",
   "js_stack_filtered_multiple",
   "list_all",
   "marker_expand",
   "search_generic"
  ],
  "string_includes": [
   "functions_search",
   "function_name_to_path",
   "search_generic",
   "string_includes"
  ],
  "list_filter": [
   "functions_search",
   "function_identifier_replace",
   "function_transform_marker_all",
   "js_atomize",
   "js_atomize_function",
   "js_identifiers_named",
   "js_markers",
   "js_marker_named_ast",
   "js_stack_declaration_asyncify",
   "js_stack_filtered",
   "js_stack_filtered_multiple",
   "js_stack_last",
   "js_stack_last_multiple",
   "list_all",
   "list_any",
   "list_filter",
   "list_filter_property",
   "list_find",
   "marker_call",
   "marker_enter",
   "marker_functionize",
   "prompt_previous",
   "search_generic"
  ],
  "function_name_to_path_unalias": [
   "functions_search",
   "function_copy",
   "function_exists",
   "function_format",
   "function_name_to_path_unalias",
   "function_open",
   "function_open_editor",
   "function_parse",
   "function_read"
  ],
  "functions_search": [
   "functions_search",
   "functions_search_open",
   "tasks_run"
  ],
  "search": [
   "functions_search",
   "functions_search_open",
   "function_aliases_search",
   "js_visit_match",
   "search_generic",
   "tasks_run"
  ],
  "function_open": [
   "functions_search_open",
   "function_delete",
   "function_new",
   "function_open"
  ],
  "list_single": [
   "functions_search_open",
   "function_acronym_to_name",
   "function_alias_add_generic",
   "js_declaration_single",
   "js_declare_init_set",
   "js_imports",
   "js_marker_named_ast",
   "js_statement_call_get",
   "js_visit_match",
   "list_find",
   "list_single",
   "marker_assign_replace",
   "marker_call_atomize",
   "marker_call_replace",
   "marker_call_replace_generic",
   "marker_functionize",
   "marker_next_delete",
   "js_imports_declarations"
  ],
  "functions_search_open": [
   "functions_search_open"
  ],
  "properties": [
   "functions_search_open",
   "function_params_consolidate",
   "js_declaration_params_names_node",
   "js_identifier_defineds",
   "list_map_squash",
   "object_properties",
   "tasks_run"
  ],
  "function_names_to_acronyms": [
   "function_acronym_to_name",
   "function_acronym_to_names",
   "function_alias_add_generic",
   "function_names_to_acronyms"
  ],
  "function_acronym_to_name": [
   "function_acronym_to_name",
   "function_alias_add_generic",
   "function_name_unalias"
  ],
  "alias": [
   "function_acronym_to_name",
   "function_alias_add",
   "function_alias_add_generic",
   "function_alias_generic",
   "function_new_aliased"
  ],
  "expanded": [
   "function_acronym_to_name",
   "function_name_unalias"
  ],
  "expandeds": [
   "function_acronym_to_name",
   "function_name_unalias"
  ],
  "acronyms": [
   "function_acronym_to_name",
   "function_acronym_to_names",
   "function_names_to_acronyms"
  ],
  "exists2": [
   "function_acronym_to_name"
  ],
  "s1": [
   "function_acronym_to_name",
   "js_dollar_s",
   "list_size_1"
  ],
  "function_acronym_to_names": [
   "function_acronym_to_names"
  ],
  "acronym": [
   "function_acronym_to_names",
   "function_name_to_acronym"
  ],
  "function_alias_generic": [
   "function_aliases",
   "function_alias_add",
   "function_alias_change",
   "function_alias_delete",
   "function_alias_generic",
   "function_alias_replace"
  ],
  "function_alias_add_generic": [
   "function_aliases",
   "function_alias_add",
   "function_alias_add_generic",
   "function_alias_change",
   "function_alias_delete",
   "function_alias_generic",
   "function_alias_replace",
   "function_name_unalias"
  ],
  "function_aliases": [
   "function_aliases",
   "function_aliases_inverted",
   "prompt_previous"
  ],
  "aliases": [
   "function_aliases",
   "function_aliases_inverted",
   "function_alias_add",
   "function_alias_add_generic",
   "function_alias_change",
   "function_alias_delete",
   "function_alias_replace"
  ],
  "object_invert": [
   "function_aliases_inverted",
   "function_names_to_acronyms",
   "object_invert",
   "prompt_previous"
  ],
  "function_aliases_inverted": [
   "function_aliases_inverted",
   "function_aliases_search",
   "prompt_previous"
  ],
  "inverted": [
   "function_aliases_inverted",
   "object_invert",
   "prompt_previous"
  ],
  "function_aliases_search": [
   "function_aliases_search"
  ],
  "names_to_aliases": [
   "function_aliases_search"
  ],
  "n": [
   "function_aliases_search",
   "js_declare_assign",
   "js_node_is",
   "js_node_type",
   "js_null",
   "js_stack_filtered",
   "js_visit_children_get",
   "js_visit_filter",
   "marker_enter",
   "marker_next_get",
   "not",
   "search_generic"
  ],
  "list_sort_string_size": [
   "function_alias_add",
   "list_sort_string_size"
  ],
  "list_sort_number_mapper": [
   "function_alias_add",
   "list_sort_number_mapper",
   "list_sort_string_size"
  ],
  "list_sort_string": [
   "function_alias_add",
   "function_types",
   "list_sort_string"
  ],
  "function_alias_add": [
   "function_alias_add",
   "function_new_aliased"
  ],
  "exists": [
   "function_alias_add",
   "function_alias_add_generic",
   "function_alias_change",
   "function_alias_delete",
   "function_alias_replace",
   "function_current_set",
   "function_delete_if_exists",
   "function_exists",
   "function_name_unalias",
   "git_push_schedule_check",
   "git_push_schedule_command",
   "js_node_atomize",
   "list_add_if_not_includes",
   "object_property_initialize"
  ],
  "function_alias_change": [
   "function_alias_change"
  ],
  "alias_old": [
   "function_alias_change",
   "function_alias_delete",
   "function_alias_replace"
  ],
  "alias_new": [
   "function_alias_change"
  ],
  "function_alias_delete": [
   "function_alias_delete"
  ],
  "function_alias_replace": [
   "function_alias_replace"
  ],
  "js_let_add": [
   "function_auto",
   "js_auto",
   "js_let_add"
  ],
  "js_atomize_function": [
   "function_auto",
   "js_atomize_function",
   "js_auto"
  ],
  "js_function_id_add": [
   "function_auto",
   "js_auto",
   "js_function_id_add"
  ],
  "js_arrow_to_function": [
   "function_auto",
   "js_arrow_to_function",
   "js_auto"
  ],
  "js_declare_assign_null": [
   "function_auto",
   "js_auto",
   "js_declare_assign_null"
  ],
  "js_call_fill": [
   "function_auto",
   "js_auto",
   "js_call_fill"
  ],
  "js_dollar": [
   "function_auto",
   "js_auto",
   "js_dollar"
  ],
  "js_atomize": [
   "function_auto",
   "js_atomize",
   "js_auto",
   "js_block_child_graph"
  ],
  "js_outside_move": [
   "function_auto",
   "js_auto",
   "js_outside_move",
   "marker_functionize"
  ],
  "js_imports_missing_add": [
   "function_auto",
   "function_new_declaration",
   "function_wrap",
   "js_imports_missing_add",
   "marker_call",
   "marker_call_atomize",
   "marker_call_replace",
   "marker_call_replace_generic",
   "marker_top",
   "js_imports_fix"
  ],
  "function_transform": [
   "function_auto",
   "function_copy",
   "function_identifier_replace",
   "function_new_js",
   "function_new_transform",
   "function_params_consolidate",
   "function_params_new",
   "function_param_new",
   "function_param_swap",
   "function_transform",
   "function_transform_command",
   "function_transform_current",
   "function_transform_marker",
   "function_transform_marker_all",
   "function_wrap",
   "marker_functionize",
   "marker_move",
   "marker_top",
   "task_new"
  ],
  "js_arrow_blockify": [
   "function_auto",
   "js_arrow_blockify",
   "js_auto"
  ],
  "js_identifier_replace": [
   "function_copy",
   "js_dollar",
   "js_identifier_replace",
   "marker_expand"
  ],
  "function_copy": [
   "function_copy",
   "function_copy_suffix_add",
   "function_rename"
  ],
  "f_name_old": [
   "function_copy",
   "function_copy_suffix_add"
  ],
  "f_path_old": [
   "function_copy"
  ],
  "unaliased_old": [
   "function_copy"
  ],
  "f_path_new": [
   "function_copy"
  ],
  "unaliased_new": [
   "function_copy"
  ],
  "function_copy_suffix_add": [
   "function_copy_suffix_add"
  ],
  "function_current_declaration_code": [
   "function_current_declaration_code"
  ],
  "marker_top": [
   "function_current_set",
   "marker_remove_marker_top",
   "marker_top"
  ],
  "task_new": [
   "function_current_set_task_new",
   "task_new",
   "task_new_simple"
  ],
  "function_current_set_task_new": [
   "function_current_set_task_new",
   "function_current_set_task_new_simple"
  ],
  "task_name": [
   "function_current_set_task_new",
   "task_new"
  ],
  "function_current_set_task_new_simple": [
   "function_current_set_task_new_simple"
  ],
  "js_code_declaration": [
   "function_delete",
   "function_new",
   "js_call_new",
   "js_call_new_code",
   "js_code_declaration",
   "js_parse_statement",
   "marker_call",
   "marker_functionize"
  ],
  "js_code_call": [
   "function_delete",
   "function_new",
   "js_bang_to_not",
   "js_code_call",
   "js_code_call_statement",
   "js_code_declaration",
   "marker_top"
  ],
  "function_delete": [
   "function_delete",
   "function_delete_if_exists",
   "function_rename"
  ],
  "list_adder_unique_async": [
   "function_dependencies",
   "list_adder_unique_async"
  ],
  "visit_unique_async": [
   "function_dependencies",
   "visit_unique_async"
  ],
  "function_imports": [
   "function_dependencies",
   "function_imports"
  ],
  "list_adder_async": [
   "function_dependencies",
   "function_transform_marker",
   "function_transform_marker_all",
   "list_adder_async",
   "list_adder_unique_async",
   "marker_assign_replace",
   "marker_call",
   "marker_call_atomize",
   "marker_call_replace",
   "marker_call_replace_generic",
   "marker_expand",
   "marker_next",
   "marker_next_delete"
  ],
  "function_dependencies": [
   "function_dependencies",
   "function_dependencies_code"
  ],
  "la": [
   "function_dependencies",
   "function_transform_marker",
   "function_type_first",
   "js_block_child_graph",
   "js_declaration_single",
   "js_identifiers",
   "js_identifiers_names",
   "js_identifier_defineds",
   "js_node_types",
   "js_type",
   "js_visitors",
   "js_visit_each",
   "js_visit_each_async",
   "js_visit_match",
   "js_visit_type_each_async",
   "list_difference",
   "list_intersect",
   "list_squash",
   "marker_assign_replace",
   "marker_call",
   "marker_call_replace_generic",
   "marker_down_choices_lambda",
   "marker_functionize",
   "marker_next",
   "marker_next_delete",
   "js_imports_declarations"
  ],
  "node": [
   "function_dependencies",
   "function_type_first",
   "js_arrow_to_function",
   "js_atomize_function",
   "js_bang_to_not",
   "js_block_child_graph",
   "js_call_fill",
   "js_declaration_params_names_node",
   "js_declaration_single",
   "js_declare_assign",
   "js_dollar",
   "js_dollar_f",
   "js_dollar_g",
   "js_function_id_add",
   "js_identifiers",
   "js_identifiers_names",
   "js_identifier_defineds",
   "js_identifier_is",
   "js_identifier_replace",
   "js_if_blockify_generic",
   "js_if_else_if_combine",
   "js_let_add",
   "js_marker_name_get",
   "js_node_atomize",
   "js_node_types",
   "js_node_type_is",
   "js_node_type_is_assert",
   "js_node_type_is_if",
   "js_node_type_is_if_async",
   "js_node_type_not_is",
   "js_return_atomize",
   "js_return_on",
   "js_return_on_async",
   "js_statement_call_get",
   "js_unparse",
   "js_visit_match",
   "js_visit_nodes",
   "js_visit_types",
   "log_unparse",
   "marker_down_choices_lambda",
   "marker_functionize",
   "visit",
   "visit_async",
   "visit_filter",
   "visit_filter_async",
   "visit_filter_recursive",
   "visit_filter_recursive_async",
   "visit_unique_async",
   "js_imports_declarations",
   "js_identifiers_named_count",
   "js_await_add"
  ],
  "function_dependencies_code": [
   "function_dependencies_code",
   "function_dependencies_code_copy"
  ],
  "ds": [
   "function_dependencies_code"
  ],
  "waited": [
   "function_dependencies_code",
   "js_block_child_graph_unparse",
   "list_map_unordered_async"
  ],
  "mapped2": [
   "function_dependencies_code"
  ],
  "waited2": [
   "function_dependencies_code"
  ],
  "function_dependencies_code_copy": [
   "function_dependencies_code_copy"
  ],
  "object_merge": [
   "function_exists",
   "function_imports_missing",
   "function_parse",
   "function_parse_declaration",
   "function_transform_marker",
   "function_transform_marker_all",
   "function_transform_marker_arg",
   "marker_call_replace_generic",
   "marker_functionize",
   "marker_index",
   "marker_next_get",
   "marker_next_index",
   "marker_previous_index",
   "object_copy",
   "object_merge",
   "object_replace",
   "js_imports_unused"
  ],
  "u": [
   "function_exists"
  ],
  "to": [
   "function_exists",
   "function_parse_declaration",
   "js_dollar_r",
   "marker_call_replace_generic",
   "object_merge",
   "object_property_from",
   "object_replace",
   "js_imports_unused"
  ],
  "r": [
   "function_format",
   "js_if_blockify_generic",
   "list_remove_multiple",
   "marker_functionize",
   "range"
  ],
  "formatted": [
   "function_format",
   "js_format"
  ],
  "object_replace": [
   "function_identifier_replace",
   "js_arrow_blockify",
   "js_atomize",
   "js_atomize_function",
   "js_bang_to_not",
   "js_call_fill",
   "js_dollar",
   "js_dollar_a",
   "js_dollar_f",
   "js_dollar_g",
   "js_dollar_i",
   "js_dollar_ie",
   "js_dollar_r",
   "js_dollar_rf",
   "js_dollar_rt",
   "js_dollar_s",
   "js_if_blockify",
   "js_if_blockify_generic",
   "js_let_add",
   "js_node_atomize",
   "js_return_code_replace",
   "marker_call_atomize",
   "marker_call_replace",
   "marker_next_delete",
   "object_replace"
  ],
  "js_identifiers_named": [
   "function_identifier_replace",
   "js_dollar",
   "js_dollar_a",
   "js_dollar_s",
   "js_identifiers_named"
  ],
  "js_identifiers": [
   "function_identifier_replace",
   "js_atomize",
   "js_atomize_function",
   "js_identifiers",
   "js_identifiers_named",
   "marker_call_atomize"
  ],
  "function_identifier_replace": [
   "function_identifier_replace",
   "function_identifier_replace_ending_remove",
   "function_identifier_replace_suffix_add"
  ],
  "identifier_name": [
   "function_identifier_replace",
   "function_identifier_replace_ending_remove",
   "function_identifier_replace_suffix_add",
   "js_identifiers_named"
  ],
  "replacement": [
   "function_identifier_replace",
   "js_dollar_a",
   "marker_call_replace"
  ],
  "identifiers_named": [
   "function_identifier_replace",
   "js_identifiers_named"
  ],
  "from": [
   "function_identifier_replace",
   "function_imports_add",
   "js_code_import_single",
   "js_dollar_i",
   "js_dollar_r",
   "js_return_code_replace",
   "js_return_empty",
   "list_to",
   "object_copy",
   "object_merge",
   "object_property_from",
   "object_replace"
  ],
  "i": [
   "function_identifier_replace",
   "integer_to",
   "js_identifiers_named",
   "js_identifier_defineds",
   "marker_above",
   "marker_down",
   "marker_index",
   "range",
   "counter",
   "js_imports_unused",
   "marker_up"
  ],
  "function_identifier_replace_ending_remove": [
   "function_identifier_replace_ending_remove"
  ],
  "ending_to_remove": [
   "function_identifier_replace_ending_remove"
  ],
  "removed": [
   "function_identifier_replace_ending_remove",
   "visit_filter_recursive",
   "visit_filter_recursive_async"
  ],
  "function_identifier_replace_suffix_add": [
   "function_identifier_replace_suffix_add"
  ],
  "suffix_to_add": [
   "function_identifier_replace_suffix_add"
  ],
  "fileURLToPath": [
   "function_import",
   "server"
  ],
  "function_name_to_base": [
   "function_import",
   "function_imports_add",
   "function_imports_missing_add",
   "function_name_to_base",
   "function_name_to_path",
   "function_imports_fix"
  ],
  "function_import": [
   "function_import",
   "function_run",
   "function_transform_command"
  ],
  "__filename": [
   "function_import",
   "server"
  ],
  "import": [
   "function_import",
   "server"
  ],
  "meta": [
   "function_import",
   "server"
  ],
  "url": [
   "function_import",
   "server"
  ],
  "__dirname": [
   "function_import",
   "server"
  ],
  "dirname": [
   "function_import",
   "server"
  ],
  "imported": [
   "function_import",
   "js_imports_declarations"
  ],
  "imported_fn": [
   "function_import"
  ],
  "js_imports": [
   "function_imports",
   "function_imports_missing",
   "js_imports",
   "js_imports_missing",
   "js_imports_unused"
  ],
  "function_parse": [
   "function_imports",
   "function_imports_missing",
   "function_parse",
   "function_parse_declaration",
   "function_transform",
   "function_transform_result",
   "function_types",
   "function_type_first",
   "js_atomize",
   "js_atomize_function",
   "js_node_atomize",
   "marker_expand",
   "marker_top"
  ],
  "imports": [
   "function_imports",
   "function_imports_add",
   "js_imports_all",
   "js_imports_missing",
   "js_imports_unused",
   "js_imports_declarations",
   "js_imports"
  ],
  "js_code_import_single": [
   "function_imports_add",
   "js_code_import_single"
  ],
  "js_code_string": [
   "function_imports_add",
   "js_code_string",
   "js_dollar",
   "js_dollar_g",
   "js_marker_insert",
   "marker_assign_replace_string",
   "task_new"
  ],
  "list_add_first": [
   "function_imports_add",
   "function_imports_missing_add",
   "list_add_first",
   "marker_enter",
   "marker_top",
   "function_imports_fix"
  ],
  "js_parse_statement_module": [
   "function_imports_add",
   "function_new",
   "js_call_new",
   "js_call_new_code",
   "js_parse_statement_module",
   "marker_call",
   "marker_functionize"
  ],
  "function_imports_add": [
   "function_imports_add",
   "function_imports_missing_add",
   "js_imports_missing_add",
   "marker_top",
   "function_imports_fix"
  ],
  "body": [
   "function_imports_add",
   "html_overwrite",
   "html_update",
   "js_block_child_graph",
   "js_declaration_to_block_body",
   "js_if_blockify_generic",
   "js_outside_move",
   "js_parse_statement",
   "js_parse_statement_module",
   "list_add_first",
   "marker_enter",
   "marker_functionize",
   "marker_top",
   "js_imports_unused_remove",
   "js_imports_fix"
  ],
  "import_": [
   "function_imports_add",
   "js_code_import_single"
  ],
  "statement": [
   "function_imports_add",
   "js_parse_expression",
   "js_parse_statement",
   "js_parse_statement_module",
   "list_add_first",
   "marker_above"
  ],
  "js_imports_missing": [
   "function_imports_missing",
   "js_imports_missing",
   "js_imports_missing_add",
   "marker_top"
  ],
  "js_declaration_single": [
   "function_imports_missing",
   "function_params_consolidate",
   "function_params_new",
   "function_param_new",
   "function_param_swap",
   "function_parse_declaration",
   "function_wrap",
   "js_declaration_single",
   "js_declaration_single_block_blody",
   "js_declaration_single_params_add",
   "js_imports_missing",
   "js_return_name",
   "marker_down_choices_lambda",
   "marker_top",
   "data_file_update_inner"
  ],
  "list_concat": [
   "function_imports_missing",
   "js_identifier_unique",
   "js_imports_missing",
   "list_concat",
   "marker_expand",
   "prompt_previous"
  ],
  "list_intersect": [
   "function_imports_missing",
   "js_imports_missing",
   "list_intersect",
   "marker_expand"
  ],
  "function_imports_missing": [
   "function_imports_missing",
   "function_imports_missing_add",
   "function_imports_fix"
  ],
  "imports_missing": [
   "function_imports_missing",
   "function_imports_missing_add",
   "js_imports_missing",
   "js_imports_missing_add",
   "function_imports_fix"
  ],
  "function_imports_missing_add": [
   "function_imports_missing_add"
  ],
  "function_name_to_acronym": [
   "function_names_to_acronyms",
   "function_name_to_acronym"
  ],
  "list_to_dictionary": [
   "function_names_to_acronyms",
   "list_to_dictionary",
   "search_generic",
   "data_identifiers_search"
  ],
  "dictionary": [
   "function_names_to_acronyms",
   "list_to_dictionary"
  ],
  "function_name_separator": [
   "function_name_combine",
   "function_name_combine_multiple",
   "function_name_separator",
   "function_name_to_acronym",
   "function_name_to_parts",
   "tasks_run"
  ],
  "parts": [
   "function_name_combine_multiple",
   "function_name_to_acronym",
   "function_name_to_parts"
  ],
  "list_join_empty": [
   "function_name_to_acronym",
   "list_join_empty"
  ],
  "string_empty": [
   "function_name_to_acronym",
   "list_join_empty",
   "string_empty"
  ],
  "function_name_to_parts": [
   "function_name_to_acronym",
   "function_name_to_parts"
  ],
  "letters": [
   "function_name_to_acronym",
   "list_join_empty"
  ],
  "funcName": [
   "function_name_to_base"
  ],
  "unaliased_actual": [
   "function_name_unalias"
  ],
  "function_new_declaration": [
   "function_new",
   "function_new_declaration",
   "js_outside_move"
  ],
  "js_declaration_name": [
   "function_new",
   "function_new_declaration",
   "function_param_swap",
   "js_atomize_function",
   "js_declaration_name",
   "js_imports_missing",
   "js_outside_move",
   "marker_expand"
  ],
  "js_code_export": [
   "function_new",
   "function_new_declaration",
   "js_code_export"
  ],
  "function_new": [
   "function_new",
   "function_new_aliased",
   "function_new_js",
   "function_new_transform",
   "function_param_swap_task_simple",
   "function_wrap",
   "task_new"
  ],
  "code_declaration": [
   "function_new",
   "function_new_declaration",
   "js_code_export",
   "marker_functionize"
  ],
  "declaration": [
   "function_new",
   "function_new_declaration",
   "function_params_consolidate",
   "function_param_swap",
   "function_parse_declaration",
   "function_parse_declaration_js_unparse",
   "function_wrap",
   "js_call_new",
   "js_call_new_code",
   "js_code_call_args_await_maybe",
   "js_declaration_asyncify",
   "js_declaration_name",
   "js_declaration_params_get",
   "js_declaration_params_names",
   "js_declaration_param_add",
   "js_declaration_param_named",
   "js_declaration_single",
   "js_declaration_single_block_blody",
   "js_declaration_single_params_add",
   "js_declaration_to_block_body",
   "js_dollar_a",
   "js_dollar_s",
   "js_imports_missing",
   "js_node_atomize",
   "js_parse_statement",
   "js_stack_declaration_asyncify",
   "js_statement_call_get",
   "marker_call",
   "marker_down_choices_lambda",
   "marker_expand",
   "marker_functionize",
   "js_imports_declarations",
   "js_imports_unused",
   "js_imports_unused_remove",
   "js_imports_fix",
   "data_file_update_inner"
  ],
  "function_new_aliased": [
   "function_new_aliased"
  ],
  "contents_import": [
   "function_new_declaration"
  ],
  "js_declaration_single_params_add": [
   "function_new_js",
   "function_params_new",
   "function_param_swap",
   "js_declaration_single_params_add"
  ],
  "function_new_js": [
   "function_new_js"
  ],
  "f_name_unprefixed": [
   "function_new_js"
  ],
  "lambda$ast": [
   "function_new_transform",
   "function_transform",
   "function_transform_result"
  ],
  "function_open_editor": [
   "function_open_editor",
   "function_open_editor_current"
  ],
  "function_open_editor_current": [
   "function_open_editor_current"
  ],
  "list_empty": [
   "function_params_consolidate",
   "list_empty"
  ],
  "js_identifiers_to_names": [
   "function_params_consolidate",
   "js_declaration_params_names",
   "js_identifiers_to_names",
   "js_identifier_defineds",
   "marker_expand",
   "marker_functionize"
  ],
  "js_declaration_params_names": [
   "function_params_consolidate",
   "function_wrap",
   "js_call_new",
   "js_call_new_code",
   "js_declaration_params_names",
   "js_identifier_defineds",
   "marker_call",
   "marker_expand"
  ],
  "js_declaration_params_get": [
   "function_params_consolidate",
   "js_declaration_params_get",
   "js_declaration_params_names",
   "js_declaration_param_add",
   "js_identifier_defineds"
  ],
  "function_params_consolidate": [
   "function_params_consolidate"
  ],
  "params": [
   "function_params_consolidate",
   "function_param_swap",
   "js_declaration_params_get",
   "js_declaration_params_names",
   "js_declaration_param_add",
   "js_declaration_param_named",
   "js_node_atomize"
  ],
  "params_names": [
   "function_params_consolidate",
   "js_declaration_params_names",
   "js_identifier_defineds",
   "marker_expand"
  ],
  "param_name": [
   "function_params_consolidate",
   "function_param_new",
   "js_declaration_param_add",
   "js_declaration_param_named",
   "js_declaration_single_params_add",
   "marker_expand"
  ],
  "expression": [
   "function_params_consolidate",
   "js_atomize_function",
   "js_bang_to_not",
   "js_call_fill",
   "js_call_new_expression",
   "js_dollar_ie",
   "js_dollar_s",
   "js_if_else_if_combine",
   "js_left_right_set",
   "js_parse_expression",
   "js_return_code_replace",
   "js_statement_call_get",
   "marker_call_replace_generic",
   "marker_expand"
  ],
  "type": [
   "function_params_consolidate",
   "function_type_first",
   "js_arrow_blockify",
   "js_calls_to_each",
   "js_if_blockify",
   "js_if_blockify_generic",
   "js_node_types_is",
   "js_node_type_is",
   "js_node_type_is_assert",
   "js_node_type_is_if",
   "js_node_type_is_if_async",
   "js_node_type_not_is",
   "js_stack_filtered",
   "js_stack_filtered_each",
   "js_stack_last",
   "js_visit_type",
   "js_visit_type_each_async"
  ],
  "method": [
   "function_params_consolidate"
  ],
  "shorthand": [
   "function_params_consolidate"
  ],
  "computed": [
   "function_params_consolidate"
  ],
  "key": [
   "function_params_consolidate",
   "object_invert"
  ],
  "kind": [
   "function_params_consolidate"
  ],
  "arg_new": [
   "function_params_consolidate"
  ],
  "function_params_consolidate_task_simple": [
   "function_params_consolidate_task_simple"
  ],
  "function_transform_current": [
   "function_params_new",
   "function_param_swap",
   "function_transform_current"
  ],
  "js_declaration_param_add": [
   "function_params_new",
   "function_param_new",
   "function_param_swap",
   "js_call_new",
   "js_call_new_code",
   "js_declaration_param_add",
   "js_declaration_single_params_add",
   "marker_call"
  ],
  "function_param_new": [
   "function_params_new",
   "function_param_new",
   "function_param_swap"
  ],
  "function_params_new": [
   "function_params_new",
   "function_param_new"
  ],
  "param_names_comma": [
   "function_params_new"
  ],
  "param_names": [
   "function_params_new",
   "js_declaration_single_params_add"
  ],
  "list_swap": [
   "function_param_swap",
   "list_swap"
  ],
  "js_declaration_param_named": [
   "function_param_swap",
   "js_declaration_param_named"
  ],
  "function_param_swap": [
   "function_param_swap",
   "function_param_swap_task_simple"
  ],
  "param_name_a": [
   "function_param_swap",
   "function_param_swap_task_simple"
  ],
  "param_name_b": [
   "function_param_swap",
   "function_param_swap_task_simple"
  ],
  "a_index": [
   "function_param_swap"
  ],
  "b_index": [
   "function_param_swap"
  ],
  "function_param_swap_task_simple": [
   "function_param_swap_task_simple"
  ],
  "f_name2": [
   "function_param_swap_task_simple"
  ],
  "function_read": [
   "function_read"
  ],
  "function_rename": [
   "function_rename"
  ],
  "f_name_before": [
   "function_rename"
  ],
  "f_name_after": [
   "function_rename"
  ],
  "function_run": [
   "function_run",
   "function_run_git",
   "function_run_line",
   "function_run_log",
   "tasks_run"
  ],
  "function_run_log": [
   "function_run_git",
   "function_run_line",
   "function_run_log"
  ],
  "git_acp": [
   "function_run_git",
   "git_acp",
   "git_acp_call",
   "git_acp_timestamp"
  ],
  "function_run_line_parse": [
   "function_run_line",
   "function_run_line_git",
   "function_run_line_parse"
  ],
  "list_unique_reverse": [
   "function_run_line",
   "function_run_line_git",
   "function_run_line_parse",
   "list_unique_reverse"
  ],
  "list_reverse": [
   "function_run_line",
   "function_run_line_git",
   "list_copy_reverse",
   "list_reverse",
   "list_unique_reverse"
  ],
  "list_copy": [
   "function_run_line",
   "function_run_line_git",
   "list_copy",
   "list_copy_reverse",
   "visit_filter_recursive",
   "visit_filter_recursive_async"
  ],
  "unique": [
   "function_run_line_parse",
   "js_call_new",
   "js_call_new_code",
   "js_dollar_g",
   "js_function_id_add",
   "js_identifier_unique",
   "js_identifier_unique_ast",
   "js_node_atomize",
   "list_unique",
   "js_imports_declarations"
  ],
  "function_run_log_task_duplicate_lines_to_each": [
   "function_run_log_task_duplicate_lines_to_each"
  ],
  "function_transform_result": [
   "function_transform",
   "function_transform_command",
   "function_transform_result"
  ],
  "function_transform_command": [
   "function_transform_command",
   "function_transform_command_self"
  ],
  "transformer_name": [
   "function_transform_command"
  ],
  "transformer": [
   "function_transform_command"
  ],
  "function_transform_command_self": [
   "function_transform_command_self"
  ],
  "list_size_1_assert_message": [
   "function_transform_marker",
   "list_size_1_assert",
   "list_size_1_assert_message"
  ],
  "function_transform_marker_arg": [
   "function_transform_marker",
   "function_transform_marker_all",
   "function_transform_marker_arg",
   "js_marker_named_ast_arg",
   "marker_functionize"
  ],
  "js_marker_named": [
   "function_transform_marker",
   "function_transform_marker_all",
   "js_marker_is",
   "js_marker_named",
   "js_marker_named_ast",
   "marker_functionize"
  ],
  "js_type": [
   "function_transform_marker",
   "function_transform_marker_all",
   "js_atomize",
   "js_atomize_function",
   "js_imports",
   "js_imports_all",
   "js_markers",
   "js_marker_named_ast",
   "js_return_atomize",
   "js_type",
   "marker_enter",
   "marker_functionize",
   "js_imports_declarations"
  ],
  "list_is": [
   "function_transform_marker",
   "function_transform_marker_all",
   "function_transform_marker_empty",
   "js_atomize",
   "js_atomize_function",
   "js_block_child_graph",
   "js_block_child_graph_unparse",
   "js_dollar",
   "js_dollar_a",
   "js_dollar_a_generic",
   "js_marker_named",
   "js_marker_name_get",
   "js_node_atomize",
   "js_stack_list_block_is",
   "js_visit_children_get",
   "js_visit_filter",
   "list_filter",
   "list_is",
   "list_is_assert",
   "list_not_is",
   "list_size",
   "list_squash",
   "log_unparse_try",
   "marker_bottom",
   "marker_down_choices",
   "marker_down_generic",
   "marker_functionize"
  ],
  "js_node_type_is": [
   "function_transform_marker",
   "function_transform_marker_all",
   "js_atomize",
   "js_atomize_function",
   "js_declaration_params_names_node",
   "js_declare_assign_null",
   "js_declare_init_set",
   "js_dollar",
   "js_dollar_a",
   "js_dollar_a_generic",
   "js_dollar_g",
   "js_dollar_r",
   "js_dollar_rf",
   "js_dollar_rt",
   "js_dollar_s",
   "js_identifier_defineds",
   "js_identifier_is",
   "js_identifier_replace",
   "js_imports",
   "js_let_add",
   "js_marker_named",
   "js_marker_name_get",
   "js_node_atomize",
   "js_node_types_is",
   "js_node_type_is",
   "js_node_type_is_assert",
   "js_node_type_is_if",
   "js_node_type_is_if_async",
   "js_node_type_not_is",
   "js_return_name",
   "js_return_on",
   "js_return_on_async",
   "js_stack_declaration_asyncify",
   "js_stack_filtered",
   "js_stack_filtered_multiple",
   "js_stack_last",
   "js_stack_last_multiple",
   "js_stack_list_block_is",
   "js_statement_call_get",
   "js_visit_type",
   "js_visit_types",
   "marker_assign_replace",
   "marker_bottom",
   "marker_call",
   "marker_call_atomize",
   "marker_call_replace",
   "marker_call_replace_generic",
   "marker_enter",
   "marker_expand",
   "marker_functionize",
   "marker_next_delete",
   "js_imports_declarations"
  ],
  "js_node_is": [
   "function_transform_marker",
   "function_transform_marker_all",
   "js_identifier_replace",
   "js_marker_named",
   "js_marker_name_get",
   "js_node_is",
   "js_node_type_is",
   "js_stack_declaration_asyncify",
   "js_stack_filtered",
   "js_stack_filtered_multiple",
   "js_stack_last",
   "js_stack_last_multiple",
   "js_visit_filter",
   "js_visit_nodes",
   "js_visit_type",
   "js_visit_types",
   "marker_call",
   "marker_functionize"
  ],
  "list_get_end": [
   "function_transform_marker",
   "function_transform_marker_all",
   "function_transform_marker_arg",
   "function_transform_marker_empty",
   "js_atomize",
   "js_atomize_function",
   "js_declare_assign",
   "js_declare_assign_null",
   "js_dollar",
   "js_let_add",
   "js_marker_named",
   "js_marker_name_get",
   "js_node_atomize",
   "js_stack_list_block_is",
   "list_get_end",
   "list_get_end_1",
   "list_get_end_2",
   "list_get_end_3",
   "list_last",
   "marker_bottom",
   "marker_down_choices",
   "marker_down_generic",
   "marker_functionize",
   "marker_leave"
  ],
  "js_visit_type": [
   "function_transform_marker",
   "function_transform_marker_all",
   "js_arrow_blockify",
   "js_arrow_to_function",
   "js_atomize",
   "js_atomize_function",
   "js_await_add",
   "js_bang_to_not",
   "js_calls_to_each",
   "js_call_fill",
   "js_declaration_single",
   "js_declare_assign",
   "js_declare_assign_null",
   "js_dollar",
   "js_function_id_add",
   "js_identifiers",
   "js_identifiers_names",
   "js_identifier_replace",
   "js_if_blockify",
   "js_if_else_if_combine",
   "js_imports",
   "js_let_add",
   "js_return_atomize",
   "js_type",
   "js_visit_type",
   "js_visit_type_each_async",
   "marker_enter",
   "marker_functionize",
   "js_imports_unused",
   "js_imports_declarations",
   "js_identifiers_named_count"
  ],
  "function_transform_marker": [
   "function_transform_marker",
   "function_transform_marker_current",
   "function_transform_marker_empty",
   "marker_assign_replace",
   "marker_bottom",
   "marker_call",
   "marker_call_atomize",
   "marker_call_replace",
   "marker_call_replace_generic",
   "marker_down_choices",
   "marker_down_generic",
   "marker_expand",
   "marker_new",
   "marker_next",
   "marker_next_delete",
   "marker_remove"
  ],
  "lambda$a": [
   "function_transform_marker",
   "function_transform_marker_all",
   "function_transform_marker_current",
   "marker_call_replace_generic"
  ],
  "marker_name": [
   "function_transform_marker",
   "js_marker_named",
   "marker"
  ],
  "lambda_marker": [
   "function_transform_marker",
   "function_transform_marker_all",
   "marker_functionize",
   "marker_move"
  ],
  "visitors": [
   "function_transform_marker",
   "js_markers",
   "js_marker_named_ast"
  ],
  "lines": [
   "function_transform_marker"
  ],
  "size": [
   "function_transform_marker",
   "list_size"
  ],
  "js_markers": [
   "function_transform_marker_all",
   "js_markers",
   "marker_top"
  ],
  "js_marker_is": [
   "function_transform_marker_all",
   "js_markers",
   "js_marker_is"
  ],
  "function_transform_marker_all": [
   "function_transform_marker_all",
   "marker_remove"
  ],
  "markers": [
   "function_transform_marker_all",
   "js_markers",
   "marker_top"
  ],
  "stack": [
   "function_transform_marker_arg",
   "js_atomize",
   "js_atomize_function",
   "js_await_add",
   "js_block_child_graph",
   "js_block_insert",
   "js_call_fill",
   "js_declare_assign",
   "js_dollar",
   "js_function_last_asyncify",
   "js_identifier_defineds",
   "js_if_else_if_combine",
   "js_let_add",
   "js_marker_name_get",
   "js_node_atomize",
   "js_stack_declaration_asyncify",
   "js_stack_filtered",
   "js_stack_filtered_each",
   "js_stack_filtered_multiple",
   "js_stack_filtered_multiple_each",
   "js_stack_last",
   "js_stack_last_multiple",
   "js_stack_list_block_is",
   "list_get_end",
   "list_get_end_1",
   "list_get_end_2",
   "list_get_end_3",
   "marker_call",
   "marker_down_choices_lambda",
   "marker_functionize",
   "visit_filter_recursive",
   "visit_filter_recursive_async",
   "marker_leave"
  ],
  "stack1": [
   "function_transform_marker_arg",
   "js_atomize",
   "js_atomize_function",
   "js_dollar",
   "js_dollar_a",
   "js_dollar_a_generic",
   "js_dollar_g",
   "js_dollar_i",
   "js_dollar_ie",
   "js_dollar_r",
   "js_dollar_rf",
   "js_dollar_rt",
   "js_dollar_s",
   "js_if_else_if_combine",
   "js_let_add",
   "js_marker_name_get",
   "js_node_atomize",
   "js_stack_list_block_is",
   "marker_down_choices_lambda",
   "marker_down_generic",
   "marker_enter",
   "marker_functionize",
   "marker_index",
   "marker_next_index",
   "marker_previous_index",
   "marker_remove",
   "marker_leave"
  ],
  "stack2": [
   "function_transform_marker_arg",
   "js_atomize_function",
   "js_dollar",
   "js_dollar_a",
   "js_dollar_a_generic",
   "js_dollar_r",
   "js_dollar_s",
   "js_marker_name_get",
   "js_node_atomize",
   "js_stack_list_block_is",
   "marker_above",
   "marker_call",
   "marker_delete_above",
   "marker_down_choices_lambda",
   "marker_down_generic",
   "marker_enter",
   "marker_expand",
   "marker_functionize",
   "marker_index",
   "marker_move",
   "marker_new",
   "marker_next_delete",
   "marker_next_get",
   "marker_next_index",
   "marker_previous_index",
   "marker_remove",
   "js_dollar_g",
   "marker_leave"
  ],
  "function_transform_marker_current": [
   "function_transform_marker_current",
   "marker_above",
   "marker_delete_above",
   "marker_down_generic",
   "marker_enter",
   "marker_leave"
  ],
  "marker_down_choices_lambda": [
   "function_transform_marker_empty",
   "marker_down_choices",
   "marker_down_choices_lambda",
   "marker_down_generic"
  ],
  "list_is_assert": [
   "function_transform_marker_empty",
   "list_is_assert",
   "list_size",
   "marker_down_choices",
   "marker_down_generic",
   "marker_leave"
  ],
  "list_insert": [
   "function_transform_marker_empty",
   "js_atomize",
   "js_atomize_function",
   "js_block_insert",
   "js_call_insert",
   "js_dollar_s",
   "js_marker_insert",
   "list_add_first",
   "list_insert",
   "marker_above",
   "marker_assign_replace",
   "marker_bottom",
   "marker_call",
   "marker_call_atomize",
   "marker_call_replace",
   "marker_delete_above",
   "marker_down_choices",
   "marker_down_generic",
   "marker_expand",
   "marker_functionize",
   "marker_move",
   "marker_next",
   "marker_next_delete",
   "js_dollar_g",
   "marker_leave"
  ],
  "list_get": [
   "function_transform_marker_empty",
   "js_atomize",
   "js_atomize_function",
   "js_block_child_graph",
   "js_block_child_graph_unparse",
   "js_call_fill",
   "js_identifier_defineds",
   "js_node_atomize",
   "lists_get",
   "list_first",
   "list_get",
   "list_get_end",
   "list_last",
   "list_next",
   "list_previous",
   "list_second",
   "list_to_dictionary",
   "marker_assign_replace",
   "marker_bottom",
   "marker_call_atomize",
   "marker_call_replace",
   "marker_call_replace_generic",
   "marker_down_choices",
   "marker_down_generic",
   "marker_expand",
   "marker_functionize",
   "marker_next",
   "marker_next_delete",
   "marker_next_get"
  ],
  "list_index_of": [
   "function_transform_marker_empty",
   "js_atomize",
   "js_atomize_function",
   "js_block_child_graph",
   "js_block_child_graph_unparse",
   "js_block_insert",
   "js_node_atomize",
   "list_index_of",
   "list_index_of_delta",
   "list_index_of_next",
   "list_index_of_previous",
   "list_next_index",
   "list_remove",
   "list_swap",
   "marker_assign_replace",
   "marker_bottom",
   "marker_call_atomize",
   "marker_call_replace",
   "marker_down_choices",
   "marker_down_generic",
   "marker_enter",
   "marker_expand",
   "marker_functionize",
   "marker_index",
   "marker_next",
   "marker_next_delete",
   "marker_next_get",
   "marker_next_index",
   "marker_previous_index",
   "marker_leave"
  ],
  "js_stack_list_block_is": [
   "function_transform_marker_empty",
   "js_stack_list_block_is",
   "marker_bottom",
   "marker_down_choices",
   "marker_down_choices_lambda",
   "marker_down_generic"
  ],
  "js_visit": [
   "function_transform_marker_empty",
   "js_atomize",
   "js_atomize_function",
   "js_bang_to_not",
   "js_call_fill",
   "js_dollar",
   "js_visit",
   "js_visitors",
   "js_visit_each",
   "js_visit_each_async",
   "js_visit_match",
   "js_visit_nodes",
   "js_visit_type",
   "js_visit_types",
   "marker_bottom",
   "marker_call_atomize",
   "marker_down_choices",
   "marker_down_choices_lambda",
   "marker_down_generic",
   "marker_functionize",
   "js_imports_unused"
  ],
  "list_adder": [
   "function_transform_marker_empty",
   "function_type_first",
   "js_block_child_graph",
   "js_block_child_graph_unparse",
   "js_call_fill",
   "js_declaration_single",
   "js_type",
   "js_visitors",
   "js_visit_each",
   "js_visit_each_async",
   "js_visit_match",
   "js_visit_type_each_async",
   "list_adder",
   "list_adder_unique",
   "list_adder_unique_async",
   "list_difference",
   "list_intersect",
   "list_squash",
   "marker_bottom",
   "marker_call_atomize",
   "marker_down_choices",
   "marker_down_choices_lambda",
   "marker_down_generic",
   "marker_functionize",
   "js_imports_unused"
  ],
  "marker_next_get": [
   "function_transform_marker_empty",
   "marker_assign_replace",
   "marker_bottom",
   "marker_call",
   "marker_call_atomize",
   "marker_call_replace",
   "marker_call_replace_generic",
   "marker_down_choices",
   "marker_down_generic",
   "marker_enter",
   "marker_expand",
   "marker_functionize",
   "marker_move",
   "marker_next",
   "marker_next_delete",
   "marker_next_get"
  ],
  "noop": [
   "function_transform_marker_empty",
   "js_return_atomize",
   "marker",
   "marker_expand",
   "noop"
  ],
  "function_transform_marker_empty": [
   "function_transform_marker_empty"
  ],
  "js_node_types": [
   "function_types",
   "js_dollar",
   "js_node_types",
   "js_node_types_includes",
   "marker_functionize"
  ],
  "js_visit_nodes": [
   "function_types",
   "function_type_first",
   "js_node_types",
   "js_visit_nodes"
  ],
  "js_node_type": [
   "function_types",
   "function_type_first",
   "js_if_blockify",
   "js_if_blockify_generic",
   "js_node_type",
   "js_node_types",
   "js_node_type_is",
   "marker_enter",
   "marker_functionize"
  ],
  "list_adder_unique": [
   "function_types",
   "js_identifiers",
   "js_identifiers_names",
   "js_identifier_replace",
   "js_imports",
   "js_node_types",
   "list_adder_unique",
   "marker_functionize",
   "js_imports_declarations"
  ],
  "function_types": [
   "function_types",
   "js_identifier_defineds",
   "marker_enter"
  ],
  "f_types": [
   "function_types",
   "js_types_function_includes"
  ],
  "function_type_first": [
   "function_type_first"
  ],
  "js_statement_return": [
   "function_wrap",
   "js_arrow_blockify",
   "js_if_blockify",
   "js_if_blockify_generic",
   "js_statement_return"
  ],
  "js_code_return": [
   "function_wrap",
   "js_code_return",
   "js_code_return_empty",
   "js_dollar",
   "js_statement_return"
  ],
  "object_property_from": [
   "function_wrap",
   "object_property_from"
  ],
  "js_declaration_asyncify": [
   "function_wrap",
   "js_declaration_asyncify",
   "js_stack_declaration_asyncify"
  ],
  "declaration_call": [
   "function_wrap",
   "marker_expand"
  ],
  "arg_names": [
   "function_wrap",
   "js_call_new_code"
  ],
  "function_wrap_suffix_add": [
   "function_wrap_suffix_add"
  ],
  "git_rebase": [
   "git_rebase"
  ],
  "git_commit": [
   "git_acp",
   "git_commit"
  ],
  "git_push": [
   "git_acp",
   "git_push"
  ],
  "concat": [
   "git_acp_call",
   "list_concat"
  ],
  "join": [
   "git_acp_call",
   "list_join",
   "path_join"
  ],
  "execSync": [
   "git_acp_timestamp"
  ],
  "git_acp_timestamp": [
   "git_acp_timestamp"
  ],
  "git_push_command": [
   "git_push",
   "git_push_command",
   "git_push_schedule",
   "git_push_schedule_check",
   "git_push_schedule_command"
  ],
  "git_push_schedule_command": [
   "git_push_schedule",
   "git_push_schedule_check",
   "git_push_schedule_command"
  ],
  "path_resolve": [
   "git_push_schedule",
   "git_push_schedule_check",
   "git_push_schedule_command",
   "path_resolve"
  ],
  "git_push_schedule": [
   "git_push_schedule"
  ],
  "schtasks_query": [
   "git_push_schedule_check",
   "schtasks_query"
  ],
  "git_push_schedule_task_name": [
   "git_push_schedule_check",
   "git_push_schedule_command",
   "git_push_schedule_task_name"
  ],
  "git_push_schedule_check": [
   "git_push_schedule_check",
   "git_push_schedule_command"
  ],
  "abortErr": [
   "git_rebase"
  ],
  "html_name_to_path": [
   "html_name_to_path",
   "html_new",
   "html_overwrite",
   "html_update"
  ],
  "file_name": [
   "html_name_to_path"
  ],
  "html_update": [
   "html_new",
   "html_update"
  ],
  "html_overwrite": [
   "html_new",
   "html_overwrite",
   "html_update"
  ],
  "html_new": [
   "html_new"
  ],
  "name_prefixed": [
   "html_update"
  ],
  "npm_install": [
   "import_install",
   "npm_install"
  ],
  "err": [
   "import_install"
  ],
  "integer_is": [
   "integer_is",
   "integer_is_assert",
   "list_get"
  ],
  "ii": [
   "integer_is",
   "integer_is_assert",
   "js_declaration_params_names_node",
   "js_identifier_is",
   "list_index_is"
  ],
  "Number": [
   "integer_is",
   "integer_to"
  ],
  "isInteger": [
   "integer_is"
  ],
  "integer_is_assert": [
   "integer_is_assert",
   "list_get"
  ],
  "integer_to": [
   "integer_to",
   "marker_bottom",
   "marker_call_atomize",
   "marker_call_replace",
   "marker_call_replace_generic",
   "marker_down",
   "marker_next_delete",
   "marker_up"
  ],
  "parseInt": [
   "integer_to"
  ],
  "isNaN": [
   "integer_to"
  ],
  "JSON": [
   "json_format_to",
   "json_from",
   "json_to"
  ],
  "stringify": [
   "json_format_to",
   "json_to"
  ],
  "parse": [
   "json_from",
   "js_parse",
   "path_name"
  ],
  "js_node_type_not_is": [
   "js_arrow_blockify",
   "js_declare_assign",
   "js_declare_assign_null",
   "js_if_blockify",
   "js_if_blockify_generic",
   "js_node_type_not_is"
  ],
  "js_if_blockify_generic": [
   "js_arrow_blockify",
   "js_if_blockify",
   "js_if_blockify_generic"
  ],
  "object_copy": [
   "js_arrow_blockify",
   "js_atomize",
   "js_atomize_function",
   "js_bang_to_not",
   "js_dollar",
   "js_dollar_a",
   "js_dollar_s",
   "js_if_blockify",
   "js_if_blockify_generic",
   "js_node_atomize",
   "marker_down_generic",
   "object_copy"
  ],
  "list_get_end_1": [
   "js_atomize",
   "js_atomize_function",
   "js_declare_assign_null",
   "js_dollar",
   "js_if_else_if_combine",
   "js_let_add",
   "list_get_end_1",
   "marker_leave"
  ],
  "js_node_atomize": [
   "js_atomize",
   "js_atomize_function",
   "js_node_atomize",
   "js_return_atomize",
   "marker_call_atomize"
  ],
  "list_next": [
   "js_atomize",
   "js_atomize_function",
   "js_block_insert",
   "js_dollar",
   "js_dollar_a",
   "js_dollar_a_generic",
   "js_identifier_defineds",
   "list_next",
   "list_next_index",
   "marker_functionize"
  ],
  "js_return_name": [
   "js_atomize",
   "js_atomize_function",
   "js_call_new",
   "js_call_new_code",
   "js_node_atomize",
   "js_return_name",
   "marker_call"
  ],
  "js_declare_init_set": [
   "js_atomize",
   "js_atomize_function",
   "js_declare",
   "js_declare_init_set",
   "marker_assign_replace"
  ],
  "list_index_of_next": [
   "js_atomize",
   "js_atomize_function",
   "js_identifier_defineds",
   "list_index_of_next",
   "list_next",
   "marker_enter",
   "marker_functionize",
   "marker_index",
   "marker_next_index",
   "marker_previous_index",
   "js_dollar_g"
  ],
  "js_stack_last": [
   "js_atomize",
   "js_atomize_function",
   "js_block_child_graph",
   "js_block_child_graph_unparse",
   "js_block_insert",
   "js_call_fill",
   "js_stack_declaration_asyncify",
   "js_stack_last"
  ],
  "js_identifier_unique": [
   "js_atomize",
   "js_atomize_function",
   "js_call_new",
   "js_call_new_code",
   "js_dollar",
   "js_identifier_unique",
   "js_identifier_unique_ast",
   "js_node_atomize",
   "js_return_name",
   "marker_call",
   "marker_top"
  ],
  "existing": [
   "js_atomize",
   "js_call_new",
   "js_call_new_code",
   "js_identifier_unique",
   "js_identifier_unique_ast",
   "js_node_atomize",
   "js_return_atomize",
   "marker_call_atomize"
  ],
  "ces": [
   "js_atomize"
  ],
  "js_block_insert": [
   "js_atomize_function",
   "js_block_insert",
   "js_node_atomize"
  ],
  "js_declare": [
   "js_atomize_function",
   "js_declare",
   "js_dollar",
   "js_dollar_g",
   "js_dollar_s",
   "js_let_add",
   "js_node_atomize",
   "marker_expand"
  ],
  "list_get_end_2": [
   "js_atomize_function",
   "js_declare_assign_null",
   "js_dollar",
   "list_get_end_2",
   "marker_leave"
  ],
  "fes": [
   "js_atomize_function"
  ],
  "type_is": [
   "js_atomize_function",
   "js_declaration_params_names_node",
   "js_dollar_a_generic",
   "js_dollar_r",
   "js_dollar_s",
   "js_let_add",
   "js_node_types_is",
   "js_node_type_is",
   "js_node_type_is_assert",
   "js_node_type_is_if",
   "js_node_type_is_if_async",
   "js_node_type_not_is"
  ],
  "copy": [
   "js_atomize_function",
   "js_bang_to_not",
   "js_if_blockify_generic",
   "js_node_atomize",
   "list_copy",
   "list_copy_reverse",
   "list_unique_reverse",
   "object_copy",
   "visit_filter_recursive",
   "visit_filter_recursive_async"
  ],
  "js_bang_to_not": [
   "js_auto",
   "js_bang_to_not"
  ],
  "js_if_blockify": [
   "js_auto",
   "js_if_blockify"
  ],
  "js_if_else_if_combine": [
   "js_auto",
   "js_if_else_if_combine"
  ],
  "js_return_atomize": [
   "js_auto",
   "js_return_atomize"
  ],
  "transforms": [
   "js_auto"
  ],
  "t": [
   "js_auto"
  ],
  "js_imports_all": [
   "js_imports",
   "js_imports_all",
   "js_imports_declarations"
  ],
  "js_await_add": [
   "js_await_add"
  ],
  "js_await_add_task_simple": [
   "js_await_add_task_simple"
  ],
  "operator": [
   "js_bang_to_not"
  ],
  "argument": [
   "js_bang_to_not",
   "js_return_atomize",
   "js_return_name",
   "js_return_on",
   "js_return_on_async",
   "marker_expand"
  ],
  "arguments2": [
   "js_bang_to_not",
   "js_marker_name_get",
   "marker_call_replace_generic",
   "marker_expand"
  ],
  "log_unparse_try": [
   "js_block_child_graph",
   "log_unparse_try"
  ],
  "log_json": [
   "js_block_child_graph",
   "log_json"
  ],
  "log_unparse": [
   "js_block_child_graph",
   "js_dollar_ie",
   "js_if_blockify",
   "log_unparse",
   "log_unparse_try",
   "marker_enter"
  ],
  "js_node_type_is_if": [
   "js_block_child_graph",
   "js_block_child_graph_unparse",
   "js_if_else_if_combine",
   "js_node_type_is_if"
  ],
  "js_node_types_is": [
   "js_block_child_graph",
   "js_block_child_graph_unparse",
   "js_node_types_is",
   "js_stack_filtered_multiple",
   "js_visit_types",
   "log_unparse_try"
  ],
  "js_types_function": [
   "js_block_child_graph",
   "js_block_child_graph_unparse",
   "js_call_fill",
   "js_function_last_asyncify",
   "js_identifier_defineds",
   "js_types_function",
   "js_types_function_includes",
   "marker_enter"
  ],
  "list_index_is": [
   "js_block_child_graph",
   "js_block_child_graph_unparse",
   "list_index_is"
  ],
  "js_visitors": [
   "js_block_child_graph",
   "js_block_child_graph_unparse",
   "js_visitors"
  ],
  "js_block_child_graph": [
   "js_block_child_graph",
   "js_block_child_graph_unparse"
  ],
  "vs": [
   "js_block_child_graph",
   "js_type",
   "js_visitors",
   "js_visit_each",
   "js_visit_each_async",
   "js_visit_type_each_async",
   "marker_down_choices",
   "js_imports_declarations"
  ],
  "edges": [
   "js_block_child_graph",
   "js_block_child_graph_unparse"
  ],
  "js_block_child_graph_unparse": [
   "js_block_child_graph_unparse"
  ],
  "edge": [
   "js_block_child_graph_unparse"
  ],
  "inserted": [
   "js_block_insert",
   "marker_expand"
  ],
  "block": [
   "js_block_insert",
   "js_parse_statement"
  ],
  "block_body": [
   "js_block_insert"
  ],
  "block_body_item": [
   "js_block_insert"
  ],
  "block_body_item_index": [
   "js_block_insert"
  ],
  "js_calls_to_each": [
   "js_calls_to_each"
  ],
  "call_name": [
   "js_calls_to_each"
  ],
  "ast2": [
   "js_calls_to_each"
  ],
  "js_calls_to_each_task_simple": [
   "js_calls_to_each_task_simple"
  ],
  "js_stack_last_multiple": [
   "js_call_fill",
   "js_function_last_asyncify",
   "js_stack_last",
   "js_stack_last_multiple"
  ],
  "object_property_exists_assert": [
   "js_call_fill",
   "object_property_exists_assert"
  ],
  "list_previous": [
   "js_call_fill",
   "list_previous"
  ],
  "list_index_of_previous": [
   "js_call_fill",
   "list_index_of_previous",
   "list_previous",
   "marker_index",
   "marker_previous_index"
  ],
  "js_visit_type_each_async": [
   "js_call_fill",
   "js_dollar",
   "js_if_blockify",
   "js_if_blockify_generic",
   "js_if_else_if_combine",
   "js_visit_type_each_async"
  ],
  "js_visit_each_async": [
   "js_call_fill",
   "js_unparse",
   "js_visit_each_async"
  ],
  "js_call_new": [
   "js_call_fill",
   "js_call_new",
   "js_dollar_ie",
   "marker_call",
   "task_new"
  ],
  "js_identifier_is": [
   "js_call_fill",
   "js_declaration_params_names",
   "js_declaration_params_names_node",
   "js_dollar",
   "js_identifiers_to_names",
   "js_identifier_is",
   "marker_expand"
  ],
  "async_is": [
   "js_call_fill",
   "js_call_new",
   "js_call_new_code",
   "js_code_declaration",
   "js_function_last_asyncify",
   "marker_functionize",
   "data_file_update_inner"
  ],
  "js_code_call_args": [
   "js_call_insert",
   "js_code_call",
   "js_code_call_args",
   "js_code_call_args_await_maybe",
   "js_dollar",
   "js_dollar_g",
   "js_marker_insert",
   "marker_call",
   "marker_functionize"
  ],
  "js_call_insert": [
   "js_call_insert",
   "js_marker_insert",
   "task_new"
  ],
  "args_code": [
   "js_call_insert",
   "js_call_new_code",
   "js_code_call_args_await_maybe",
   "js_marker_insert"
  ],
  "js_call_new_code": [
   "js_call_new",
   "js_call_new_code",
   "js_call_new_expression",
   "js_dollar_ie"
  ],
  "js_code_let_assign": [
   "js_call_new",
   "js_code_let_assign",
   "js_declare"
  ],
  "marker_next_index": [
   "js_call_new",
   "marker_call",
   "marker_functionize",
   "marker_move",
   "marker_new",
   "marker_next_delete",
   "marker_next_get",
   "marker_next_index"
  ],
  "f_name_call": [
   "js_call_new",
   "js_call_new_code",
   "marker_call"
  ],
  "return_name": [
   "js_call_new",
   "js_call_new_code",
   "js_node_atomize",
   "js_return_name"
  ],
  "ast_call": [
   "js_call_new_code"
  ],
  "arg_name": [
   "js_call_new_code"
  ],
  "arg_code": [
   "js_call_new_code"
  ],
  "skip_count": [
   "js_call_new_code",
   "list_skip",
   "string_skip"
  ],
  "remaining": [
   "js_call_new_code",
   "js_dollar",
   "js_dollar_g"
  ],
  "lamda_name": [
   "js_call_new_code"
  ],
  "declaration_lambda": [
   "js_call_new_code"
  ],
  "js_call_new_expression": [
   "js_call_new_expression",
   "js_dollar_ie"
  ],
  "js_code_braces_empty": [
   "js_code_arrow",
   "js_code_braces_empty",
   "js_dollar",
   "js_dollar_f",
   "js_dollar_i",
   "js_dollar_ie"
  ],
  "js_code_parenthesis_open_close": [
   "js_code_arrow",
   "js_code_parenthesis_open_close",
   "js_dollar_f"
  ],
  "js_code_arrow": [
   "js_code_arrow",
   "js_dollar_f"
  ],
  "oc": [
   "js_code_arrow"
  ],
  "js_code_assign": [
   "js_code_assign",
   "js_code_let_assign",
   "js_dollar_s"
  ],
  "js_code_await": [
   "js_code_await",
   "js_code_call_args_await_maybe",
   "marker_call"
  ],
  "js_code_wrap_braces": [
   "js_code_braces_empty",
   "js_code_declaration",
   "js_code_import_single",
   "js_code_wrap_braces",
   "js_dollar"
  ],
  "list_join_comma_space": [
   "js_code_call",
   "js_code_call_args",
   "list_join_comma_space"
  ],
  "js_code_wrap_parenthesis": [
   "js_code_call",
   "js_code_call_args",
   "js_code_parenthesis_open_close",
   "js_code_wrap_parenthesis",
   "js_dollar",
   "js_dollar_i",
   "js_dollar_ie"
  ],
  "fn_name": [
   "js_code_call",
   "js_code_call_args"
  ],
  "js_code_statement": [
   "js_code_call_statement",
   "js_code_statement"
  ],
  "js_code_call_statement": [
   "js_code_call_statement",
   "marker_top"
  ],
  "js_keyword_function": [
   "js_code_declaration",
   "js_keyword_function"
  ],
  "inside": [
   "js_code_declaration",
   "js_code_wrap_braces",
   "js_code_wrap_parenthesis",
   "js_dollar_i"
  ],
  "prefix": [
   "js_code_declaration",
   "string_prefix_without",
   "string_starts_with"
  ],
  "js_keyword_from": [
   "js_code_import_single",
   "js_keyword_from"
  ],
  "js_keyword_import": [
   "js_code_import_single",
   "js_keyword_import"
  ],
  "js_keyword_let": [
   "js_code_let_assign",
   "js_keyword_let"
  ],
  "js_operator_or": [
   "js_code_or",
   "js_if_else_if_combine",
   "js_operator_or"
  ],
  "js_code_or": [
   "js_code_or",
   "js_if_else_if_combine"
  ],
  "js_code_return_empty": [
   "js_code_return_empty",
   "js_dollar",
   "js_dollar_r",
   "js_dollar_rf",
   "js_dollar_rt",
   "js_return_empty"
  ],
  "parsed_string": [
   "js_code_string"
  ],
  "code_string": [
   "js_code_string",
   "js_dollar_g",
   "js_marker_insert",
   "marker_assign_replace_string"
  ],
  "other": [
   "js_declaration_asyncify",
   "list_difference",
   "list_intersect",
   "marker_functionize",
   "prompt_previous"
  ],
  "declaration_id": [
   "js_declaration_name"
  ],
  "list_map_squash": [
   "js_declaration_params_names",
   "js_declaration_params_names_node",
   "list_map_squash"
  ],
  "js_declaration_params_names_node": [
   "js_declaration_params_names",
   "js_declaration_params_names_node"
  ],
  "list_squash": [
   "js_declaration_params_names_node",
   "list_map_squash",
   "list_squash"
  ],
  "list_find_property": [
   "js_declaration_param_named",
   "list_find_property"
  ],
  "nameds": [
   "js_declaration_single"
  ],
  "named": [
   "js_declaration_single"
  ],
  "js_declaration_to_block_body": [
   "js_declaration_single_block_blody",
   "js_declaration_to_block_body",
   "marker_down_choices_lambda",
   "marker_enter",
   "marker_expand",
   "marker_functionize",
   "task_new"
  ],
  "init": [
   "js_declare",
   "js_declare_assign",
   "js_declare_init_set",
   "js_dollar_a",
   "js_dollar_s",
   "marker_assign_replace"
  ],
  "assign_code": [
   "js_declare"
  ],
  "assign": [
   "js_declare",
   "js_dollar_g",
   "js_dollar_s",
   "js_let_add",
   "js_node_atomize",
   "marker_expand"
  ],
  "js_declare_assign": [
   "js_declare_assign",
   "js_declare_assign_null",
   "js_dollar_s"
  ],
  "stack3": [
   "js_declare_assign",
   "js_dollar",
   "js_dollar_r"
  ],
  "js_null": [
   "js_declare_assign_null",
   "js_dollar_s",
   "js_null"
  ],
  "js_keyword_null": [
   "js_declare_assign_null",
   "js_dollar_s",
   "js_keyword_null",
   "js_null"
  ],
  "vd": [
   "js_declare_init_set"
  ],
  "declarations": [
   "js_declare_init_set",
   "js_dollar_a",
   "js_dollar_a_generic",
   "js_dollar_s",
   "js_identifier_defineds",
   "js_statement_call_get"
  ],
  "declarators": [
   "js_declare_init_set"
  ],
  "js_dollar_rf": [
   "js_dollar",
   "js_dollar_rf"
  ],
  "list_get_end_3": [
   "js_dollar",
   "list_get_end_3"
  ],
  "lambda_invoke_multiple": [
   "js_dollar",
   "lambda_invoke_multiple"
  ],
  "lambda_invoke": [
   "js_dollar",
   "lambda_invoke",
   "lambda_invoke_multiple"
  ],
  "js_dollar_i": [
   "js_dollar",
   "js_dollar_i",
   "js_dollar_ie"
  ],
  "js_dollar_r": [
   "js_dollar",
   "js_dollar_r"
  ],
  "js_dollar_a": [
   "js_dollar",
   "js_dollar_a"
  ],
  "js_dollar_s": [
   "js_dollar",
   "js_dollar_s"
  ],
  "js_dollar_f": [
   "js_dollar",
   "js_dollar_f"
  ],
  "list_remove_multiple": [
   "js_dollar",
   "js_dollar_a",
   "js_dollar_s",
   "list_remove_multiple",
   "marker_functionize"
  ],
  "js_dollar_g": [
   "js_dollar",
   "js_dollar_g"
  ],
  "js_identifier_unique_ast": [
   "js_dollar",
   "js_dollar_g",
   "js_function_id_add",
   "js_identifier_unique_ast"
  ],
  "list_first_second": [
   "js_dollar",
   "js_dollar_g",
   "list_first_second"
  ],
  "list_skip": [
   "js_dollar",
   "list_skip",
   "marker_enter",
   "list_first_remaining",
   "list_skip_1"
  ],
  "list_second": [
   "js_dollar",
   "js_dollar_r",
   "js_dollar_rf",
   "js_dollar_rt",
   "list_first_second",
   "list_second",
   "list_first_remaining"
  ],
  "string_empty_not_is": [
   "js_dollar",
   "js_identifier_unique",
   "string_empty_not_is"
  ],
  "string_empty_is": [
   "js_dollar",
   "js_identifier_unique",
   "string_empty_is",
   "string_empty_not_is"
  ],
  "string_prefix_without": [
   "js_dollar",
   "string_prefix_without"
  ],
  "js_keyword_if": [
   "js_dollar",
   "js_dollar_i",
   "js_dollar_ie",
   "js_keyword_if"
  ],
  "string_starts_with": [
   "js_dollar",
   "js_imports",
   "string_prefix_without",
   "string_starts_with",
   "js_imports_declarations"
  ],
  "js_dollar_rt": [
   "js_dollar",
   "js_dollar_rt"
  ],
  "js_dollar_ie": [
   "js_dollar",
   "js_dollar_ie"
  ],
  "seconds": [
   "js_dollar"
  ],
  "afters": [
   "js_dollar",
   "js_dollar_a",
   "js_dollar_a_generic",
   "js_dollar_f",
   "js_dollar_g",
   "js_dollar_s",
   "lambda_invoke_multiple"
  ],
  "second_name": [
   "js_dollar"
  ],
  "js_dollar_a_generic": [
   "js_dollar_a",
   "js_dollar_a_generic",
   "js_dollar_s"
  ],
  "next": [
   "js_dollar_a",
   "js_dollar_a_generic",
   "js_dollar_s",
   "list_next",
   "list_next_index",
   "marker_assign_replace",
   "marker_call_replace_generic",
   "marker_enter",
   "marker_expand",
   "marker_move",
   "marker_next",
   "marker_next_get"
  ],
  "id": [
   "js_dollar_a",
   "js_dollar_s",
   "js_function_id_add",
   "js_identifier_defineds"
  ],
  "is": [
   "js_dollar_a"
  ],
  "l": [
   "js_dollar_a_generic",
   "list_difference",
   "list_filter",
   "list_intersect",
   "list_is",
   "list_not_is",
   "list_squash",
   "marker_down_choices"
  ],
  "after": [
   "js_dollar_a_generic"
  ],
  "object_name": [
   "js_dollar_g"
  ],
  "js_keyword_false": [
   "js_dollar_i",
   "js_dollar_ie",
   "js_keyword_false"
  ],
  "js_return_empty": [
   "js_dollar_r",
   "js_dollar_rf",
   "js_dollar_rt",
   "js_return_code_replace",
   "js_return_empty"
  ],
  "expressions": [
   "js_dollar_r"
  ],
  "js_return_code_replace": [
   "js_dollar_rf",
   "js_dollar_rt",
   "js_return_code_replace"
  ],
  "null_is": [
   "js_dollar_s",
   "null_is"
  ],
  "list_next_index": [
   "js_dollar_s",
   "list_next_index",
   "marker_functionize"
  ],
  "js_left_right_set": [
   "js_dollar_s",
   "js_if_else_if_combine",
   "js_left_right_set"
  ],
  "name3": [
   "js_dollar_s"
  ],
  "init2": [
   "js_dollar_s"
  ],
  "index_next": [
   "js_dollar_s",
   "list_index_of_delta",
   "list_next"
  ],
  "js_dollar_task_each_code_own_fn": [
   "js_dollar_task_each_code_own_fn"
  ],
  "js_dollar_task_if_else_to_generic": [
   "js_dollar_task_if_else_to_generic"
  ],
  "prettier": [
   "js_format"
  ],
  "parserBabel": [
   "js_format"
  ],
  "format": [
   "js_format"
  ],
  "parser": [
   "js_format"
  ],
  "plugins": [
   "js_format"
  ],
  "braceStyle": [
   "js_format"
  ],
  "types": [
   "js_function_last_asyncify",
   "js_identifier_defineds",
   "js_node_types_is",
   "js_stack_filtered_multiple",
   "js_stack_filtered_multiple_each",
   "js_stack_last_multiple",
   "js_visit_types"
  ],
  "f": [
   "js_function_last_asyncify"
  ],
  "async": [
   "js_function_last_asyncify"
  ],
  "b2": [
   "js_identifiers_to_names"
  ],
  "message2": [
   "js_identifiers_to_names",
   "list_size_1_assert"
  ],
  "js_stack_filtered_multiple_each": [
   "js_identifier_defineds",
   "js_stack_filtered_each",
   "js_stack_filtered_multiple_each"
  ],
  "js_stack_filtered_multiple": [
   "js_identifier_defineds",
   "js_stack_filtered_multiple",
   "js_stack_filtered_multiple_each",
   "js_stack_last_multiple"
  ],
  "js_stack_filtered_each": [
   "js_identifier_defineds",
   "js_stack_filtered_each"
  ],
  "js_stack_filtered": [
   "js_identifier_defineds",
   "js_stack_filtered",
   "js_stack_filtered_each",
   "js_stack_last",
   "js_stack_last_multiple",
   "marker_functionize"
  ],
  "list_adder_multiple": [
   "js_identifier_defineds",
   "list_adder_multiple",
   "marker_functionize"
  ],
  "js_identifier_defineds": [
   "js_identifier_defineds",
   "js_let_add",
   "marker_functionize"
  ],
  "lambda4": [
   "js_identifier_defineds",
   "marker_expand"
  ],
  "bs": [
   "js_identifier_defineds"
  ],
  "list_item": [
   "js_identifier_defineds"
  ],
  "ids": [
   "js_identifier_defineds"
  ],
  "values": [
   "js_identifier_defineds"
  ],
  "lambda5": [
   "js_identifier_defineds"
  ],
  "defineds": [
   "js_identifier_defineds",
   "js_let_add",
   "marker_functionize"
  ],
  "js_node_type_is_assert": [
   "js_identifier_replace",
   "js_node_type_is_assert"
  ],
  "name_from": [
   "js_identifier_replace"
  ],
  "name_to": [
   "js_identifier_replace"
  ],
  "js_keyword_arguments": [
   "js_identifier_unique",
   "js_keyword_arguments"
  ],
  "string_is_assert": [
   "js_identifier_unique",
   "string_is_assert"
  ],
  "used": [
   "js_identifier_unique"
  ],
  "attempt": [
   "js_identifier_unique"
  ],
  "nti": [
   "js_if_blockify_generic",
   "js_node_type_not_is"
  ],
  "nt": [
   "js_if_blockify_generic",
   "js_node_type",
   "marker_enter"
  ],
  "bs_body": [
   "js_if_blockify_generic"
  ],
  "js_node_type_is_if_async": [
   "js_if_else_if_combine",
   "js_node_type_is_if_async"
  ],
  "consequent2": [
   "js_if_else_if_combine"
  ],
  "consequent": [
   "js_if_else_if_combine"
  ],
  "test": [
   "js_if_else_if_combine",
   "sandbox"
  ],
  "test2": [
   "js_if_else_if_combine"
  ],
  "code_expression": [
   "js_if_else_if_combine",
   "js_parse_expression"
  ],
  "specifiers": [
   "js_imports_declarations"
  ],
  "source": [
   "js_imports_declarations"
  ],
  "specifier": [
   "js_imports_declarations"
  ],
  "local": [
   "js_imports_declarations"
  ],
  "both": [
   "js_imports_declarations"
  ],
  "imports_self": [
   "js_imports_missing"
  ],
  "missing": [
   "js_imports_missing",
   "marker_functionize"
  ],
  "js_import_inside": [
   "js_import_inside"
  ],
  "js_import_inside_task_simple": [
   "js_import_inside_task_simple"
  ],
  "js_let_add_task_simple": [
   "js_let_add_task_simple"
  ],
  "js_marker_insert": [
   "js_marker_insert",
   "marker_new",
   "marker_top"
  ],
  "js_marker_name_get": [
   "js_marker_is",
   "js_marker_named",
   "js_marker_name_get",
   "marker_top"
  ],
  "marker_name_actual": [
   "js_marker_is",
   "js_marker_named"
  ],
  "v3": [
   "js_marker_named",
   "js_marker_name_get"
  ],
  "js_marker_named_ast": [
   "js_marker_named_ast",
   "js_marker_named_ast_arg",
   "marker_functionize"
  ],
  "m_name_from": [
   "js_marker_named_ast",
   "marker_functionize",
   "marker_move"
  ],
  "filtered": [
   "js_marker_named_ast",
   "js_stack_filtered",
   "js_stack_filtered_multiple",
   "js_stack_filtered_multiple_each",
   "js_stack_last_multiple",
   "list_all",
   "list_any",
   "list_find"
  ],
  "marker_v": [
   "js_marker_named_ast"
  ],
  "js_marker_named_ast_arg": [
   "js_marker_named_ast_arg",
   "marker_functionize",
   "marker_move"
  ],
  "m_name_to": [
   "js_marker_named_ast_arg",
   "marker_functionize",
   "marker_move"
  ],
  "marker_v_to": [
   "js_marker_named_ast_arg"
  ],
  "a_to": [
   "js_marker_named_ast_arg",
   "marker_functionize",
   "marker_move"
  ],
  "callee": [
   "js_marker_name_get",
   "js_node_atomize",
   "marker_call_replace_generic",
   "marker_expand"
  ],
  "v4": [
   "js_marker_name_get"
  ],
  "v5": [
   "js_marker_name_get"
  ],
  "v6": [
   "js_marker_name_get"
  ],
  "a_first": [
   "js_marker_name_get"
  ],
  "v7": [
   "js_marker_name_get"
  ],
  "variable_name": [
   "js_node_atomize"
  ],
  "ast_callee": [
   "js_node_atomize"
  ],
  "param": [
   "js_node_atomize"
  ],
  "ni": [
   "js_node_is",
   "marker_next_get"
  ],
  "js_node_types_includes": [
   "js_node_types_includes",
   "marker_functionize"
  ],
  "node_type": [
   "js_node_types_includes",
   "js_type"
  ],
  "list_any": [
   "js_node_types_is",
   "js_stack_filtered_multiple",
   "list_any",
   "marker_functionize"
  ],
  "match": [
   "js_node_types_is",
   "log_unparse_try"
  ],
  "init_code": [
   "js_null",
   "marker_assign_replace"
  ],
  "list_filter_property": [
   "js_outside_move",
   "list_filter_property",
   "js_imports_unused"
  ],
  "fds": [
   "js_outside_move"
  ],
  "fd": [
   "js_outside_move"
  ],
  "acorn": [
   "js_parse"
  ],
  "ecmaVersion": [
   "js_parse"
  ],
  "sourceType": [
   "js_parse"
  ],
  "statements": [
   "js_parse_statement"
  ],
  "js_return_on_async": [
   "js_return_atomize",
   "js_return_on_async"
  ],
  "js_return_on": [
   "js_return_atomize",
   "js_return_name",
   "js_return_on",
   "marker_expand"
  ],
  "rs": [
   "js_return_atomize"
  ],
  "identifier_not": [
   "js_return_atomize",
   "js_return_name",
   "js_return_on",
   "js_return_on_async"
  ],
  "replace_to": [
   "js_return_code_replace"
  ],
  "list_last": [
   "js_return_name",
   "js_stack_declaration_asyncify",
   "js_stack_last",
   "js_stack_last_multiple",
   "list_last",
   "list_last_is",
   "list_last_or_null",
   "marker_call",
   "marker_expand",
   "prompt_previous"
  ],
  "list_empty_not_is": [
   "js_return_name",
   "list_any",
   "list_empty_not_is",
   "list_empty_not_is_assert",
   "list_first_second",
   "list_last",
   "marker_expand",
   "marker_top",
   "list_first_remaining",
   "list_first_second_generic"
  ],
  "last": [
   "js_return_name",
   "js_stack_declaration_asyncify",
   "js_stack_last",
   "js_stack_last_multiple",
   "list_last",
   "list_last_is",
   "marker_expand"
  ],
  "identifier_if": [
   "js_return_name",
   "js_return_on",
   "js_return_on_async"
  ],
  "name_argument": [
   "js_return_name"
  ],
  "js_stack_declaration_asyncify": [
   "js_stack_declaration_asyncify",
   "marker_call"
  ],
  "lambda$node": [
   "js_stack_filtered_multiple_each"
  ],
  "list_last_or_null": [
   "js_stack_last_multiple",
   "list_last_or_null"
  ],
  "list_multiple_is": [
   "js_statement_call_get",
   "list_first_second",
   "list_multiple_is",
   "marker_call",
   "marker_call_atomize",
   "marker_call_replace",
   "marker_call_replace_generic",
   "list_first_remaining",
   "list_first_second_generic"
  ],
  "js_statement_call_get": [
   "js_statement_call_get",
   "marker_call_replace_generic",
   "marker_expand"
  ],
  "expression_next": [
   "js_statement_call_get"
  ],
  "code2": [
   "js_statement_return"
  ],
  "types_function": [
   "js_types_function"
  ],
  "js_types_function_includes": [
   "js_types_function_includes",
   "marker_enter"
  ],
  "js_visit_each": [
   "js_unparse",
   "js_visit_each"
  ],
  "js_visit_filter": [
   "js_unparse",
   "js_visit",
   "js_visit_filter"
  ],
  "js_unparse_inner": [
   "js_unparse",
   "js_unparse_inner"
  ],
  "promise_not_is": [
   "js_unparse",
   "js_visit",
   "promise_not_is"
  ],
  "a2": [
   "js_unparse",
   "js_imports_declarations",
   "js_marker_name_get"
  ],
  "a3": [
   "js_unparse",
   "js_imports_declarations",
   "js_marker_name_get"
  ],
  "generate": [
   "js_unparse_inner"
  ],
  "visit_filter": [
   "js_visit",
   "visit",
   "visit_filter"
  ],
  "js_visit_children_get": [
   "js_visit",
   "js_visit_children_get",
   "js_visit_type",
   "js_visit_types"
  ],
  "lambda$v": [
   "js_visit",
   "js_visit_type",
   "js_visit_types"
  ],
  "matches": [
   "js_visit_match"
  ],
  "v_match": [
   "js_visit_match",
   "marker_call_atomize"
  ],
  "on_each": [
   "js_visit_nodes",
   "visit",
   "visit_async",
   "visit_filter",
   "visit_filter_async",
   "visit_filter_recursive",
   "visit_filter_recursive_async",
   "visit_unique_async"
  ],
  "js_visit_types": [
   "js_visit_type",
   "js_visit_types",
   "marker_enter"
  ],
  "push": [
   "list_add",
   "list_add_multiple"
  ],
  "list_adder_generic": [
   "list_adder",
   "list_adder_generic",
   "list_adder_multiple"
  ],
  "lambda$la": [
   "list_adder"
  ],
  "list_adder_inner": [
   "list_adder_async",
   "list_adder_generic"
  ],
  "list_add_multiple": [
   "list_adder_multiple",
   "list_add_multiple",
   "marker_functionize"
  ],
  "original": [
   "list_copy"
  ],
  "list_empty_not_is_assert": [
   "list_empty_not_is_assert",
   "list_last"
  ],
  "object_property_equals_lambda": [
   "list_filter_property",
   "list_find_property",
   "object_property_equals_lambda"
  ],
  "property_value": [
   "list_filter_property",
   "list_find_property",
   "object_property_equals",
   "object_property_equals_lambda"
  ],
  "list_find": [
   "list_find",
   "list_find_property"
  ],
  "undefined_not_is_assert_lambda": [
   "list_get",
   "object_property_get",
   "undefined_not_is_assert_lambda"
  ],
  "object_get": [
   "list_get",
   "object_property_get"
  ],
  "list_index_last": [
   "list_get_end",
   "list_index_is",
   "list_index_last",
   "list_last",
   "marker_bottom"
  ],
  "index_from_end": [
   "list_get_end"
  ],
  "difference": [
   "list_get_end",
   "prompt_previous"
  ],
  "e1": [
   "list_get_end_1"
  ],
  "e2": [
   "list_get_end_2"
  ],
  "index_last": [
   "list_index_is",
   "list_index_last"
  ],
  "indexOf": [
   "list_index_of"
  ],
  "list_index_of_delta": [
   "list_index_of_delta",
   "list_index_of_next",
   "list_index_of_previous"
  ],
  "delta": [
   "list_index_of_delta",
   "list_index_of_next",
   "list_index_of_previous",
   "marker_down",
   "marker_up"
  ],
  "index_previous": [
   "list_index_of_previous",
   "list_previous"
  ],
  "list_insert_generic": [
   "list_insert",
   "list_insert_generic",
   "list_replace"
  ],
  "list_splice": [
   "list_insert",
   "list_insert_generic",
   "list_replace",
   "list_splice"
  ],
  "number_is": [
   "list_insert",
   "list_insert_generic",
   "list_replace",
   "number_is"
  ],
  "delete_count": [
   "list_insert",
   "list_insert_generic",
   "list_replace",
   "list_splice"
  ],
  "Array": [
   "list_is",
   "list_to"
  ],
  "isArray": [
   "list_is"
  ],
  "result2": [
   "list_join_space",
   "server",
   "tasks_run",
   "task_new"
  ],
  "list_last_is": [
   "list_last_is"
  ],
  "map": [
   "list_map"
  ],
  "list_map_index": [
   "list_map_index"
  ],
  "mapper": [
   "list_map_index"
  ],
  "list_map_property_lambda": [
   "list_map_property"
  ],
  "list_map_property_to": [
   "list_map_property_to",
   "marker_down_choices_lambda"
  ],
  "list_not_is": [
   "list_not_is"
  ],
  "list_pop": [
   "list_pop",
   "visit_filter_recursive",
   "visit_filter_recursive_async"
  ],
  "pop": [
   "list_pop"
  ],
  "list_range": [
   "list_range",
   "marker_functionize"
  ],
  "list_remove_at": [
   "list_remove",
   "list_remove_at",
   "marker_delete_above",
   "marker_next_delete"
  ],
  "splice": [
   "list_remove_at",
   "list_splice"
  ],
  "list_replace": [
   "list_replace",
   "list_swap"
  ],
  "reverse": [
   "list_reverse"
  ],
  "length": [
   "list_size",
   "string_size"
  ],
  "string_to": [
   "list_size_1_assert",
   "list_size_1_assert_message",
   "marker_first",
   "marker_top",
   "string_to"
  ],
  "skipped": [
   "list_skip",
   "string_prefix_without",
   "string_skip",
   "list_skip_1"
  ],
  "slice": [
   "list_slice",
   "string_slice"
  ],
  "end": [
   "list_slice_end"
  ],
  "start": [
   "list_slice_end"
  ],
  "va": [
   "list_sort_number_mapper"
  ],
  "vb": [
   "list_sort_number_mapper"
  ],
  "sort": [
   "list_sort_number_mapper",
   "list_sort_string"
  ],
  "list_process": [
   "list_squash"
  ],
  "squashed": [
   "list_squash"
  ],
  "ai": [
   "list_swap"
  ],
  "bi": [
   "list_swap"
  ],
  "all": [
   "list_wait"
  ],
  "console": [
   "log_keep"
  ],
  "marker_index": [
   "marker_above",
   "marker_delete_above",
   "marker_index"
  ],
  "marker_above": [
   "marker_above"
  ],
  "marker_assign_replace": [
   "marker_assign_replace",
   "marker_assign_replace_string"
  ],
  "marker_assign_replace_string": [
   "marker_assign_replace_string"
  ],
  "marker_down_generic": [
   "marker_bottom",
   "marker_down",
   "marker_down_generic",
   "marker_up"
  ],
  "marker_bottom": [
   "marker_bottom"
  ],
  "delta_get": [
   "marker_bottom",
   "marker_down",
   "marker_down_generic",
   "marker_up"
  ],
  "choices": [
   "marker_bottom",
   "marker_down_choices",
   "marker_down_choices_lambda",
   "marker_down_generic"
  ],
  "marker_call": [
   "marker_call"
  ],
  "marker_call_replace_generic": [
   "marker_call_atomize",
   "marker_call_replace",
   "marker_call_replace_generic"
  ],
  "marker_call_atomize": [
   "marker_call_atomize"
  ],
  "replaced": [
   "marker_call_atomize",
   "marker_call_replace",
   "marker_call_replace_generic"
  ],
  "marker_call_replace": [
   "marker_call_replace"
  ],
  "code_replacement": [
   "marker_call_replace"
  ],
  "arg_index": [
   "marker_call_replace_generic"
  ],
  "arg_index_at": [
   "marker_call_replace_generic"
  ],
  "name_marker": [
   "marker_current_set"
  ],
  "marker_previous_index": [
   "marker_delete_above",
   "marker_functionize",
   "marker_previous_index"
  ],
  "marker_delete_above": [
   "marker_delete_above"
  ],
  "marker_down": [
   "marker_down"
  ],
  "marker_down_choices": [
   "marker_down_choices"
  ],
  "nodes": [
   "marker_down_choices"
  ],
  "index_new": [
   "marker_down_generic"
  ],
  "marker_enter": [
   "marker_enter"
  ],
  "marker_expand": [
   "marker_expand"
  ],
  "a_names": [
   "marker_expand"
  ],
  "intesection": [
   "marker_expand"
  ],
  "a_name": [
   "marker_expand"
  ],
  "marker_first_index": [
   "marker_first",
   "marker_first_index",
   "marker_top"
  ],
  "index_value": [
   "marker_first"
  ],
  "marker_functionize": [
   "marker_functionize"
  ],
  "a_from": [
   "marker_functionize",
   "marker_move"
  ],
  "index_from": [
   "marker_functionize"
  ],
  "index_to": [
   "marker_functionize"
  ],
  "stack2_from": [
   "marker_functionize",
   "marker_move"
  ],
  "stack2_to": [
   "marker_functionize",
   "marker_move"
  ],
  "marker_move": [
   "marker_move"
  ],
  "marker_new": [
   "marker_new"
  ],
  "marker_next": [
   "marker_next"
  ],
  "marker_next_delete": [
   "marker_next_delete"
  ],
  "to2": [
   "marker_next_get"
  ],
  "marker_remove": [
   "marker_remove",
   "marker_remove_marker_top"
  ],
  "marker_remove_marker_top": [
   "marker_remove_marker_top"
  ],
  "name_next": [
   "marker_top"
  ],
  "newFunction": [
   "newFunction"
  ],
  "package_name": [
   "npm_install"
  ],
  "isFinite": [
   "number_is"
  ],
  "obj": [
   "object_properties",
   "object_properties_delete"
  ],
  "Object": [
   "object_properties",
   "object_property_exists"
  ],
  "getOwnPropertyNames": [
   "object_properties"
  ],
  "object_properties_delete": [
   "object_properties_delete",
   "object_replace"
  ],
  "undefined_is": [
   "object_property_delete",
   "object_property_get",
   "undefined_is",
   "undefined_not_is_assert_lambda"
  ],
  "hasOwn": [
   "object_property_exists"
  ],
  "list_of_segments": [
   "path_join"
  ],
  "then": [
   "promise_is"
  ],
  "catch": [
   "promise_is"
  ],
  "prompt_previous": [
   "prompt_previous"
  ],
  "sandbox": [
   "sandbox"
  ],
  "value_get": [
   "search_generic",
   "list_first_second",
   "list_first_remaining",
   "data_boolean_set",
   "lambda_get",
   "list_first_second_generic"
  ],
  "terms": [
   "search_generic"
  ],
  "term": [
   "search_generic"
  ],
  "f_names_search": [
   "search_generic"
  ],
  "express": [
   "server"
  ],
  "server": [
   "server"
  ],
  "app": [
   "server"
  ],
  "port": [
   "server"
  ],
  "static": [
   "server"
  ],
  "use": [
   "server"
  ],
  "listen": [
   "server"
  ],
  "endsWith": [
   "string_ends_with"
  ],
  "string_is_assert_json": [
   "string_includes",
   "string_is_assert_json"
  ],
  "string_is_assert_message": [
   "string_includes",
   "string_is_assert_json",
   "string_is_assert_message"
  ],
  "string": [
   "string_includes"
  ],
  "string_pad": [
   "string_pad",
   "tasks_run"
  ],
  "padding": [
   "string_pad"
  ],
  "padded": [
   "string_pad"
  ],
  "string_skip": [
   "string_prefix_without",
   "string_skip"
  ],
  "startsWith": [
   "string_starts_with"
  ],
  "changed": [
   "string_suffix_change"
  ],
  "toString": [
   "string_to"
  ],
  "task_function_name_part": [
   "tasks_run",
   "task_function_name_part",
   "task_new"
  ],
  "tasks_run": [
   "tasks_run"
  ],
  "result3": [
   "tasks_run"
  ],
  "f_name_task": [
   "task_new"
  ],
  "task_new_simple": [
   "task_new_simple"
  ],
  "tautology": [
   "tautology",
   "visit",
   "visit_async"
  ],
  "undefined": [
   "undefined"
  ],
  "visit": [
   "visit"
  ],
  "children_get": [
   "visit",
   "visit_async",
   "visit_filter",
   "visit_filter_async",
   "visit_filter_recursive",
   "visit_filter_recursive_async",
   "visit_unique_async"
  ],
  "visit_filter_async": [
   "visit_async",
   "visit_filter_async"
  ],
  "visit_async": [
   "visit_async",
   "visit_unique_async"
  ],
  "visit_filter_recursive": [
   "visit_filter",
   "visit_filter_recursive"
  ],
  "visit_filter_recursive_async": [
   "visit_filter_async",
   "visit_filter_recursive_async"
  ],
  "children": [
   "visit_filter_recursive",
   "visit_filter_recursive_async",
   "visit_unique_async"
  ],
  "c": [
   "visit_filter_recursive",
   "visit_filter_recursive_async",
   "counter",
   "js_identifiers_named_count"
  ],
  "found": [
   "visit_unique_async"
  ],
  "functions_paths": [
   "data_files_update",
   "functions_paths"
  ],
  "data_identifiers_search": [
   "data_identifiers_search"
  ],
  "js_imports_unused": [
   "js_imports_unused",
   "js_imports_unused_remove",
   "js_imports_fix"
  ],
  "counter": [
   "counter",
   "js_imports_unused",
   "js_identifiers_named_count"
  ],
  "lambda$c": [
   "counter"
  ],
  "count_import": [
   "js_imports_unused",
   "js_identifiers_named_count"
  ],
  "js_identifiers_named_count": [
   "js_imports_unused",
   "js_identifiers_named_count"
  ],
  "js_imports_declarations": [
   "js_imports_declarations",
   "js_imports",
   "js_imports_unused"
  ],
  "imports_declarations": [
   "js_imports"
  ],
  "list_first_remaining": [
   "list_first_remaining",
   "js_dollar_g"
  ],
  "list_skip_1": [
   "list_first_remaining",
   "list_skip_1"
  ],
  "list_first_second_generic": [
   "list_first_second",
   "list_first_remaining",
   "list_first_second_generic"
  ],
  "property_names": [
   "js_dollar_g"
  ],
  "count_declaration": [
   "js_imports_unused"
  ],
  "unused": [
   "js_imports_unused",
   "js_imports_unused_remove",
   "js_imports_fix"
  ],
  "js_imports_unused_remove": [
   "js_imports_unused_remove",
   "function_imports_fix"
  ],
  "unuseds": [
   "js_imports_unused",
   "js_imports_unused_remove",
   "js_imports_fix"
  ],
  "function_imports_fix": [
   "function_imports_fix"
  ],
  "js_imports_fix": [
   "js_imports_fix",
   "js_outside_move"
  ],
  "data_set": [
   "data_boolean_set",
   "git_push",
   "data_set"
  ],
  "date_now_iso": [
   "git_acp_timestamp",
   "date_now_iso"
  ],
  "date_now": [
   "date_now_iso",
   "date_now",
   "git_push"
  ],
  "now_iso": [
   "date_now_iso",
   "git_push"
  ],
  "now": [
   "date_now",
   "date_now_iso",
   "git_push",
   "date_diff_hours",
   "date_diff_ms"
  ],
  "Date": [
   "date_now",
   "date_to"
  ],
  "before_iso": [
   "git_push",
   "date_to"
  ],
  "date_iso_to": [
   "date_now_iso",
   "git_push",
   "date_iso_to"
  ],
  "before": [
   "git_push",
   "date_diff_hours",
   "date_diff_ms"
  ],
  "date_to": [
   "git_push",
   "date_to"
  ],
  "lambda_get": [
   "git_push",
   "lambda_get"
  ],
  "hours": [
   "git_push",
   "date_diff_hours"
  ],
  "date_diff_hours": [
   "git_push",
   "date_diff_hours"
  ],
  "data_file_update_inner": [
   "data_file_update",
   "data_files_update",
   "data_file_update_inner"
  ],
  "parseds": [
   "data_files_update"
  ],
  "f_identifiers_new": [
   "data_file_update_inner"
  ],
  "functions": [
   "data_file_update_inner"
  ],
  "f_this": [
   "data_file_update_inner"
  ],
  "f_identifiers_old": [
   "data_file_update_inner"
  ],
  "date_ms_to_hours": [
   "date_diff_hours",
   "date_ms_to_hours"
  ],
  "date_diff_ms": [
   "date_diff_hours",
   "date_diff_ms"
  ],
  "ms": [
   "date_diff_hours",
   "date_ms_to_hours"
  ],
  "Math": [
   "date_diff_ms"
  ],
  "abs": [
   "date_diff_ms"
  ],
  "toISOString": [
   "date_iso_to"
  ],
  "log_error": [
   "function_run_prompt",
   "log_error"
  ],
  "js_call_function_if": [
   "js_node_atomize",
   "js_await_add"
  ],
  "marker_leave": [
   "marker_leave"
  ],
  "stack4": [
   "marker_leave"
  ],
  "stack5": [
   "marker_leave"
  ],
  "a4": [
   "js_marker_name_get"
  ],
  "a5": [
   "js_marker_name_get"
  ],
  "marker_up": [
   "marker_up"
  ]
 },
 "functions": {
  "data_file_update": {
   "identifiers": [
    "file_js_parse",
    "data_file_update_inner",
    "data_save",
    "data_all",
    "marker",
    "data_file_update",
    "f_path",
    "d",
    "parsed"
   ],
   "async": true
  },
  "watch": {
   "identifiers": [
    "error",
    "error_attention_set",
    "command_line_node_g",
    "marker",
    "object_property_exists_equals",
    "catch_log_async",
    "function_auto_path",
    "functions_path",
    "import_install",
    "data_file_update",
    "object_property_set",
    "json_format_to",
    "watch",
    "chokidar",
    "default",
    "joined",
    "watcher",
    "persistent",
    "ignoreInitial",
    "in_progress",
    "lambda2",
    "path",
    "lambda",
    "value",
    "name",
    "args",
    "f_name",
    "on"
   ],
   "async": true
  },
  "function_run_prompt": {
   "identifiers": [
    "log_error",
    "null_not_is",
    "data_property_get",
    "chalk_green",
    "function_run_line_git",
    "command_line_read",
    "json_format_to",
    "function_run_prompt",
    "property_name",
    "ea",
    "nn",
    "prompt",
    "prompt_colored",
    "line"
   ],
   "async": true
  },
  "chalk_green": {
   "identifiers": [
    "chalk_color",
    "object_property_get",
    "import_install",
    "chalk_green",
    "prompt",
    "color",
    "v"
   ],
   "async": true
  },
  "chalk_red": {
   "identifiers": [
    "marker",
    "chalk_color",
    "object_property_get",
    "import_install",
    "chalk_red",
    "prompt",
    "color",
    "colored"
   ],
   "async": true
  },
  "chalk_color": {
   "identifiers": [
    "object_property_get",
    "import_install",
    "chalk_color",
    "color",
    "prompt",
    "chalk",
    "default",
    "fn",
    "colored"
   ],
   "async": true
  },
  "error_attention_set": {
   "identifiers": [
    "data_transform",
    "error_attention_set",
    "value",
    "lambda3",
    "previous",
    "value2"
   ],
   "async": true
  },
  "function_watch_suffix_change": {
   "identifiers": [
    "marker",
    "function_name_unalias",
    "function_name_combine",
    "function_wrap",
    "function_watch_suffix_change",
    "f_name",
    "suffix",
    "unaliased",
    "f_name_wrapped",
    "v"
   ]
  },
  "function_watch_ending_change": {
   "identifiers": [
    "string_suffix_change",
    "string_suffix_without",
    "marker",
    "function_name_unalias",
    "function_name_combine",
    "function_wrap",
    "function_watch_ending_change",
    "f_name",
    "ending_old",
    "ending_new",
    "unaliased",
    "f_name_new",
    "v"
   ],
   "async": true
  },
  "string_suffix_without": {
   "identifiers": [
    "not",
    "string_ends_with",
    "error",
    "string_slice",
    "string_size",
    "string_suffix_without",
    "s",
    "suffix",
    "a",
    "without"
   ],
   "async": false
  },
  "error_attention_clear": {
   "identifiers": [
    "error_attention_set",
    "marker",
    "error_attention_clear",
    "v"
   ],
   "async": true
  },
  "functions_names": {
   "identifiers": [
    "functions_path",
    "folder_read",
    "function_name_extension",
    "string_suffix_without",
    "list_map",
    "functions_names",
    "paths",
    "f_names",
    "p"
   ],
   "async": false
  },
  "folder_read": {
   "identifiers": [
    "path_join",
    "fs",
    "folder_read",
    "dirPath",
    "lambda",
    "file",
    "result",
    "v",
    "statSync",
    "isFile",
    "v2",
    "readdirSync",
    "filter"
   ],
   "async": false
  },
  "data_file_update_all": {
   "identifiers": [
    "data_file_update",
    "marker",
    "data_file_update_all",
    "f_path",
    "v"
   ]
  },
  "data_files_update": {
   "identifiers": [
    "file_js_parse",
    "list_map_unordered_async",
    "data_save",
    "data_file_update_inner",
    "data_all",
    "functions_paths",
    "each_async",
    "data_files_update",
    "d",
    "f_paths",
    "parseds",
    "lambda",
    "parsed"
   ],
   "async": true
  },
  "assert": {
   "identifiers": [
    "error",
    "assert",
    "b"
   ],
   "async": false
  },
  "assert_file_exists_not": {
   "identifiers": [
    "error",
    "file_exists",
    "assert_file_exists_not",
    "file_path_new"
   ],
   "async": true
  },
  "assert_json": {
   "identifiers": [
    "assert_message",
    "json_to",
    "assert_json",
    "b",
    "o",
    "message"
   ],
   "async": false
  },
  "assert_message": {
   "identifiers": [
    "error",
    "assert_message",
    "b",
    "message"
   ],
   "async": false
  },
  "assert_not": {
   "identifiers": [
    "error",
    "assert_not",
    "b"
   ],
   "async": false
  },
  "catch_ignore": {
   "identifiers": [
    "catch_ignore",
    "lambda",
    "e"
   ],
   "async": false
  },
  "catch_ignore_async": {
   "identifiers": [
    "catch_ignore_async",
    "lambda",
    "e"
   ],
   "async": true
  },
  "catch_log": {
   "identifiers": [
    "log",
    "log_keep",
    "catch_log",
    "lambda",
    "e"
   ],
   "async": false
  },
  "catch_log_async": {
   "identifiers": [
    "identity",
    "log",
    "log_keep",
    "catch_log_async",
    "lambda",
    "message_get",
    "e",
    "message"
   ],
   "async": true
  },
  "catch_only_async": {
   "identifiers": [
    "json_to",
    "log",
    "catch_only_async",
    "lambda",
    "message_fragment",
    "e",
    "json",
    "message",
    "includes"
   ],
   "async": true
  },
  "clipboard_copy": {
   "identifiers": [
    "clipboard_copy",
    "text",
    "clipboard",
    "default",
    "write"
   ],
   "async": true
  },
  "command_line": {
   "identifiers": [
    "exec",
    "promisify",
    "execAsync",
    "command_line",
    "command",
    "stdout",
    "encoding"
   ],
   "async": true
  },
  "command_line_git": {
   "identifiers": [
    "command_line_git_prefix",
    "command_line",
    "command_line_git",
    "command_git"
   ],
   "async": true
  },
  "command_line_git_prefix": {
   "identifiers": [
    "command_line_git_prefix"
   ],
   "async": false
  },
  "command_line_node_g": {
   "identifiers": [
    "log_keep",
    "command_line",
    "list_join_space",
    "command_line_node_g",
    "f_name",
    "args",
    "result",
    "output"
   ],
   "async": true
  },
  "command_line_read": {
   "identifiers": [
    "readline",
    "command_line_read",
    "prompt",
    "Promise",
    "resolve",
    "rl",
    "createInterface",
    "input",
    "process",
    "stdin",
    "output",
    "stdout",
    "question",
    "answer",
    "close"
   ],
   "async": true
  },
  "command_line_schtasks": {
   "identifiers": [
    "command_line",
    "command_line_schtasks",
    "command",
    "prefixed",
    "stdout"
   ],
   "async": true
  },
  "data_all": {
   "identifiers": [
    "file_read_json",
    "data_all",
    "file_path",
    "data"
   ],
   "async": true
  },
  "data_boolean_set": {
   "identifiers": [
    "data_set",
    "data_boolean_set",
    "property_name",
    "value",
    "value_get",
    "previous",
    "v"
   ],
   "async": true
  },
  "data_function_current_get": {
   "identifiers": [
    "data_property_get",
    "object_property_get",
    "data_get",
    "data_function_current_get",
    "property_name",
    "f_name_current"
   ],
   "async": true
  },
  "data_get": {
   "identifiers": [
    "data_all",
    "object_property_initialize",
    "file_read_json",
    "data_get",
    "property_name",
    "value_initial",
    "data",
    "file_path",
    "value"
   ],
   "async": true
  },
  "data_marker_current_get": {
   "identifiers": [
    "data_property_get",
    "object_property_get",
    "data_get",
    "data_marker_current_get",
    "property_name",
    "f_name"
   ],
   "async": true
  },
  "data_prompts": {
   "identifiers": [
    "log",
    "list_slice_end",
    "data_value",
    "list_size",
    "list_slice",
    "data_prompts",
    "prompts",
    "offset"
   ],
   "async": true
  },
  "data_property_get": {
   "identifiers": [
    "object_property_get",
    "data_get",
    "data_property_get",
    "property_name",
    "d",
    "data",
    "value"
   ],
   "async": true
  },
  "data_property_new": {
   "identifiers": [
    "data_property_new"
   ],
   "async": false
  },
  "data_save": {
   "identifiers": [
    "file_overwrite_json",
    "data_save",
    "a",
    "file_path",
    "data"
   ],
   "async": true
  },
  "data_terminal_get": {
   "identifiers": [
    "marker",
    "data_property_get",
    "object_property_get",
    "data_get",
    "data_terminal_get",
    "property_name",
    "w"
   ],
   "async": true
  },
  "data_terminal_set": {
   "identifiers": [
    "marker",
    "data_boolean_set",
    "function_exists",
    "assert",
    "marker_first",
    "marker_current_set",
    "data_transform",
    "data_terminal_set",
    "v",
    "property_name"
   ],
   "async": true
  },
  "data_transform": {
   "identifiers": [
    "data_save",
    "object_property_set",
    "data_get",
    "data_transform",
    "property_name",
    "value_initial",
    "lambda$previous",
    "d",
    "data",
    "value",
    "value_previous"
   ],
   "async": true
  },
  "data_value": {
   "identifiers": [
    "object_property_get",
    "data_all",
    "object_property_initialize",
    "file_read_json",
    "data_value",
    "property_name",
    "data",
    "value"
   ],
   "async": true
  },
  "data_watch_get": {
   "identifiers": [
    "data_property_get",
    "object_property_get",
    "data_get",
    "data_watch_get",
    "property_name",
    "w"
   ],
   "async": true
  },
  "data_watch_set": {
   "identifiers": [
    "data_boolean_set",
    "function_exists",
    "assert",
    "marker_first",
    "marker_current_set",
    "data_transform",
    "data_watch_set",
    "v",
    "property_name"
   ],
   "async": true
  },
  "data_watch_set_task_add_return": {
   "identifiers": [
    "todo",
    "data_watch_set_task_add_return"
   ],
   "async": false
  },
  "each": {
   "identifiers": [
    "each",
    "list",
    "lambda$item",
    "item"
   ],
   "async": false
  },
  "each_async": {
   "identifiers": [
    "each_async",
    "list",
    "lambda$item",
    "item"
   ],
   "async": true
  },
  "each_index": {
   "identifiers": [
    "each",
    "each_index",
    "list",
    "lambda",
    "index",
    "item"
   ],
   "async": false
  },
  "each_multiple": {
   "identifiers": [
    "lists_get",
    "each_index",
    "list_first",
    "each_multiple",
    "lists",
    "lambda",
    "first",
    "item",
    "index",
    "items"
   ],
   "async": false
  },
  "each_object": {
   "identifiers": [
    "each",
    "object_properties",
    "object_property_get",
    "each_object",
    "object",
    "lambda",
    "p",
    "value"
   ],
   "async": false
  },
  "each_pair": {
   "identifiers": [
    "each_multiple",
    "each_pair",
    "list_a",
    "list_b",
    "lambda3",
    "lists",
    "lambda",
    "items",
    "a",
    "b"
   ],
   "async": false
  },
  "each_range": {
   "identifiers": [
    "range",
    "each",
    "each_range",
    "count",
    "lambda"
   ],
   "async": false
  },
  "each_reverse": {
   "identifiers": [
    "each",
    "list_copy_reverse",
    "each_reverse",
    "list",
    "lambda",
    "reversed"
   ],
   "async": false
  },
  "equal": {
   "identifiers": [
    "equal",
    "left",
    "right",
    "eq"
   ],
   "async": false
  },
  "equal_by": {
   "identifiers": [
    "equal",
    "equal_by",
    "a",
    "b",
    "lambda$item",
    "left",
    "right",
    "eq"
   ],
   "async": false
  },
  "equal_by_async": {
   "identifiers": [
    "equal_by_async",
    "a",
    "b",
    "lambda$item",
    "eq"
   ],
   "async": true
  },
  "equal_not": {
   "identifiers": [
    "equal",
    "marker",
    "equal_not",
    "left",
    "right",
    "ne"
   ],
   "async": false
  },
  "error": {
   "identifiers": [
    "error",
    "message",
    "Error"
   ],
   "async": false
  },
  "error_json": {
   "identifiers": [
    "error",
    "json_format_to",
    "error_json",
    "o",
    "message"
   ],
   "async": false
  },
  "exit": {
   "identifiers": [
    "log_keep",
    "marker",
    "exit",
    "process"
   ],
   "async": false
  },
  "file_copy": {
   "identifiers": [
    "assert_file_exists_not",
    "file_copy",
    "file_path_old",
    "file_path_new",
    "fs",
    "promises",
    "copyFile"
   ],
   "async": true
  },
  "file_delete": {
   "identifiers": [
    "file_delete",
    "file_path",
    "fs",
    "promises",
    "unlink"
   ],
   "async": true
  },
  "file_exists": {
   "identifiers": [
    "throws_not_async",
    "error",
    "log",
    "promise_is",
    "string_is",
    "file_exists",
    "file_path",
    "fs",
    "access",
    "promises",
    "constants",
    "success",
    "lambda",
    "F_OK"
   ],
   "async": true
  },
  "file_js_parse": {
   "identifiers": [
    "file_read",
    "js_parse",
    "file_js_parse",
    "f_path",
    "code",
    "ast",
    "parsed"
   ],
   "async": true
  },
  "file_js_unparse": {
   "identifiers": [
    "log",
    "file_overwrite",
    "js_unparse",
    "js_format",
    "file_js_unparse",
    "parsed",
    "f_path",
    "ast",
    "code",
    "code_unparsed",
    "code_new"
   ],
   "async": true
  },
  "file_name_html": {
   "identifiers": [
    "file_name_html",
    "name"
   ],
   "async": false
  },
  "file_open": {
   "identifiers": [
    "function_current_set",
    "function_path_declaration_unparse",
    "function_parse_declaration_js_unparse",
    "function_path_to_name",
    "function_name_extension",
    "string_ends_with",
    "file_open_editor",
    "marker",
    "command_line",
    "file_read",
    "log",
    "log_keep",
    "data_terminal_get",
    "file_open",
    "f_path",
    "terminal",
    "ext",
    "ew",
    "output"
   ],
   "async": true
  },
  "file_open_editor": {
   "identifiers": [
    "command_line",
    "file_open_editor",
    "filePath"
   ],
   "async": true
  },
  "file_overwrite": {
   "identifiers": [
    "file_overwrite",
    "file_path",
    "contents",
    "fs",
    "promises",
    "writeFile"
   ],
   "async": true
  },
  "file_overwrite_json": {
   "identifiers": [
    "file_overwrite",
    "json_format_to",
    "json_to",
    "file_overwrite_json",
    "file_path",
    "object",
    "json"
   ],
   "async": true
  },
  "file_read": {
   "identifiers": [
    "file_read",
    "file_path",
    "fs",
    "promises",
    "readFile"
   ],
   "async": true
  },
  "file_read_json": {
   "identifiers": [
    "file_read",
    "json_from",
    "file_read_json",
    "file_path",
    "json",
    "data"
   ],
   "async": true
  },
  "file_write": {
   "identifiers": [
    "file_overwrite",
    "assert_file_exists_not",
    "file_write",
    "f_path",
    "contents"
   ],
   "async": true
  },
  "folder_current": {
   "identifiers": [
    "folder_current",
    "current"
   ],
   "async": false
  },
  "folder_current_join": {
   "identifiers": [
    "path_join",
    "folder_current",
    "folder_current_join",
    "result",
    "current",
    "value_string"
   ],
   "async": false
  },
  "folder_public": {
   "identifiers": [
    "folder_public"
   ],
   "async": false
  },
  "folder_public_combine": {
   "identifiers": [
    "folder_public",
    "path_join",
    "folder_public_combine",
    "second"
   ],
   "async": false
  },
  "functions_combine": {
   "identifiers": [
    "list_to",
    "list_size_1_assert",
    "list_size_1",
    "assert",
    "list_size",
    "log",
    "js_auto",
    "js_visit_match",
    "functions_combine_name",
    "js_function_last_asyncify",
    "object_property_get",
    "function_name_unalias",
    "list_map_unordered_async",
    "list_map",
    "list_add",
    "js_declaration_single_block_blody",
    "js_parse_statement",
    "each_async",
    "function_parse_declaration",
    "js_code_call_args_await_maybe",
    "function_name_combine_multiple",
    "function_new_transform",
    "string_split_comma",
    "string_split",
    "js_parse_expression",
    "functions_combine",
    "f_names_comma",
    "list",
    "arguments",
    "f_names",
    "combined",
    "lambda2",
    "ast",
    "body_block",
    "lambda",
    "f_name",
    "item"
   ],
   "async": true
  },
  "functions_combine_name": {
   "identifiers": [
    "list_map_property",
    "log",
    "function_name_combine_multiple",
    "function_name_unalias",
    "list_map_unordered_async",
    "string_split_comma",
    "functions_combine_name",
    "f_names_comma",
    "split",
    "results",
    "f_names",
    "combined",
    "v"
   ],
   "async": true
  },
  "functions_combine_test": {
   "identifiers": [
    "list_join_comma",
    "functions_combine",
    "function_delete_if_exists",
    "functions_combine_name",
    "list_map_name",
    "list_join",
    "functions_combine_test",
    "list",
    "names",
    "f_names_comma",
    "combined"
   ],
   "async": true
  },
  "functions_format": {
   "identifiers": [
    "list_wait",
    "function_format",
    "functions_names",
    "list_map",
    "functions_format",
    "mapped"
   ],
   "async": true
  },
  "functions_names_includes": {
   "identifiers": [
    "list_includes",
    "functions_names",
    "functions_names_includes",
    "name",
    "list",
    "valid"
   ],
   "async": false
  },
  "functions_path": {
   "identifiers": [
    "folder_public_combine",
    "path_join",
    "folder_public",
    "functions_path",
    "second",
    "joined"
   ],
   "async": false
  },
  "functions_search": {
   "identifiers": [
    "search_generic",
    "list_all",
    "string_split",
    "function_name_to_path",
    "each_async",
    "object_property_set",
    "each",
    "string_includes",
    "list_filter",
    "functions_names",
    "function_name_to_path_unalias",
    "functions_search",
    "search",
    "f_names",
    "result"
   ],
   "async": true
  },
  "functions_search_open": {
   "identifiers": [
    "functions_search",
    "function_open",
    "functions_names",
    "list_single",
    "object_properties",
    "functions_search_open",
    "search",
    "result",
    "properties",
    "f_name"
   ],
   "async": true
  },
  "function_acronym_to_name": {
   "identifiers": [
    "list_single",
    "list_size_1",
    "object_property_get",
    "object_property_exists",
    "function_names_to_acronyms",
    "log",
    "function_acronym_to_name",
    "alias",
    "expanded",
    "expandeds",
    "acronyms",
    "exists2",
    "s1",
    "v"
   ],
   "async": false
  },
  "function_acronym_to_names": {
   "identifiers": [
    "object_property_get",
    "function_names_to_acronyms",
    "function_acronym_to_names",
    "acronym",
    "acronyms",
    "list"
   ],
   "async": false
  },
  "function_aliases": {
   "identifiers": [
    "function_alias_generic",
    "error",
    "object_property_set",
    "function_alias_add_generic",
    "file_overwrite_json",
    "function_aliases",
    "a",
    "aliases"
   ],
   "async": true
  },
  "function_aliases_inverted": {
   "identifiers": [
    "object_invert",
    "function_aliases",
    "function_aliases_inverted",
    "aliases",
    "inverted"
   ],
   "async": true
  },
  "function_aliases_search": {
   "identifiers": [
    "search_generic",
    "function_aliases_inverted",
    "object_properties",
    "object_property_get",
    "function_aliases_search",
    "search",
    "names_to_aliases",
    "names",
    "result",
    "n"
   ],
   "async": true
  },
  "function_alias_add": {
   "identifiers": [
    "list_sort_string_size",
    "list_sort_number_mapper",
    "list_sort_string",
    "function_alias_generic",
    "error",
    "object_property_set",
    "function_alias_add_generic",
    "file_overwrite_json",
    "string_size",
    "function_alias_add",
    "first",
    "second",
    "list",
    "alias",
    "f_name",
    "lambda",
    "a",
    "exists",
    "aliases",
    "unaliased"
   ],
   "async": true
  },
  "function_alias_add_generic": {
   "identifiers": [
    "function_acronym_to_name",
    "function_names_to_acronyms",
    "data_get",
    "object_property_initialize",
    "object_property_exists",
    "object_property_get",
    "file_read_json",
    "list_single",
    "list_size_1",
    "log",
    "function_alias_add_generic",
    "alias",
    "unaliased",
    "value",
    "aliases",
    "file_path",
    "data",
    "exists"
   ],
   "async": true
  },
  "function_alias_change": {
   "identifiers": [
    "function_alias_generic",
    "object_property_delete",
    "error",
    "object_property_set",
    "function_alias_add_generic",
    "file_overwrite_json",
    "function_alias_change",
    "alias_old",
    "alias_new",
    "lambda",
    "a",
    "exists",
    "aliases",
    "unaliased"
   ],
   "async": true
  },
  "function_alias_delete": {
   "identifiers": [
    "function_alias_generic",
    "object_property_delete",
    "error",
    "object_property_set",
    "function_alias_add_generic",
    "file_overwrite_json",
    "function_alias_delete",
    "alias_old",
    "lambda",
    "a",
    "exists",
    "aliases"
   ],
   "async": true
  },
  "function_alias_generic": {
   "identifiers": [
    "data_save",
    "error",
    "object_property_set",
    "function_alias_add_generic",
    "file_overwrite_json",
    "function_alias_generic",
    "alias",
    "lambda",
    "a"
   ],
   "async": true
  },
  "function_alias_replace": {
   "identifiers": [
    "function_alias_generic",
    "object_property_delete",
    "error",
    "object_property_set",
    "function_alias_add_generic",
    "file_overwrite_json",
    "function_alias_replace",
    "alias_old",
    "f_name",
    "lambda",
    "a",
    "exists",
    "aliases"
   ],
   "async": true
  },
  "function_auto": {
   "identifiers": [
    "js_auto",
    "js_let_add",
    "js_atomize_function",
    "js_function_id_add",
    "js_arrow_to_function",
    "js_declare_assign_null",
    "js_call_fill",
    "js_dollar",
    "js_atomize",
    "js_outside_move",
    "log",
    "js_imports_missing_add",
    "function_transform",
    "marker",
    "each",
    "each_async",
    "js_arrow_blockify",
    "function_auto",
    "f_name"
   ],
   "async": true
  },
  "function_auto_path": {
   "identifiers": [
    "function_path_to_name",
    "path_name",
    "function_auto",
    "function_auto_path",
    "f_path",
    "f_name",
    "v"
   ],
   "async": true
  },
  "function_copy": {
   "identifiers": [
    "function_current_set",
    "js_identifier_replace",
    "function_transform",
    "marker",
    "file_copy",
    "function_name_to_path_unalias",
    "file_open",
    "function_copy",
    "f_name_old",
    "f_name_new",
    "f_path",
    "f_path_old",
    "unaliased",
    "unaliased_old",
    "f_path_new",
    "unaliased_new",
    "lambda",
    "ast"
   ],
   "async": true
  },
  "function_copy_suffix_add": {
   "identifiers": [
    "function_name_unalias",
    "function_name_combine",
    "function_copy",
    "function_copy_suffix_add",
    "f_name_old",
    "suffix",
    "unaliased",
    "combined",
    "v"
   ],
   "async": true
  },
  "function_current_declaration_code": {
   "identifiers": [
    "data_function_current_get",
    "function_parse_declaration_js_unparse",
    "function_current_declaration_code",
    "f_name_current",
    "v"
   ],
   "async": true
  },
  "function_current_set": {
   "identifiers": [
    "marker",
    "log",
    "marker_top",
    "function_parse_declaration_js_unparse",
    "function_exists",
    "assert",
    "marker_first",
    "marker_current_set",
    "data_transform",
    "function_current_set",
    "f_name",
    "exists",
    "unaliased",
    "lambda",
    "previous",
    "name",
    "v"
   ],
   "async": true
  },
  "function_current_set_task_new": {
   "identifiers": [
    "task_new",
    "function_current_set",
    "function_current_set_task_new",
    "f_name",
    "task_name"
   ],
   "async": true
  },
  "function_current_set_task_new_simple": {
   "identifiers": [
    "function_current_set_task_new",
    "function_current_set_task_new_simple",
    "f_name"
   ],
   "async": true
  },
  "function_delete": {
   "identifiers": [
    "js_code_declaration",
    "file_write",
    "assert_file_exists_not",
    "function_open",
    "js_code_call",
    "file_overwrite",
    "function_name_to_path",
    "file_open",
    "file_delete",
    "function_delete",
    "f_name",
    "f_path"
   ],
   "async": true
  },
  "function_delete_if_exists": {
   "identifiers": [
    "log",
    "function_exists",
    "function_delete",
    "file_exists",
    "function_delete_if_exists",
    "f_name",
    "exists"
   ],
   "async": true
  },
  "function_dependencies": {
   "identifiers": [
    "list_adder_unique_async",
    "visit_unique_async",
    "function_imports",
    "list_adder_async",
    "function_dependencies",
    "f_name",
    "lambda2",
    "la",
    "lambda",
    "v",
    "node"
   ],
   "async": true
  },
  "function_dependencies_code": {
   "identifiers": [
    "list_map_unordered_async",
    "log",
    "list_wait",
    "function_parse_declaration",
    "function_dependencies",
    "list_map",
    "js_unparse",
    "list_join",
    "list_map_property",
    "function_dependencies_code",
    "f_name",
    "ds",
    "mapped",
    "waited",
    "mapped2",
    "waited2"
   ],
   "async": true
  },
  "function_dependencies_code_copy": {
   "identifiers": [
    "clipboard_copy",
    "function_dependencies_code",
    "function_dependencies_code_copy",
    "f_name",
    "code"
   ],
   "async": true
  },
  "function_exists": {
   "identifiers": [
    "object_merge",
    "file_exists",
    "function_name_to_path_unalias",
    "function_exists",
    "f_name",
    "u",
    "f_path",
    "exists",
    "to",
    "e"
   ],
   "async": true
  },
  "function_format": {
   "identifiers": [
    "function_name_to_path_unalias",
    "function_name_to_path",
    "file_read",
    "js_format",
    "file_overwrite",
    "function_format",
    "f_name",
    "f_path",
    "r",
    "formatted"
   ],
   "async": true
  },
  "function_identifier_replace": {
   "identifiers": [
    "list_empty_is",
    "assert_not",
    "data_function_current_get",
    "object_replace",
    "js_parse_expression",
    "js_identifiers_named",
    "each",
    "function_transform",
    "js_identifiers",
    "list_filter",
    "marker",
    "object_property_get",
    "log",
    "function_identifier_replace",
    "identifier_name",
    "replacement",
    "f_name",
    "lambda2",
    "ast",
    "identifiers_named",
    "b",
    "from",
    "lambda",
    "i",
    "v",
    "v2"
   ],
   "async": true
  },
  "function_identifier_replace_ending_remove": {
   "identifiers": [
    "string_suffix_without",
    "marker",
    "function_name_combine",
    "function_identifier_replace",
    "function_identifier_replace_ending_remove",
    "identifier_name",
    "ending_to_remove",
    "removed"
   ],
   "async": true
  },
  "function_identifier_replace_suffix_add": {
   "identifiers": [
    "function_name_combine",
    "function_identifier_replace",
    "function_identifier_replace_suffix_add",
    "identifier_name",
    "suffix_to_add"
   ],
   "async": true
  },
  "function_import": {
   "identifiers": [
    "path_join",
    "fileURLToPath",
    "function_name_to_base",
    "function_name_unalias",
    "function_import",
    "f_name",
    "path",
    "__filename",
    "import",
    "meta",
    "url",
    "__dirname",
    "dirname",
    "unaliased",
    "joined",
    "f_path",
    "imported",
    "imported_fn",
    "Error"
   ],
   "async": true
  },
  "function_imports": {
   "identifiers": [
    "js_imports",
    "function_parse",
    "function_imports",
    "f_name",
    "parsed",
    "ast",
    "imports"
   ],
   "async": true
  },
  "function_imports_add": {
   "identifiers": [
    "log",
    "each_async",
    "js_code_import_single",
    "js_code_string",
    "folder_current_join",
    "list_add_first",
    "js_parse_statement_module",
    "function_name_to_base",
    "each",
    "function_imports_add",
    "ast",
    "imports",
    "body",
    "lambda",
    "import_",
    "result",
    "value_string",
    "from",
    "code",
    "statement"
   ],
   "async": true
  },
  "function_imports_missing": {
   "identifiers": [
    "js_imports_missing",
    "function_parse_declaration",
    "object_merge",
    "function_parse",
    "js_imports",
    "js_declaration_single",
    "js_identifiers_names",
    "list_difference",
    "list_concat",
    "list_intersect",
    "object_property_get",
    "function_imports_missing",
    "f_name",
    "parsed",
    "ast",
    "imports_missing"
   ],
   "async": true
  },
  "function_imports_missing_add": {
   "identifiers": [
    "function_imports_add",
    "each",
    "function_imports_missing",
    "function_name_to_base",
    "js_parse_statement",
    "list_add_first",
    "file_js_unparse",
    "function_name_to_path",
    "function_imports_missing_add",
    "f_name",
    "parsed",
    "imports_missing",
    "ast"
   ],
   "async": true
  },
  "function_names_to_acronyms": {
   "identifiers": [
    "object_invert",
    "function_name_to_acronym",
    "list_to_dictionary",
    "functions_names",
    "function_names_to_acronyms",
    "f_names",
    "dictionary",
    "acronyms"
   ],
   "async": false
  },
  "function_name_combine": {
   "identifiers": [
    "function_name_combine_multiple",
    "function_name_separator",
    "function_name_combine",
    "left",
    "right",
    "combined"
   ],
   "async": false
  },
  "function_name_combine_multiple": {
   "identifiers": [
    "function_name_separator",
    "list_join",
    "function_name_combine_multiple",
    "parts",
    "separator",
    "combined"
   ],
   "async": false
  },
  "function_name_extension": {
   "identifiers": [
    "function_name_extension",
    "ext"
   ],
   "async": false
  },
  "function_name_separator": {
   "identifiers": [
    "function_name_separator",
    "separator"
   ],
   "async": false
  },
  "function_name_to_acronym": {
   "identifiers": [
    "list_join_empty",
    "string_empty",
    "list_first",
    "list_map",
    "function_name_to_parts",
    "function_name_separator",
    "string_split",
    "list_join",
    "function_name_to_acronym",
    "f_name",
    "parts",
    "letters",
    "acronym"
   ],
   "async": false
  },
  "function_name_to_base": {
   "identifiers": [
    "function_name_extension",
    "function_name_to_base",
    "funcName"
   ],
   "async": false
  },
  "function_name_to_parts": {
   "identifiers": [
    "string_split",
    "function_name_separator",
    "function_name_to_parts",
    "f_name",
    "separator",
    "parts"
   ],
   "async": false
  },
  "function_name_to_path": {
   "identifiers": [
    "path_join",
    "string_includes",
    "error",
    "function_name_to_base",
    "functions_path",
    "function_name_to_path",
    "f_name",
    "second",
    "joined"
   ],
   "async": false
  },
  "function_name_to_path_unalias": {
   "identifiers": [
    "function_name_to_path",
    "function_name_unalias",
    "log",
    "function_name_to_path_unalias",
    "f_name",
    "unaliased",
    "f_path",
    "v"
   ],
   "async": true
  },
  "function_name_unalias": {
   "identifiers": [
    "function_acronym_to_name",
    "function_alias_add_generic",
    "function_name_unalias",
    "f_name",
    "exists",
    "unaliased",
    "unaliased_actual",
    "expanded",
    "expandeds",
    "v"
   ],
   "async": true
  },
  "function_new": {
   "identifiers": [
    "function_new_declaration",
    "js_declaration_name",
    "js_parse_expression",
    "js_code_export",
    "js_code_declaration",
    "file_write",
    "assert_file_exists_not",
    "function_open",
    "js_code_call",
    "file_overwrite",
    "function_name_to_path",
    "file_open",
    "log",
    "js_parse_statement_module",
    "js_unparse",
    "function_new",
    "f_name",
    "code_declaration",
    "declaration"
   ],
   "async": true
  },
  "function_new_aliased": {
   "identifiers": [
    "function_alias_add",
    "function_new",
    "function_new_aliased",
    "f_name",
    "alias"
   ],
   "async": true
  },
  "function_new_declaration": {
   "identifiers": [
    "file_write",
    "js_code_export",
    "js_unparse",
    "function_name_to_path",
    "js_declaration_name",
    "js_parse",
    "js_imports_missing_add",
    "function_new_declaration",
    "declaration",
    "name",
    "f_path",
    "code_declaration",
    "contents",
    "ast",
    "contents_import"
   ],
   "async": true
  },
  "function_new_js": {
   "identifiers": [
    "js_declaration_single_params_add",
    "function_name_combine",
    "function_new_transform",
    "function_transform",
    "marker",
    "function_new",
    "function_new_js",
    "f_name_unprefixed",
    "combined",
    "result",
    "lambda",
    "ast"
   ],
   "async": true
  },
  "function_new_transform": {
   "identifiers": [
    "log",
    "function_transform",
    "function_new",
    "function_new_transform",
    "f_name",
    "lambda$ast",
    "v"
   ],
   "async": true
  },
  "function_open": {
   "identifiers": [
    "marker",
    "function_current_set",
    "data_transform",
    "data_save",
    "data_get",
    "function_name_to_path_unalias",
    "file_open",
    "function_name_to_path",
    "object_property_set",
    "function_open",
    "f_name",
    "f_path"
   ],
   "async": true
  },
  "function_open_editor": {
   "identifiers": [
    "function_current_set",
    "data_transform",
    "data_save",
    "data_get",
    "function_name_to_path_unalias",
    "file_open",
    "function_name_to_path",
    "object_property_set",
    "file_open_editor",
    "function_open_editor",
    "f_name",
    "f_path"
   ],
   "async": true
  },
  "function_open_editor_current": {
   "identifiers": [
    "data_function_current_get",
    "function_open_editor",
    "function_open_editor_current",
    "f_name_current",
    "v"
   ],
   "async": true
  },
  "function_params_consolidate": {
   "identifiers": [
    "functions_names",
    "list_empty",
    "js_identifiers_to_names",
    "marker",
    "js_declaration_params_names",
    "js_declaration_params_get",
    "js_declaration_single",
    "function_transform",
    "list_map",
    "js_parse_expression",
    "list_add",
    "function_params_consolidate",
    "f_name",
    "lambda",
    "ast",
    "declaration",
    "params",
    "params_names",
    "lambda2",
    "param_name",
    "expression",
    "type",
    "method",
    "shorthand",
    "computed",
    "key",
    "value",
    "kind",
    "properties",
    "arg_new",
    "result",
    "f_names"
   ],
   "async": true
  },
  "function_params_consolidate_task_simple": {
   "identifiers": [
    "todo",
    "function_params_consolidate_task_simple"
   ],
   "async": false
  },
  "function_params_new": {
   "identifiers": [
    "function_transform_current",
    "js_declaration_single_params_add",
    "string_split",
    "js_declaration_param_add",
    "js_declaration_single",
    "function_transform",
    "data_function_current_get",
    "function_param_new",
    "each",
    "function_params_new",
    "param_names_comma",
    "param_names",
    "lambda",
    "ast"
   ],
   "async": true
  },
  "function_param_new": {
   "identifiers": [
    "function_params_new",
    "js_declaration_param_add",
    "js_parse_expression",
    "js_declaration_single",
    "function_transform",
    "marker",
    "log",
    "list_add",
    "data_function_current_get",
    "function_param_new",
    "param_name"
   ],
   "async": true
  },
  "function_param_swap": {
   "identifiers": [
    "js_declaration_name",
    "list_swap",
    "js_declaration_param_named",
    "function_transform_current",
    "js_declaration_single_params_add",
    "string_split",
    "js_declaration_param_add",
    "js_declaration_single",
    "function_transform",
    "data_function_current_get",
    "function_param_new",
    "each",
    "function_param_swap",
    "f_name",
    "param_name_a",
    "param_name_b",
    "a_index",
    "b_index",
    "lambda",
    "ast",
    "declaration",
    "a",
    "b",
    "params"
   ],
   "async": true
  },
  "function_param_swap_task_simple": {
   "identifiers": [
    "function_new",
    "function_param_swap",
    "todo",
    "error",
    "function_param_swap_task_simple",
    "name",
    "f_name",
    "f_name2",
    "param_name_a",
    "param_name_b"
   ],
   "async": true
  },
  "function_parse": {
   "identifiers": [
    "function_name_to_path_unalias",
    "file_js_parse",
    "function_name_to_path",
    "object_merge",
    "function_parse",
    "f_name",
    "f_path",
    "unaliased",
    "parsed"
   ],
   "async": true
  },
  "function_parse_declaration": {
   "identifiers": [
    "object_merge",
    "js_declaration_single",
    "function_parse",
    "function_parse_declaration",
    "f_name",
    "parsed",
    "ast",
    "declaration",
    "to"
   ],
   "async": true
  },
  "function_parse_declaration_js_unparse": {
   "identifiers": [
    "js_unparse",
    "function_parse_declaration",
    "function_parse_declaration_js_unparse",
    "f_name",
    "declaration",
    "output"
   ],
   "async": true
  },
  "function_path_declaration_unparse": {
   "identifiers": [
    "function_parse_declaration_js_unparse",
    "function_path_to_name",
    "function_path_declaration_unparse",
    "f_path",
    "f_name",
    "output"
   ],
   "async": true
  },
  "function_path_to_name": {
   "identifiers": [
    "path_name",
    "function_path_to_name",
    "f_path",
    "f_name"
   ],
   "async": false
  },
  "function_read": {
   "identifiers": [
    "function_name_to_path_unalias",
    "function_name_to_path",
    "file_read",
    "function_read",
    "f_name",
    "f_path",
    "v"
   ],
   "async": true
  },
  "function_rename": {
   "identifiers": [
    "function_delete",
    "function_copy",
    "marker",
    "function_rename",
    "f_name_before",
    "f_name_after"
   ],
   "async": true
  },
  "function_run": {
   "identifiers": [
    "function_import",
    "function_run",
    "f_name",
    "args",
    "fn",
    "result"
   ],
   "async": true
  },
  "function_run_git": {
   "identifiers": [
    "git_acp_call",
    "function_run_log",
    "git_acp",
    "function_run",
    "function_run_git",
    "f_name",
    "args",
    "result"
   ],
   "async": true
  },
  "function_run_line": {
   "identifiers": [
    "function_run",
    "function_run_log",
    "function_run_line_parse",
    "list_unique_reverse",
    "list_copy_reverse",
    "list_reverse",
    "function_run_git",
    "list_unique",
    "list_add",
    "data_transform",
    "list_copy",
    "function_run_line",
    "line",
    "f_name",
    "args"
   ],
   "async": true
  },
  "function_run_line_git": {
   "identifiers": [
    "function_run_line_parse",
    "list_unique_reverse",
    "list_copy_reverse",
    "list_reverse",
    "function_run_git",
    "list_unique",
    "list_add",
    "data_transform",
    "list_copy",
    "function_run_line_git",
    "line",
    "f_name",
    "args"
   ],
   "async": true
  },
  "function_run_line_parse": {
   "identifiers": [
    "list_unique_reverse",
    "list_add",
    "data_transform",
    "function_run_line_parse",
    "line",
    "f_name",
    "args",
    "split",
    "previous",
    "unique"
   ],
   "async": true
  },
  "function_run_log": {
   "identifiers": [
    "trinity_green",
    "json_format_to",
    "log_keep",
    "log",
    "function_run",
    "json_to",
    "function_name_unalias",
    "function_run_log",
    "f_name",
    "args",
    "unaliased",
    "result"
   ],
   "async": true
  },
  "function_run_log_task_duplicate_lines_to_each": {
   "identifiers": [
    "todo",
    "function_run_log_task_duplicate_lines_to_each"
   ],
   "async": false
  },
  "function_transform": {
   "identifiers": [
    "function_transform_result",
    "function_parse_declaration_js_unparse",
    "data_terminal_get",
    "log_keep",
    "log",
    "file_js_unparse",
    "function_parse",
    "function_transform",
    "f_name",
    "lambda$ast",
    "output"
   ],
   "async": true
  },
  "function_transform_command": {
   "identifiers": [
    "function_transform_result",
    "function_import",
    "function_transform",
    "function_transform_command",
    "transformer_name",
    "f_name",
    "transformer",
    "v"
   ],
   "async": true
  },
  "function_transform_command_self": {
   "identifiers": [
    "function_transform_command",
    "function_transform_command_self",
    "f_name"
   ],
   "async": true
  },
  "function_transform_current": {
   "identifiers": [
    "function_transform",
    "data_function_current_get",
    "function_transform_current",
    "lambda",
    "f_name"
   ],
   "async": true
  },
  "function_transform_marker": {
   "identifiers": [
    "list_size_1_assert_message",
    "list_size_1_assert",
    "list_adder_async",
    "function_transform_marker_arg",
    "js_marker_named",
    "data_marker_current_get",
    "log",
    "each",
    "js_type",
    "error",
    "list_is",
    "marker",
    "js_node_type_is",
    "js_node_is",
    "list_get_end",
    "js_visit_type",
    "function_transform",
    "object_merge",
    "each_async",
    "list_size",
    "list_empty_is",
    "list_first",
    "js_unparse",
    "json_to",
    "function_transform_marker",
    "f_name",
    "lambda$a",
    "marker_name",
    "code",
    "lambda2",
    "la",
    "lambda_marker",
    "ast",
    "visitors",
    "lambda",
    "v",
    "a",
    "lines",
    "message",
    "size"
   ],
   "async": true
  },
  "function_transform_marker_all": {
   "identifiers": [
    "js_markers",
    "list_filter",
    "list_adder_async",
    "js_marker_is",
    "function_transform_marker_arg",
    "js_marker_named",
    "data_marker_current_get",
    "log",
    "each",
    "js_type",
    "error",
    "list_is",
    "marker",
    "js_node_type_is",
    "js_node_is",
    "list_get_end",
    "js_visit_type",
    "function_transform",
    "object_merge",
    "each_async",
    "list_size",
    "list_empty_is",
    "list_first",
    "function_transform_marker_all",
    "f_name",
    "lambda$a",
    "lambda_marker",
    "ast",
    "markers",
    "v",
    "a"
   ],
   "async": true
  },
  "function_transform_marker_arg": {
   "identifiers": [
    "object_merge",
    "list_get_end",
    "function_transform_marker_arg",
    "v",
    "ast",
    "stack",
    "stack1",
    "stack2",
    "a"
   ],
   "async": false
  },
  "function_transform_marker_current": {
   "identifiers": [
    "data_function_current_get",
    "function_transform_marker",
    "marker",
    "function_transform_marker_current",
    "lambda$a",
    "f_name_current",
    "v"
   ],
   "async": true
  },
  "function_transform_marker_empty": {
   "identifiers": [
    "list_map_unordered_async",
    "list_map",
    "marker",
    "marker_down_choices_lambda",
    "list_is_assert",
    "list_insert",
    "assert",
    "list_get_end",
    "list_add",
    "list_is",
    "list_get",
    "list_index_of",
    "list_map_property",
    "list_empty_is",
    "js_stack_list_block_is",
    "js_visit",
    "list_adder",
    "list_remove",
    "marker_next_get",
    "function_transform_marker",
    "data_function_current_get",
    "log",
    "js_unparse",
    "noop",
    "function_transform_marker_empty",
    "f_name",
    "v"
   ],
   "async": true
  },
  "function_transform_result": {
   "identifiers": [
    "file_js_unparse",
    "function_parse",
    "function_transform_result",
    "f_name",
    "lambda$ast",
    "parsed",
    "ast",
    "result"
   ],
   "async": true
  },
  "function_types": {
   "identifiers": [
    "list_sort_string",
    "js_node_types",
    "data_function_current_get",
    "js_visit_nodes",
    "function_parse",
    "js_node_type",
    "list_adder_unique",
    "function_types",
    "f_name",
    "ast",
    "f_types"
   ],
   "async": true
  },
  "function_type_first": {
   "identifiers": [
    "data_function_current_get",
    "js_visit_nodes",
    "list_adder",
    "function_parse",
    "js_node_type",
    "list_first",
    "function_type_first",
    "type",
    "f_name",
    "ast",
    "list",
    "la",
    "node"
   ],
   "async": true
  },
  "function_wrap": {
   "identifiers": [
    "js_statement_return",
    "js_declaration_single_block_blody",
    "js_code_return",
    "object_property_from",
    "log",
    "js_declaration_asyncify",
    "js_code_call_args_await_maybe",
    "js_declaration_params_names",
    "function_parse_declaration",
    "function_new_transform",
    "function_transform",
    "marker",
    "function_new",
    "js_declaration_single",
    "list_add",
    "js_parse_expression",
    "object_property_set",
    "object_property_get",
    "js_imports_missing_add",
    "js_parse_statement",
    "function_wrap",
    "f_name",
    "f_name_wrapped",
    "declaration",
    "declaration_call",
    "unaliased",
    "v",
    "lambda",
    "ast",
    "arg_names",
    "code",
    "body_block",
    "item"
   ],
   "async": true
  },
  "function_wrap_suffix_add": {
   "identifiers": [
    "function_name_unalias",
    "function_name_combine",
    "function_wrap",
    "function_wrap_suffix_add",
    "f_name",
    "suffix",
    "unaliased",
    "f_name_wrapped",
    "v"
   ],
   "async": true
  },
  "git_acp": {
   "identifiers": [
    "git_commit",
    "git_push",
    "command_line_git",
    "git_acp",
    "message"
   ],
   "async": true
  },
  "git_acp_call": {
   "identifiers": [
    "git_acp",
    "git_acp_call",
    "f_name",
    "args",
    "message",
    "concat",
    "join"
   ],
   "async": true
  },
  "git_acp_timestamp": {
   "identifiers": [
    "date_now_iso",
    "git_acp",
    "execSync",
    "git_acp_timestamp",
    "message"
   ],
   "async": true
  },
  "git_commit": {
   "identifiers": [
    "command_line_git",
    "catch_only_async",
    "git_commit",
    "message",
    "lambda"
   ],
   "async": true
  },
  "git_push": {
   "identifiers": [
    "marker",
    "date_diff_hours",
    "log",
    "lambda_get",
    "date_to",
    "date_iso_to",
    "date_now",
    "data_property_get",
    "function_name_combine",
    "data_set",
    "git_push_command",
    "command_line_git",
    "catch_log_async",
    "git_push",
    "command_git",
    "lambda",
    "now",
    "now_iso",
    "property_name",
    "name",
    "before_iso",
    "before",
    "hours",
    "lambda$previous"
   ],
   "async": true
  },
  "git_push_command": {
   "identifiers": [
    "git_push_command"
   ],
   "async": false
  },
  "git_push_schedule": {
   "identifiers": [
    "command_line_schtasks",
    "git_push_schedule_command",
    "command_line",
    "command_line_git_prefix",
    "git_push_command",
    "folder_current",
    "path_resolve",
    "git_push_schedule",
    "command",
    "stdout"
   ],
   "async": true
  },
  "git_push_schedule_check": {
   "identifiers": [
    "schtasks_query",
    "git_push_schedule_task_name",
    "git_push_schedule_command",
    "command_line",
    "command_line_git_prefix",
    "git_push_command",
    "folder_current",
    "path_resolve",
    "marker",
    "git_push_schedule_check",
    "name",
    "exists"
   ],
   "async": true
  },
  "git_push_schedule_command": {
   "identifiers": [
    "assert_not",
    "git_push_schedule_check",
    "git_push_schedule_task_name",
    "git_push_command",
    "command_line_git_prefix",
    "path_resolve",
    "folder_current",
    "git_push_schedule_command",
    "exists",
    "paths",
    "result",
    "command"
   ],
   "async": true
  },
  "git_push_schedule_task_name": {
   "identifiers": [
    "git_push_schedule_task_name",
    "name"
   ],
   "async": false
  },
  "git_rebase": {
   "identifiers": [
    "log_keep",
    "command_line_git",
    "git_rebase",
    "e",
    "abortErr"
   ],
   "async": true
  },
  "html_name_to_path": {
   "identifiers": [
    "folder_public_combine",
    "file_name_html",
    "html_name_to_path",
    "name",
    "file_name",
    "file_path"
   ],
   "async": false
  },
  "html_new": {
   "identifiers": [
    "html_update",
    "html_name_to_path",
    "html_overwrite",
    "assert_file_exists_not",
    "marker",
    "file_write",
    "file_open",
    "folder_public_combine",
    "file_name_html",
    "folder_public",
    "path_join",
    "file_overwrite",
    "html_new",
    "name",
    "file_path"
   ],
   "async": true
  },
  "html_overwrite": {
   "identifiers": [
    "html_name_to_path",
    "file_overwrite",
    "html_overwrite",
    "name",
    "body",
    "file_path",
    "contents"
   ],
   "async": true
  },
  "html_update": {
   "identifiers": [
    "function_name_extension",
    "file_open",
    "html_overwrite",
    "html_name_to_path",
    "html_update",
    "name",
    "file_path",
    "name_prefixed",
    "ext",
    "body"
   ],
   "async": true
  },
  "identity": {
   "identifiers": [
    "identity",
    "a"
   ],
   "async": false
  },
  "import_install": {
   "identifiers": [
    "npm_install",
    "import_install",
    "name",
    "err",
    "code"
   ],
   "async": true
  },
  "integer_is": {
   "identifiers": [
    "marker",
    "integer_is",
    "value",
    "ii",
    "Number",
    "isInteger"
   ],
   "async": false
  },
  "integer_is_assert": {
   "identifiers": [
    "assert_json",
    "integer_is",
    "integer_is_assert",
    "index",
    "ii"
   ],
   "async": false
  },
  "integer_to": {
   "identifiers": [
    "integer_to",
    "input",
    "i",
    "parseInt",
    "Number",
    "isNaN"
   ],
   "async": false
  },
  "json_format_to": {
   "identifiers": [
    "json_format_to",
    "object",
    "JSON",
    "stringify"
   ],
   "async": false
  },
  "json_from": {
   "identifiers": [
    "json_from",
    "json",
    "JSON",
    "parse"
   ],
   "async": false
  },
  "json_to": {
   "identifiers": [
    "json_to",
    "object",
    "JSON",
    "stringify"
   ],
   "async": false
  },
  "js_arrow_blockify": {
   "identifiers": [
    "js_statement_return",
    "object_property_get",
    "js_node_type_not_is",
    "js_if_blockify_generic",
    "object_property_set",
    "js_visit_type",
    "object_replace",
    "object_copy",
    "js_arrow_blockify",
    "ast",
    "type",
    "property_name"
   ],
   "async": true
  },
  "js_arrow_to_function": {
   "identifiers": [
    "object_property_set",
    "js_visit_type",
    "js_arrow_to_function",
    "ast",
    "lambda",
    "v",
    "node"
   ],
   "async": false
  },
  "js_atomize": {
   "identifiers": [
    "list_get_end_1",
    "js_node_atomize",
    "list_next",
    "each_async",
    "js_return_name",
    "js_declare_init_set",
    "list_index_of",
    "list_index_of_next",
    "js_stack_last",
    "object_copy",
    "js_identifier_unique",
    "js_identifiers",
    "list_get_end",
    "each",
    "js_type",
    "js_visit",
    "js_visit_type",
    "list_get",
    "log",
    "marker",
    "list_is",
    "list_filter",
    "js_parse_statement",
    "list_insert",
    "object_replace",
    "js_parse_expression",
    "js_node_type_is",
    "function_parse",
    "js_identifiers_names",
    "js_atomize",
    "ast",
    "existing",
    "ces",
    "lambda",
    "v",
    "stack",
    "stack1"
   ],
   "async": true
  },
  "js_atomize_function": {
   "identifiers": [
    "js_block_insert",
    "js_declaration_name",
    "js_declare",
    "list_get_end_2",
    "list_get_end_1",
    "js_node_atomize",
    "list_next",
    "each_async",
    "js_return_name",
    "js_declare_init_set",
    "list_index_of",
    "list_index_of_next",
    "js_stack_last",
    "object_copy",
    "js_identifier_unique",
    "js_identifiers",
    "list_get_end",
    "each",
    "js_type",
    "js_visit",
    "js_visit_type",
    "list_get",
    "log",
    "marker",
    "list_is",
    "list_filter",
    "js_parse_statement",
    "list_insert",
    "object_replace",
    "js_parse_expression",
    "js_node_type_is",
    "function_parse",
    "js_atomize_function",
    "ast",
    "fes",
    "lambda",
    "v",
    "stack",
    "stack1",
    "stack2",
    "type_is",
    "node",
    "name",
    "copy",
    "expression"
   ],
   "async": true
  },
  "js_auto": {
   "identifiers": [
    "js_bang_to_not",
    "js_if_blockify",
    "js_if_else_if_combine",
    "js_return_atomize",
    "each_async",
    "js_atomize",
    "js_outside_move",
    "js_dollar",
    "js_call_fill",
    "js_atomize_function",
    "js_declare_assign_null",
    "js_let_add",
    "js_function_id_add",
    "js_arrow_to_function",
    "js_arrow_blockify",
    "js_auto",
    "ast",
    "transforms",
    "lambda",
    "t"
   ],
   "async": true
  },
  "js_await_add": {
   "identifiers": [
    "js_call_function_if",
    "object_property_get",
    "js_visit_type",
    "marker",
    "js_await_add",
    "ast",
    "lambda",
    "v",
    "stack",
    "node",
    "lambda3"
   ],
   "async": false
  },
  "js_await_add_task_simple": {
   "identifiers": [
    "todo",
    "js_await_add_task_simple"
   ],
   "async": false
  },
  "js_bang_to_not": {
   "identifiers": [
    "object_replace",
    "object_copy",
    "js_parse_expression",
    "not",
    "js_code_call",
    "object_property_get",
    "equal",
    "log",
    "js_visit_type",
    "js_visit",
    "marker",
    "list_add",
    "js_bang_to_not",
    "ast",
    "lambda",
    "v",
    "node",
    "operator",
    "argument",
    "copy",
    "code",
    "name",
    "expression",
    "arguments2"
   ],
   "async": false
  },
  "js_block_child_graph": {
   "identifiers": [
    "log_unparse_try",
    "not",
    "log_json",
    "log_unparse",
    "js_atomize",
    "js_node_type_is_if",
    "js_node_types_is",
    "js_types_function",
    "exit",
    "equal_not",
    "list_get",
    "assert",
    "list_index_is",
    "list_index_of",
    "list_includes",
    "list_is",
    "null_not_is",
    "list_adder",
    "log",
    "js_stack_last",
    "each",
    "js_visitors",
    "marker",
    "json_to",
    "js_block_child_graph",
    "ast",
    "lambda2",
    "la",
    "lambda",
    "v",
    "node",
    "right",
    "stack",
    "left",
    "nn",
    "body",
    "includes",
    "vs",
    "edges"
   ],
   "async": false
  },
  "js_block_child_graph_unparse": {
   "identifiers": [
    "js_block_child_graph",
    "list_map_unordered_async",
    "js_unparse",
    "list_map",
    "js_node_type_is_if",
    "js_node_types_is",
    "js_types_function",
    "exit",
    "equal_not",
    "list_get",
    "assert",
    "list_index_is",
    "list_index_of",
    "list_includes",
    "list_is",
    "null_not_is",
    "list_adder",
    "log",
    "js_stack_last",
    "each",
    "js_visitors",
    "marker",
    "js_block_child_graph_unparse",
    "ast",
    "edges",
    "a",
    "lambda",
    "edge",
    "waited",
    "mapped"
   ],
   "async": true
  },
  "js_block_insert": {
   "identifiers": [
    "list_insert",
    "list_index_of",
    "list_next",
    "js_stack_last",
    "js_block_insert",
    "stack",
    "inserted",
    "block",
    "block_body",
    "block_body_item",
    "block_body_item_index"
   ],
   "async": false
  },
  "js_calls_to_each": {
   "identifiers": [
    "js_visit_type",
    "js_calls_to_each",
    "ast",
    "call_name",
    "lambda",
    "v",
    "ast2",
    "type"
   ],
   "async": false
  },
  "js_calls_to_each_task_simple": {
   "identifiers": [
    "todo",
    "js_calls_to_each_task_simple"
   ],
   "async": false
  },
  "js_call_fill": {
   "identifiers": [
    "js_function_last_asyncify",
    "js_types_function",
    "js_stack_last_multiple",
    "object_property_get",
    "object_property_set",
    "object_property_exists_assert",
    "list_previous",
    "list_get",
    "list_index_of_previous",
    "object_property_exists",
    "js_stack_last",
    "function_name_unalias",
    "js_visit_type_each_async",
    "js_visit_each_async",
    "each_async",
    "list_adder",
    "log",
    "functions_names_includes",
    "js_call_new",
    "js_identifier_is",
    "js_unparse",
    "js_visit",
    "js_visit_type",
    "object_replace",
    "assert",
    "js_call_fill",
    "ast",
    "lambda",
    "v",
    "node",
    "stack",
    "expression",
    "name",
    "unaliased",
    "valid",
    "parsed",
    "async_is"
   ],
   "async": true
  },
  "js_call_insert": {
   "identifiers": [
    "js_code_call_args",
    "list_insert",
    "js_parse_statement",
    "js_code_call_args_await_maybe",
    "js_call_insert",
    "f_name",
    "args_code",
    "list",
    "index",
    "code",
    "parsed"
   ],
   "async": false
  },
  "js_call_new": {
   "identifiers": [
    "js_call_new_code",
    "marker",
    "js_code_let_assign",
    "function_name_unalias",
    "list_map_unordered_async",
    "js_parse_statement",
    "js_return_name",
    "js_code_call_args_await_maybe",
    "js_unparse",
    "js_declaration_param_add",
    "each",
    "js_parse_statement_module",
    "js_code_declaration",
    "object_property_get",
    "list_slice",
    "list_size",
    "list_first",
    "string_split",
    "js_identifier_unique",
    "list_map",
    "js_declaration_params_names",
    "js_identifiers_names",
    "marker_next_index",
    "function_parse_declaration",
    "js_call_new",
    "f_name_call",
    "ast",
    "code",
    "return_name",
    "existing",
    "declaration",
    "unique",
    "parsed",
    "v",
    "async_is"
   ],
   "async": true
  },
  "js_call_new_code": {
   "identifiers": [
    "js_return_name",
    "js_code_call_args_await_maybe",
    "list_map_unordered_async",
    "js_unparse",
    "each",
    "js_declaration_param_add",
    "js_parse_statement_module",
    "js_code_declaration",
    "object_property_get",
    "list_slice",
    "list_size",
    "list_first",
    "string_split",
    "js_identifier_unique",
    "js_declaration_params_names",
    "js_identifiers_names",
    "function_parse_declaration",
    "js_call_new_code",
    "f_name_call",
    "ast",
    "declaration",
    "unaliased",
    "ast_call",
    "existing",
    "arg_names",
    "lambda3",
    "arg_name",
    "arg_code",
    "split",
    "lambda",
    "skip_count",
    "b",
    "remaining",
    "lamda_name",
    "async_is",
    "code",
    "declaration_lambda",
    "lambda2",
    "p",
    "unique",
    "args_code",
    "return_name",
    "v"
   ],
   "async": true
  },
  "js_call_new_expression": {
   "identifiers": [
    "js_parse_expression",
    "js_call_new_code",
    "js_call_new_expression",
    "f_name",
    "ast",
    "code",
    "expression"
   ],
   "async": true
  },
  "js_code_arrow": {
   "identifiers": [
    "js_code_braces_empty",
    "js_code_parenthesis_open_close",
    "js_code_arrow",
    "oc",
    "code"
   ],
   "async": false
  },
  "js_code_assign": {
   "identifiers": [
    "js_code_assign",
    "left",
    "right",
    "code"
   ],
   "async": false
  },
  "js_code_await": {
   "identifiers": [
    "js_code_await",
    "code"
   ],
   "async": false
  },
  "js_code_braces_empty": {
   "identifiers": [
    "js_code_wrap_braces",
    "js_code_braces_empty"
   ],
   "async": false
  },
  "js_code_call": {
   "identifiers": [
    "js_code_call_args",
    "list_join_comma_space",
    "js_code_wrap_parenthesis",
    "js_code_call",
    "fn_name",
    "args"
   ],
   "async": false
  },
  "js_code_call_args": {
   "identifiers": [
    "js_code_wrap_parenthesis",
    "list_join_comma_space",
    "js_code_call_args",
    "fn_name",
    "args",
    "joined"
   ],
   "async": false
  },
  "js_code_call_args_await_maybe": {
   "identifiers": [
    "js_code_await",
    "object_property_get",
    "js_code_call_args",
    "js_code_call_args_await_maybe",
    "unaliased",
    "args_code",
    "declaration",
    "code"
   ],
   "async": false
  },
  "js_code_call_statement": {
   "identifiers": [
    "js_code_call",
    "js_code_statement",
    "js_code_call_statement",
    "f_name"
   ],
   "async": false
  },
  "js_code_declaration": {
   "identifiers": [
    "js_keyword_function",
    "js_code_wrap_braces",
    "js_code_call",
    "js_code_declaration",
    "f_name",
    "inside",
    "async_is",
    "prefix"
   ],
   "async": false
  },
  "js_code_export": {
   "identifiers": [
    "js_code_export",
    "code_declaration"
   ],
   "async": false
  },
  "js_code_import_single": {
   "identifiers": [
    "js_keyword_from",
    "js_code_wrap_braces",
    "js_keyword_import",
    "js_code_import_single",
    "import_",
    "from",
    "v"
   ],
   "async": false
  },
  "js_code_let_assign": {
   "identifiers": [
    "js_code_assign",
    "js_keyword_let",
    "js_code_let_assign",
    "left",
    "right"
   ],
   "async": false
  },
  "js_code_or": {
   "identifiers": [
    "js_operator_or",
    "js_code_or",
    "left",
    "right",
    "v2"
   ],
   "async": false
  },
  "js_code_parenthesis_open_close": {
   "identifiers": [
    "js_code_wrap_parenthesis",
    "js_code_parenthesis_open_close"
   ],
   "async": false
  },
  "js_code_return": {
   "identifiers": [
    "js_code_return",
    "code"
   ],
   "async": false
  },
  "js_code_return_empty": {
   "identifiers": [
    "js_code_return",
    "js_code_return_empty"
   ],
   "async": false
  },
  "js_code_statement": {
   "identifiers": [
    "js_code_statement",
    "code"
   ],
   "async": false
  },
  "js_code_string": {
   "identifiers": [
    "js_unparse",
    "object_property_delete",
    "object_property_set",
    "js_parse_expression",
    "js_code_string",
    "value_string",
    "parsed_string",
    "code_string"
   ],
   "async": false
  },
  "js_code_wrap_braces": {
   "identifiers": [
    "js_code_wrap_braces",
    "inside"
   ],
   "async": false
  },
  "js_code_wrap_parenthesis": {
   "identifiers": [
    "js_code_wrap_parenthesis",
    "inside"
   ],
   "async": false
  },
  "js_declaration_asyncify": {
   "identifiers": [
    "object_property_get",
    "object_property_set",
    "js_declaration_asyncify",
    "declaration",
    "other"
   ],
   "async": false
  },
  "js_declaration_name": {
   "identifiers": [
    "object_property_get",
    "js_declaration_name",
    "declaration",
    "declaration_id",
    "name"
   ],
   "async": false
  },
  "js_declaration_params_get": {
   "identifiers": [
    "js_declaration_params_get",
    "declaration",
    "params"
   ],
   "async": false
  },
  "js_declaration_params_names": {
   "identifiers": [
    "list_map_squash",
    "list_map",
    "js_identifier_is",
    "each",
    "js_declaration_params_get",
    "js_identifiers_to_names",
    "object_property_get",
    "js_declaration_params_names_node",
    "js_declaration_params_names",
    "declaration",
    "params",
    "params_names"
   ],
   "async": false
  },
  "js_declaration_params_names_node": {
   "identifiers": [
    "list_map_squash",
    "error",
    "list_squash",
    "log",
    "js_node_type_is",
    "object_property_get",
    "js_identifier_is",
    "list_map",
    "json_format_to",
    "js_declaration_params_names_node",
    "node",
    "names",
    "ii",
    "name",
    "type_is",
    "properties",
    "value",
    "message"
   ],
   "async": false
  },
  "js_declaration_param_add": {
   "identifiers": [
    "js_declaration_params_get",
    "marker",
    "js_parse_expression",
    "list_add",
    "js_declaration_param_add",
    "declaration",
    "param_name",
    "params",
    "item"
   ],
   "async": false
  },
  "js_declaration_param_named": {
   "identifiers": [
    "log",
    "list_find_property",
    "js_declaration_param_named",
    "declaration",
    "param_name",
    "params"
   ],
   "async": false
  },
  "js_declaration_single": {
   "identifiers": [
    "list_adder",
    "list_single",
    "js_visit_type",
    "js_declaration_single",
    "ast",
    "lambda2",
    "la",
    "lambda",
    "v",
    "node",
    "nameds",
    "named",
    "declaration"
   ],
   "async": false
  },
  "js_declaration_single_block_blody": {
   "identifiers": [
    "js_declaration_to_block_body",
    "js_declaration_single",
    "js_declaration_single_block_blody",
    "ast",
    "declaration",
    "body_block"
   ],
   "async": false
  },
  "js_declaration_single_params_add": {
   "identifiers": [
    "js_declaration_param_add",
    "each",
    "js_declaration_single",
    "js_declaration_single_params_add",
    "ast",
    "param_names",
    "declaration",
    "param_name"
   ],
   "async": false
  },
  "js_declaration_to_block_body": {
   "identifiers": [
    "js_declaration_to_block_body",
    "declaration",
    "body",
    "body_block"
   ],
   "async": false
  },
  "js_declare": {
   "identifiers": [
    "js_declare_init_set",
    "js_parse_statement",
    "js_code_let_assign",
    "js_declare",
    "name",
    "init",
    "assign_code",
    "assign"
   ],
   "async": false
  },
  "js_declare_assign": {
   "identifiers": [
    "js_visit_type",
    "object_property_set",
    "js_node_type_not_is",
    "list_get_end",
    "js_declare_assign",
    "ast",
    "lambda",
    "lambda2",
    "v",
    "node",
    "stack",
    "init",
    "stack3",
    "n",
    "value"
   ],
   "async": false
  },
  "js_declare_assign_null": {
   "identifiers": [
    "js_null",
    "js_declare_assign",
    "js_node_type_not_is",
    "js_node_type_is",
    "list_get_end",
    "list_get_end_2",
    "list_get_end_1",
    "js_keyword_null",
    "log",
    "js_visit_type",
    "object_property_set",
    "js_parse",
    "js_parse_expression",
    "js_declare_assign_null",
    "ast",
    "lambda",
    "value"
   ],
   "async": false
  },
  "js_declare_init_set": {
   "identifiers": [
    "object_property_set",
    "list_single",
    "js_node_type_is",
    "assert",
    "js_declare_init_set",
    "vd",
    "init",
    "b",
    "declarations",
    "declarators"
   ],
   "async": false
  },
  "js_dollar": {
   "identifiers": [
    "js_dollar_rf",
    "list_get_end_3",
    "list_get_end",
    "lambda_invoke_multiple",
    "lambda_invoke",
    "js_dollar_i",
    "js_dollar_r",
    "js_dollar_a",
    "js_dollar_s",
    "js_dollar_f",
    "js_identifiers_named",
    "js_node_types",
    "object_copy",
    "list_remove_multiple",
    "js_identifier_replace",
    "each",
    "list_is",
    "list_get_end_2",
    "js_dollar_g",
    "js_identifier_unique_ast",
    "js_identifiers_names",
    "js_identifier_unique",
    "js_declare",
    "js_code_string",
    "js_code_call_args",
    "list_first_second",
    "list_skip",
    "list_second",
    "string_empty_not_is",
    "list_first",
    "string_empty_is",
    "js_code_return_empty",
    "js_code_return",
    "string_prefix_without",
    "js_keyword_if",
    "js_code_braces_empty",
    "js_code_wrap_braces",
    "js_code_wrap_parenthesis",
    "object_replace",
    "js_identifier_is",
    "js_visit",
    "js_visit_type",
    "js_parse_statement",
    "string_starts_with",
    "log",
    "string_split",
    "js_parse_expression",
    "object_property_get",
    "js_visit_type_each_async",
    "js_unparse",
    "list_get_end_1",
    "js_node_type_is",
    "list_next",
    "list_remove",
    "each_async",
    "js_dollar_rt",
    "js_dollar_ie",
    "js_dollar",
    "ast",
    "seconds",
    "name",
    "fn",
    "afters",
    "lambda",
    "v",
    "lambda2",
    "s",
    "second_name",
    "node",
    "stack",
    "stack1",
    "stack2",
    "stack3",
    "separator",
    "split",
    "first",
    "second",
    "ne",
    "remaining"
   ],
   "async": true
  },
  "js_dollar_a": {
   "identifiers": [
    "js_dollar_a_generic",
    "list_add",
    "each",
    "object_replace",
    "log",
    "object_copy",
    "js_identifiers_named",
    "list_remove_multiple",
    "list_next",
    "list_is",
    "js_node_type_is",
    "js_dollar_a",
    "stack1",
    "stack2",
    "ast",
    "afters",
    "lambda",
    "next",
    "declarations",
    "lambda2",
    "declaration",
    "id",
    "init",
    "name",
    "is",
    "lambda3",
    "item",
    "replacement"
   ],
   "async": false
  },
  "js_dollar_a_generic": {
   "identifiers": [
    "list_add",
    "list_next",
    "list_is",
    "js_node_type_is",
    "js_dollar_a_generic",
    "stack1",
    "stack2",
    "afters",
    "lambda",
    "ast",
    "l",
    "next",
    "type_is",
    "declarations",
    "after"
   ],
   "async": false
  },
  "js_dollar_f": {
   "identifiers": [
    "list_add",
    "js_code_arrow",
    "js_code_braces_empty",
    "js_code_parenthesis_open_close",
    "object_replace",
    "js_parse_expression",
    "js_dollar_f",
    "node",
    "afters",
    "code",
    "parsed",
    "lambda"
   ],
   "async": false
  },
  "js_dollar_g": {
   "identifiers": [
    "each_reverse",
    "list_size_1_assert",
    "each",
    "list_first_remaining",
    "list_add",
    "js_declare",
    "js_identifier_unique_ast",
    "js_node_type_is",
    "object_replace",
    "js_parse_expression",
    "object_property_get",
    "js_code_call_args",
    "js_code_string",
    "list_first_second",
    "list_index_of_next",
    "list_insert",
    "list_remove",
    "js_dollar_g",
    "remaining",
    "node",
    "stack1",
    "stack2",
    "ast",
    "afters",
    "first",
    "object_name",
    "property_names",
    "lambda2",
    "property_name",
    "code_string",
    "code",
    "name",
    "parsed",
    "unique",
    "assign",
    "index",
    "lambda"
   ],
   "async": true
  },
  "js_dollar_i": {
   "identifiers": [
    "js_keyword_false",
    "object_replace",
    "js_code_braces_empty",
    "js_code_wrap_parenthesis",
    "js_keyword_if",
    "js_parse_statement",
    "js_dollar_i",
    "stack1",
    "inside",
    "from"
   ],
   "async": false
  },
  "js_dollar_ie": {
   "identifiers": [
    "js_call_new_expression",
    "js_parse_expression",
    "js_unparse",
    "js_call_new_code",
    "log_unparse",
    "object_property_set",
    "js_call_new",
    "log",
    "js_dollar_i",
    "js_keyword_false",
    "object_replace",
    "js_code_braces_empty",
    "js_code_wrap_parenthesis",
    "js_keyword_if",
    "js_parse_statement",
    "marker",
    "equal",
    "js_dollar_ie",
    "stack1",
    "ast",
    "expression",
    "name"
   ],
   "async": true
  },
  "js_dollar_r": {
   "identifiers": [
    "js_return_empty",
    "object_property_set",
    "list_second",
    "js_node_type_is",
    "log",
    "object_replace",
    "js_parse_statement",
    "js_code_return_empty",
    "js_dollar_r",
    "stack1",
    "stack2",
    "stack3",
    "from",
    "type_is",
    "to",
    "expressions",
    "second"
   ],
   "async": false
  },
  "js_dollar_rf": {
   "identifiers": [
    "js_return_code_replace",
    "js_parse_expression",
    "js_return_empty",
    "marker",
    "object_property_set",
    "list_second",
    "js_node_type_is",
    "log",
    "object_replace",
    "js_parse_statement",
    "js_code_return_empty",
    "js_dollar_rf",
    "stack1",
    "code"
   ],
   "async": false
  },
  "js_dollar_rt": {
   "identifiers": [
    "js_return_code_replace",
    "js_parse_expression",
    "js_return_empty",
    "marker",
    "object_property_set",
    "list_second",
    "js_node_type_is",
    "log",
    "object_replace",
    "js_parse_statement",
    "js_code_return_empty",
    "js_dollar_rt",
    "stack1",
    "code"
   ],
   "async": false
  },
  "js_dollar_s": {
   "identifiers": [
    "null_is",
    "js_node_type_is",
    "js_declare",
    "js_keyword_null",
    "js_declare_assign",
    "list_next_index",
    "list_insert",
    "list_add",
    "object_property_get",
    "js_left_right_set",
    "object_property_set",
    "log",
    "js_parse_expression",
    "js_code_assign",
    "list_remove",
    "list_size_1",
    "assert",
    "each",
    "object_replace",
    "object_copy",
    "js_identifiers_named",
    "list_remove_multiple",
    "js_dollar_a_generic",
    "js_parse_statement",
    "js_null",
    "js_dollar_s",
    "stack1",
    "stack2",
    "ast",
    "afters",
    "lambda",
    "next",
    "declarations",
    "s1",
    "lambda2",
    "declaration",
    "code",
    "s",
    "expression",
    "id",
    "init",
    "type_is",
    "value",
    "name3",
    "init2",
    "assign",
    "index_next"
   ],
   "async": false
  },
  "js_dollar_task_each_code_own_fn": {
   "identifiers": [
    "todo",
    "js_dollar_task_each_code_own_fn"
   ],
   "async": false
  },
  "js_dollar_task_if_else_to_generic": {
   "identifiers": [
    "todo",
    "js_dollar_task_if_else_to_generic"
   ],
   "async": false
  },
  "js_format": {
   "identifiers": [
    "prettier",
    "parserBabel",
    "js_format",
    "code",
    "formatted",
    "format",
    "parser",
    "plugins",
    "braceStyle"
   ],
   "async": true
  },
  "js_function_id_add": {
   "identifiers": [
    "object_property_get",
    "js_identifier_unique_ast",
    "object_property_set",
    "js_visit_type",
    "log",
    "js_parse_expression",
    "js_function_id_add",
    "ast",
    "lambda",
    "v",
    "node",
    "id",
    "unique",
    "value"
   ],
   "async": false
  },
  "js_function_last_asyncify": {
   "identifiers": [
    "object_property_set",
    "object_property_get",
    "js_stack_last_multiple",
    "js_types_function",
    "js_function_last_asyncify",
    "stack",
    "async_is",
    "types",
    "f",
    "property_name",
    "async"
   ],
   "async": false
  },
  "js_identifiers": {
   "identifiers": [
    "js_visit_type",
    "object_property_get",
    "list_adder_unique",
    "js_identifiers",
    "ast",
    "la",
    "v",
    "node"
   ],
   "async": false
  },
  "js_identifiers_named": {
   "identifiers": [
    "object_property_get",
    "list_filter",
    "js_identifiers",
    "js_identifiers_named",
    "ast",
    "identifier_name",
    "identifiers",
    "identifiers_named",
    "i"
   ],
   "async": false
  },
  "js_identifiers_names": {
   "identifiers": [
    "js_visit_type",
    "object_property_get",
    "list_adder_unique",
    "js_identifiers_names",
    "ast",
    "names",
    "la",
    "v",
    "node"
   ],
   "async": false
  },
  "js_identifiers_to_names": {
   "identifiers": [
    "assert_message",
    "js_identifier_is",
    "list_all",
    "assert",
    "list_map_property",
    "json_to",
    "js_identifiers_to_names",
    "identifiers",
    "b2",
    "message2",
    "names"
   ],
   "async": false
  },
  "js_identifier_defineds": {
   "identifiers": [
    "js_declaration_params_names",
    "js_declaration_params_get",
    "js_types_function",
    "js_stack_filtered_multiple_each",
    "function_types",
    "js_stack_filtered_multiple",
    "js_stack_filtered_each",
    "log",
    "js_identifiers_to_names",
    "list_map_property",
    "js_node_type_is",
    "list_get",
    "each_range",
    "list_index_of_next",
    "list_next",
    "each",
    "js_stack_filtered",
    "list_adder_multiple",
    "object_property_get",
    "error",
    "js_identifier_defineds",
    "v",
    "stack",
    "lambda4",
    "la",
    "lambda3",
    "bs",
    "list",
    "item",
    "index",
    "lambda2",
    "i",
    "list_item",
    "declarations",
    "ids",
    "lambda",
    "id",
    "properties",
    "values",
    "names",
    "value",
    "types",
    "lambda5",
    "node",
    "params_names",
    "defineds"
   ],
   "async": false
  },
  "js_identifier_is": {
   "identifiers": [
    "js_node_type_is",
    "js_identifier_is",
    "node",
    "ii"
   ],
   "async": false
  },
  "js_identifier_replace": {
   "identifiers": [
    "js_node_type_is_assert",
    "assert",
    "js_node_is",
    "js_node_type_is",
    "object_property_set",
    "js_visit_type",
    "object_property_get",
    "list_adder_unique",
    "js_identifier_replace",
    "ast",
    "name_from",
    "name_to",
    "lambda",
    "v",
    "node"
   ],
   "async": false
  },
  "js_identifier_unique": {
   "identifiers": [
    "js_keyword_arguments",
    "list_concat",
    "string_is_assert",
    "list_all",
    "string_empty_not_is",
    "string_empty_is",
    "list_add",
    "list_includes",
    "js_identifier_unique",
    "existing",
    "name",
    "v2",
    "used",
    "unique",
    "attempt",
    "suffix"
   ],
   "async": false
  },
  "js_identifier_unique_ast": {
   "identifiers": [
    "js_identifier_unique",
    "js_identifiers_names",
    "js_identifier_unique_ast",
    "ast",
    "property_name",
    "existing",
    "unique"
   ],
   "async": false
  },
  "js_if_blockify": {
   "identifiers": [
    "js_if_blockify_generic",
    "list_add",
    "list_includes",
    "js_node_type",
    "exit",
    "log_unparse",
    "js_visit_type_each_async",
    "log",
    "js_visit_type",
    "object_replace",
    "object_property_set",
    "js_statement_return",
    "object_copy",
    "js_node_type_not_is",
    "object_property_get",
    "marker",
    "js_if_blockify",
    "ast",
    "type",
    "property_name"
   ],
   "async": true
  },
  "js_if_blockify_generic": {
   "identifiers": [
    "js_visit_type_each_async",
    "object_replace",
    "list_add",
    "object_property_set",
    "js_statement_return",
    "list_includes",
    "js_node_type",
    "object_copy",
    "js_node_type_not_is",
    "object_property_get",
    "js_if_blockify_generic",
    "ast",
    "type",
    "property_name",
    "lambda",
    "v",
    "node",
    "body",
    "nti",
    "copy",
    "nt",
    "includes",
    "bs_body",
    "r"
   ],
   "async": true
  },
  "js_if_else_if_combine": {
   "identifiers": [
    "js_visit_type_each_async",
    "object_property_set",
    "js_left_right_set",
    "js_code_or",
    "js_operator_or",
    "js_parse_expression",
    "equal_by_async",
    "object_property_get",
    "js_node_type_is_if_async",
    "js_unparse",
    "js_node_type_is_if",
    "list_get_end_1",
    "log",
    "js_visit_type",
    "marker",
    "js_if_else_if_combine",
    "ast",
    "lambda",
    "v",
    "node",
    "stack",
    "stack1",
    "lambda3",
    "consequent2",
    "consequent",
    "eq",
    "test",
    "test2",
    "code_expression",
    "expression"
   ],
   "async": true
  },
  "js_imports": {
   "identifiers": [
    "js_imports_declarations",
    "not",
    "js_imports_all",
    "js_visit_type",
    "list_size_1",
    "js_node_type_is",
    "string_starts_with",
    "list_single",
    "list_map_property",
    "list_unique",
    "list_adder_unique",
    "js_type",
    "each",
    "js_imports",
    "ast",
    "imports_declarations",
    "imports"
   ],
   "async": false
  },
  "js_imports_all": {
   "identifiers": [
    "js_type",
    "js_imports_all",
    "ast",
    "imports"
   ],
   "async": false
  },
  "js_imports_missing": {
   "identifiers": [
    "js_declaration_name",
    "js_declaration_single",
    "list_intersect",
    "functions_names",
    "list_difference",
    "list_concat",
    "object_property_get",
    "js_identifiers_names",
    "js_imports",
    "js_imports_missing",
    "ast",
    "declaration",
    "imports",
    "identifiers",
    "name",
    "imports_self",
    "missing",
    "f_names",
    "imports_missing"
   ],
   "async": false
  },
  "js_imports_missing_add": {
   "identifiers": [
    "function_imports_add",
    "js_imports_missing",
    "js_imports_missing_add",
    "ast",
    "imports_missing"
   ],
   "async": true
  },
  "js_import_inside": {
   "identifiers": [
    "js_import_inside",
    "ast"
   ],
   "async": false
  },
  "js_import_inside_task_simple": {
   "identifiers": [
    "todo",
    "js_import_inside_task_simple"
   ],
   "async": false
  },
  "js_keyword_arguments": {
   "identifiers": [
    "js_keyword_arguments",
    "a"
   ],
   "async": false
  },
  "js_keyword_false": {
   "identifiers": [
    "js_keyword_false",
    "v"
   ],
   "async": false
  },
  "js_keyword_from": {
   "identifiers": [
    "js_keyword_from",
    "v"
   ],
   "async": false
  },
  "js_keyword_function": {
   "identifiers": [
    "js_keyword_function"
   ],
   "async": false
  },
  "js_keyword_if": {
   "identifiers": [
    "js_keyword_if"
   ],
   "async": false
  },
  "js_keyword_import": {
   "identifiers": [
    "js_keyword_import",
    "v"
   ],
   "async": false
  },
  "js_keyword_let": {
   "identifiers": [
    "js_keyword_let"
   ],
   "async": false
  },
  "js_keyword_null": {
   "identifiers": [
    "js_keyword_null"
   ],
   "async": false
  },
  "js_left_right_set": {
   "identifiers": [
    "object_property_set",
    "js_left_right_set",
    "expression",
    "left",
    "right"
   ],
   "async": false
  },
  "js_let_add": {
   "identifiers": [
    "list_includes",
    "js_identifier_defineds",
    "object_replace",
    "object_property_get",
    "log",
    "js_declare",
    "js_node_type_is",
    "list_get_end_1",
    "js_visit_type",
    "list_get_end",
    "js_let_add",
    "ast",
    "lambda",
    "v",
    "stack",
    "stack1",
    "type_is",
    "node",
    "left",
    "right",
    "name",
    "defineds",
    "includes",
    "assign"
   ],
   "async": false
  },
  "js_let_add_task_simple": {
   "identifiers": [
    "todo",
    "js_let_add_task_simple"
   ],
   "async": false
  },
  "js_markers": {
   "identifiers": [
    "js_marker_is",
    "list_filter",
    "js_type",
    "js_markers",
    "ast",
    "visitors",
    "markers"
   ],
   "async": false
  },
  "js_marker_insert": {
   "identifiers": [
    "js_call_insert",
    "js_code_call_args_await_maybe",
    "list_insert",
    "js_parse_statement",
    "marker",
    "js_code_call_args",
    "js_code_string",
    "js_marker_insert",
    "name",
    "list",
    "index",
    "code_string",
    "f_name",
    "args_code"
   ],
   "async": true
  },
  "js_marker_is": {
   "identifiers": [
    "js_marker_name_get",
    "js_marker_named",
    "js_marker_is",
    "v",
    "marker_name_actual"
   ],
   "async": false
  },
  "js_marker_named": {
   "identifiers": [
    "log",
    "js_marker_name_get",
    "error",
    "list_is",
    "list_first",
    "list_empty_is",
    "marker",
    "js_node_type_is",
    "js_node_is",
    "list_get_end",
    "string_is",
    "js_marker_named",
    "v",
    "marker_name",
    "marker_name_actual",
    "v2",
    "v3"
   ],
   "async": false
  },
  "js_marker_named_ast": {
   "identifiers": [
    "log",
    "list_single",
    "js_marker_named",
    "list_filter",
    "js_type",
    "js_marker_named_ast",
    "ast",
    "m_name_from",
    "visitors",
    "lambda",
    "v",
    "result",
    "filtered",
    "marker_v"
   ],
   "async": false
  },
  "js_marker_named_ast_arg": {
   "identifiers": [
    "function_transform_marker_arg",
    "js_marker_named_ast",
    "js_marker_named_ast_arg",
    "ast",
    "m_name_to",
    "marker_v_to",
    "a_to"
   ],
   "async": false
  },
  "js_marker_name_get": {
   "identifiers": [
    "not",
    "error",
    "list_is",
    "list_first",
    "list_empty_is",
    "marker",
    "js_node_type_is",
    "js_node_is",
    "list_get_end",
    "js_marker_name_get",
    "v",
    "stack",
    "stack1",
    "a",
    "v2",
    "a2",
    "v3",
    "node",
    "callee",
    "a3",
    "v4",
    "name",
    "v5",
    "arguments",
    "arguments2",
    "v6",
    "a_first",
    "a4",
    "v7",
    "stack2",
    "a5",
    "value"
   ],
   "async": false
  },
  "js_node_atomize": {
   "identifiers": [
    "js_call_function_if",
    "js_block_insert",
    "assert_message",
    "equal_by",
    "js_declare",
    "function_exists",
    "function_parse_declaration",
    "object_replace",
    "js_parse_expression",
    "list_index_of",
    "object_copy",
    "js_identifier_unique",
    "js_return_name",
    "function_parse",
    "js_node_type_is",
    "list_get_end",
    "list_is",
    "list_get",
    "object_property_get",
    "list_size",
    "js_node_atomize",
    "existing",
    "v",
    "variable_name",
    "node",
    "stack",
    "lambda",
    "name",
    "ast",
    "ast_callee",
    "return_name",
    "stack2",
    "stack1",
    "callee",
    "exists",
    "declaration",
    "params",
    "index",
    "param",
    "b",
    "unique",
    "copy",
    "assign",
    "v2"
   ],
   "async": true
  },
  "js_node_is": {
   "identifiers": [
    "object_property_exists",
    "js_node_is",
    "n",
    "ni"
   ],
   "async": false
  },
  "js_node_type": {
   "identifiers": [
    "object_property_get",
    "js_node_type",
    "n",
    "nt"
   ],
   "async": false
  },
  "js_node_types": {
   "identifiers": [
    "js_node_type",
    "js_visit_nodes",
    "list_adder_unique",
    "js_node_types",
    "ast",
    "la",
    "node"
   ],
   "async": false
  },
  "js_node_types_includes": {
   "identifiers": [
    "list_includes",
    "js_node_types",
    "js_node_types_includes",
    "ast",
    "node_type"
   ],
   "async": false
  },
  "js_node_types_is": {
   "identifiers": [
    "log",
    "list_any",
    "js_node_type_is",
    "js_node_types_is",
    "item",
    "types",
    "lambda2",
    "type",
    "type_is",
    "match"
   ],
   "async": false
  },
  "js_node_type_is": {
   "identifiers": [
    "js_node_is",
    "js_node_type",
    "js_node_type_is",
    "node",
    "type",
    "type_is"
   ],
   "async": false
  },
  "js_node_type_is_assert": {
   "identifiers": [
    "assert",
    "js_node_type_is",
    "js_node_type_is_assert",
    "node",
    "type",
    "type_is"
   ],
   "async": false
  },
  "js_node_type_is_if": {
   "identifiers": [
    "js_node_type_is",
    "js_node_type_is_if",
    "node",
    "type",
    "lambda",
    "type_is"
   ],
   "async": false
  },
  "js_node_type_is_if_async": {
   "identifiers": [
    "js_node_type_is",
    "js_node_type_is_if_async",
    "node",
    "type",
    "lambda",
    "type_is"
   ],
   "async": true
  },
  "js_node_type_not_is": {
   "identifiers": [
    "js_node_type_is",
    "js_node_type_not_is",
    "node",
    "type",
    "type_is",
    "nti"
   ],
   "async": false
  },
  "js_null": {
   "identifiers": [
    "js_parse_expression",
    "js_keyword_null",
    "js_null",
    "init_code",
    "n"
   ],
   "async": false
  },
  "js_operator_or": {
   "identifiers": [
    "js_operator_or",
    "v2"
   ],
   "async": false
  },
  "js_outside_move": {
   "identifiers": [
    "js_imports_fix",
    "each",
    "list_filter_property",
    "list_remove",
    "function_new_declaration",
    "assert_file_exists_not",
    "each_async",
    "marker",
    "js_declaration_name",
    "function_name_to_path",
    "js_outside_move",
    "ast",
    "body",
    "fds",
    "lambda",
    "fd",
    "f_name",
    "f_path",
    "lambda2",
    "lambda3"
   ],
   "async": true
  },
  "js_parse": {
   "identifiers": [
    "log",
    "acorn",
    "log_keep",
    "js_parse",
    "code",
    "ast",
    "parse",
    "ecmaVersion",
    "sourceType",
    "e"
   ],
   "async": false
  },
  "js_parse_expression": {
   "identifiers": [
    "object_property_get",
    "js_parse_statement",
    "log",
    "js_parse_expression",
    "code_expression",
    "statement",
    "expression"
   ],
   "async": false
  },
  "js_parse_statement": {
   "identifiers": [
    "js_code_declaration",
    "js_parse",
    "list_first",
    "js_parse_statement",
    "code",
    "ast",
    "body",
    "declaration",
    "block",
    "statements",
    "statement"
   ],
   "async": false
  },
  "js_parse_statement_module": {
   "identifiers": [
    "js_parse",
    "list_first",
    "js_parse_statement_module",
    "code",
    "ast",
    "body",
    "statement"
   ],
   "async": false
  },
  "js_return_atomize": {
   "identifiers": [
    "js_return_on_async",
    "each_async",
    "js_type",
    "log",
    "js_node_atomize",
    "js_visit_match",
    "js_return_on",
    "js_visit_type",
    "noop",
    "js_identifiers_names",
    "js_return_atomize",
    "ast",
    "existing",
    "rs",
    "lambda",
    "v",
    "node",
    "identifier_not",
    "argument"
   ],
   "async": true
  },
  "js_return_code_replace": {
   "identifiers": [
    "object_replace",
    "object_property_set",
    "js_parse_expression",
    "js_return_empty",
    "js_return_code_replace",
    "code",
    "replace_to",
    "from",
    "expression"
   ],
   "async": false
  },
  "js_return_empty": {
   "identifiers": [
    "js_parse_statement",
    "js_code_return_empty",
    "js_return_empty",
    "code",
    "from"
   ],
   "async": false
  },
  "js_return_name": {
   "identifiers": [
    "js_return_on",
    "js_identifiers_names",
    "js_identifier_unique",
    "log",
    "list_last",
    "list_empty_not_is",
    "list_empty_is",
    "js_declaration_single_block_blody",
    "js_declaration_single",
    "js_node_type_is",
    "js_return_name",
    "ast",
    "body_block",
    "return_name",
    "last",
    "identifier_if",
    "identifier_not",
    "argument",
    "name",
    "name_argument"
   ],
   "async": false
  },
  "js_return_on": {
   "identifiers": [
    "js_node_type_is",
    "js_return_on",
    "node",
    "identifier_if",
    "identifier_not",
    "argument"
   ],
   "async": false
  },
  "js_return_on_async": {
   "identifiers": [
    "js_node_type_is",
    "js_return_on_async",
    "node",
    "identifier_if",
    "identifier_not",
    "argument"
   ],
   "async": true
  },
  "js_stack_declaration_asyncify": {
   "identifiers": [
    "js_stack_last",
    "js_declaration_asyncify",
    "object_property_get",
    "object_property_set",
    "list_last",
    "js_node_type_is",
    "js_node_is",
    "list_filter",
    "js_stack_declaration_asyncify",
    "stack",
    "declaration",
    "last"
   ],
   "async": false
  },
  "js_stack_filtered": {
   "identifiers": [
    "js_node_type_is",
    "js_node_is",
    "list_filter",
    "js_stack_filtered",
    "stack",
    "type",
    "filtered",
    "n"
   ],
   "async": false
  },
  "js_stack_filtered_each": {
   "identifiers": [
    "js_stack_filtered_multiple_each",
    "each",
    "js_stack_filtered",
    "js_stack_filtered_each",
    "stack",
    "type",
    "lambda"
   ],
   "async": false
  },
  "js_stack_filtered_multiple": {
   "identifiers": [
    "js_node_types_is",
    "list_any",
    "list_all",
    "js_node_type_is",
    "js_node_is",
    "list_filter",
    "js_stack_filtered_multiple",
    "stack",
    "types",
    "lambda",
    "item",
    "result",
    "filtered"
   ],
   "async": false
  },
  "js_stack_filtered_multiple_each": {
   "identifiers": [
    "each",
    "js_stack_filtered_multiple",
    "js_stack_filtered_multiple_each",
    "stack",
    "types",
    "lambda$node",
    "filtered"
   ],
   "async": false
  },
  "js_stack_last": {
   "identifiers": [
    "js_stack_last_multiple",
    "js_stack_filtered",
    "list_last",
    "js_node_type_is",
    "js_node_is",
    "list_filter",
    "js_stack_last",
    "stack",
    "type",
    "last"
   ],
   "async": false
  },
  "js_stack_last_multiple": {
   "identifiers": [
    "list_last_or_null",
    "js_stack_filtered_multiple",
    "js_stack_filtered",
    "list_last",
    "js_node_type_is",
    "js_node_is",
    "list_filter",
    "js_stack_last_multiple",
    "stack",
    "types",
    "filtered",
    "last"
   ],
   "async": false
  },
  "js_stack_list_block_is": {
   "identifiers": [
    "js_node_type_is",
    "list_is",
    "list_get_end",
    "js_stack_list_block_is",
    "stack",
    "index",
    "stack1",
    "stack2"
   ],
   "async": false
  },
  "js_statement_call_get": {
   "identifiers": [
    "object_property_get",
    "list_single",
    "list_multiple_is",
    "js_node_type_is",
    "js_statement_call_get",
    "node",
    "expression",
    "declaration",
    "expression_next",
    "declarations"
   ],
   "async": false
  },
  "js_statement_return": {
   "identifiers": [
    "js_parse_statement",
    "js_code_return",
    "js_statement_return",
    "code",
    "code2",
    "item"
   ],
   "async": false
  },
  "js_type": {
   "identifiers": [
    "js_visit_type",
    "list_adder",
    "js_type",
    "ast",
    "node_type",
    "vs",
    "la"
   ],
   "async": false
  },
  "js_types_function": {
   "identifiers": [
    "js_types_function",
    "types_function"
   ],
   "async": false
  },
  "js_types_function_includes": {
   "identifiers": [
    "list_includes",
    "js_types_function",
    "js_types_function_includes",
    "item",
    "f_types",
    "includes"
   ],
   "async": false
  },
  "js_unparse": {
   "identifiers": [
    "js_visit_each",
    "not",
    "error_json",
    "js_visit_filter",
    "js_unparse_inner",
    "promise_not_is",
    "js_visit_each_async",
    "error",
    "log",
    "import_install",
    "json_format_to",
    "js_unparse",
    "ast",
    "a2",
    "a3",
    "o",
    "code",
    "e",
    "current",
    "lambda",
    "v",
    "node",
    "v2"
   ],
   "async": false
  },
  "js_unparse_inner": {
   "identifiers": [
    "generate",
    "js_unparse_inner",
    "ast",
    "output"
   ],
   "async": false
  },
  "js_visit": {
   "identifiers": [
    "promise_not_is",
    "error",
    "promise_is",
    "visit_filter",
    "js_visit_children_get",
    "js_visit_filter",
    "js_visit",
    "ast",
    "lambda$v"
   ],
   "async": false
  },
  "js_visitors": {
   "identifiers": [
    "list_adder",
    "js_visit",
    "marker",
    "js_visitors",
    "ast",
    "lambda",
    "la",
    "vs"
   ],
   "async": false
  },
  "js_visit_children_get": {
   "identifiers": [
    "object_properties",
    "list_is",
    "string_is",
    "object_property_get",
    "list_map",
    "js_visit_children_get",
    "n",
    "p"
   ],
   "async": false
  },
  "js_visit_each": {
   "identifiers": [
    "each",
    "marker",
    "each_async",
    "js_visit",
    "list_adder",
    "js_visit_each",
    "a",
    "lambda$item",
    "lambda2",
    "la",
    "v",
    "vs"
   ],
   "async": true
  },
  "js_visit_each_async": {
   "identifiers": [
    "each_async",
    "js_visit",
    "list_adder",
    "js_visit_each_async",
    "a",
    "lambda",
    "vs",
    "la"
   ],
   "async": true
  },
  "js_visit_filter": {
   "identifiers": [
    "js_node_is",
    "list_is",
    "js_visit_filter",
    "n"
   ],
   "async": false
  },
  "js_visit_match": {
   "identifiers": [
    "list_single",
    "js_visit",
    "list_adder",
    "js_visit_match",
    "ast",
    "search",
    "matches",
    "la",
    "v",
    "node",
    "v_match"
   ],
   "async": false
  },
  "js_visit_nodes": {
   "identifiers": [
    "js_visit",
    "js_node_is",
    "js_visit_nodes",
    "parsed",
    "on_each",
    "v",
    "node"
   ],
   "async": false
  },
  "js_visit_type": {
   "identifiers": [
    "js_visit_types",
    "log",
    "js_visit",
    "js_visit_children_get",
    "js_node_type_is",
    "js_node_is",
    "js_visit_type",
    "ast",
    "type",
    "lambda$v"
   ],
   "async": false
  },
  "js_visit_types": {
   "identifiers": [
    "js_node_types_is",
    "marker",
    "log",
    "js_visit",
    "js_visit_children_get",
    "js_node_type_is",
    "js_node_is",
    "js_visit_types",
    "ast",
    "types",
    "lambda$v",
    "lambda",
    "v",
    "node"
   ],
   "async": false
  },
  "js_visit_type_each_async": {
   "identifiers": [
    "list_adder",
    "each_async",
    "js_visit_type",
    "js_visit_type_each_async",
    "ast",
    "type",
    "lambda",
    "vs",
    "la"
   ],
   "async": true
  },
  "lambda_invoke": {
   "identifiers": [
    "lambda_invoke",
    "lambda"
   ],
   "async": false
  },
  "lambda_invoke_multiple": {
   "identifiers": [
    "lambda_invoke",
    "each",
    "lambda_invoke_multiple",
    "afters"
   ],
   "async": false
  },
  "lists_get": {
   "identifiers": [
    "list_get",
    "list_map",
    "lists_get",
    "lists",
    "index",
    "items",
    "list"
   ],
   "async": false
  },
  "list_add": {
   "identifiers": [
    "list_add",
    "list",
    "item",
    "push"
   ],
   "async": false
  },
  "list_adder": {
   "identifiers": [
    "list_adder_generic",
    "list_add",
    "list_adder",
    "lambda$la",
    "fn",
    "list"
   ],
   "async": false
  },
  "list_adder_async": {
   "identifiers": [
    "list_add",
    "list_adder_async",
    "lambda",
    "list",
    "list_adder_inner",
    "item"
   ],
   "async": true
  },
  "list_adder_generic": {
   "identifiers": [
    "list_adder_generic",
    "lambda",
    "fn",
    "list",
    "list_adder_inner",
    "item"
   ],
   "async": false
  },
  "list_adder_multiple": {
   "identifiers": [
    "list_adder_generic",
    "list_add",
    "list_add_multiple",
    "list_adder_multiple",
    "lambda",
    "fn",
    "list"
   ],
   "async": false
  },
  "list_adder_unique": {
   "identifiers": [
    "list_adder",
    "list_unique",
    "list_adder_unique",
    "lambda",
    "items"
   ],
   "async": false
  },
  "list_adder_unique_async": {
   "identifiers": [
    "list_adder",
    "list_adder_async",
    "list_unique",
    "list_adder_unique_async",
    "lambda",
    "items"
   ],
   "async": true
  },
  "list_add_first": {
   "identifiers": [
    "list_insert",
    "list_add_first",
    "body",
    "statement"
   ],
   "async": false
  },
  "list_add_if_not_includes": {
   "identifiers": [
    "not",
    "list_add",
    "list_includes",
    "list_add_if_not_includes",
    "list",
    "item",
    "exists"
   ],
   "async": false
  },
  "list_add_multiple": {
   "identifiers": [
    "list_add_multiple",
    "list",
    "items",
    "push"
   ],
   "async": false
  },
  "list_all": {
   "identifiers": [
    "list_empty_is",
    "list_filter",
    "list_size",
    "list_all",
    "list",
    "lambda$item",
    "filtered"
   ],
   "async": false
  },
  "list_any": {
   "identifiers": [
    "list_empty_not_is",
    "list_empty_is",
    "list_filter",
    "list_size",
    "list_any",
    "list",
    "lambda$item",
    "filtered"
   ],
   "async": false
  },
  "list_concat": {
   "identifiers": [
    "list_concat",
    "a",
    "b",
    "concat"
   ],
   "async": false
  },
  "list_copy": {
   "identifiers": [
    "list_copy",
    "original",
    "copy"
   ],
   "async": false
  },
  "list_copy_reverse": {
   "identifiers": [
    "list_reverse",
    "list_copy",
    "list_copy_reverse",
    "previous",
    "copy"
   ],
   "async": false
  },
  "list_difference": {
   "identifiers": [
    "each",
    "list_adder",
    "list_includes",
    "list_difference",
    "list",
    "other",
    "la",
    "l"
   ],
   "async": false
  },
  "list_empty": {
   "identifiers": [
    "object_property_set",
    "list_empty",
    "list"
   ],
   "async": false
  },
  "list_empty_is": {
   "identifiers": [
    "list_size",
    "list_empty_is",
    "list",
    "e"
   ],
   "async": false
  },
  "list_empty_not_is": {
   "identifiers": [
    "list_empty_is",
    "list_empty_not_is",
    "list",
    "ne"
   ],
   "async": false
  },
  "list_empty_not_is_assert": {
   "identifiers": [
    "assert",
    "list_empty_not_is",
    "list_empty_not_is_assert",
    "list",
    "ne"
   ],
   "async": false
  },
  "list_filter": {
   "identifiers": [
    "list_is",
    "assert",
    "list_filter",
    "list",
    "lambda$item",
    "l",
    "filter"
   ],
   "async": false
  },
  "list_filter_property": {
   "identifiers": [
    "object_property_equals_lambda",
    "list_filter",
    "object_property_get",
    "list_map",
    "list_filter_property",
    "list",
    "property_name",
    "property_value",
    "filter"
   ],
   "async": false
  },
  "list_find": {
   "identifiers": [
    "list_filter",
    "list_single",
    "list_find",
    "list",
    "filter",
    "filtered"
   ],
   "async": false
  },
  "list_find_property": {
   "identifiers": [
    "object_property_equals_lambda",
    "list_find",
    "list_find_property",
    "list",
    "property_name",
    "property_value",
    "filter"
   ],
   "async": false
  },
  "list_first": {
   "identifiers": [
    "list_get",
    "list_first",
    "list",
    "index",
    "first"
   ],
   "async": false
  },
  "list_first_second": {
   "identifiers": [
    "list_first_second_generic",
    "list_multiple_is",
    "list_second",
    "list_first",
    "list_empty_not_is",
    "list_first_second",
    "list",
    "property_name",
    "value_get",
    "result"
   ],
   "async": false
  },
  "list_get": {
   "identifiers": [
    "integer_is_assert",
    "assert_json",
    "assert_message",
    "assert",
    "integer_is",
    "undefined_not_is_assert_lambda",
    "list_get",
    "list",
    "index",
    "item",
    "object_get",
    "v"
   ],
   "async": false
  },
  "list_get_end": {
   "identifiers": [
    "list_index_last",
    "list_get",
    "list_size",
    "list_get_end",
    "stack",
    "index_from_end",
    "difference",
    "item"
   ],
   "async": false
  },
  "list_get_end_1": {
   "identifiers": [
    "list_get_end",
    "list_get_end_1",
    "stack",
    "e1"
   ],
   "async": false
  },
  "list_get_end_2": {
   "identifiers": [
    "list_get_end",
    "list_get_end_2",
    "stack",
    "e2"
   ],
   "async": false
  },
  "list_get_end_3": {
   "identifiers": [
    "list_get_end",
    "list_get_end_3",
    "stack"
   ],
   "async": false
  },
  "list_includes": {
   "identifiers": [
    "list_includes",
    "list",
    "item",
    "includes"
   ],
   "async": false
  },
  "list_index_is": {
   "identifiers": [
    "list_index_last",
    "list_empty_is",
    "marker",
    "list_index_is",
    "list",
    "index",
    "e",
    "v",
    "index_last",
    "ii"
   ],
   "async": false
  },
  "list_index_last": {
   "identifiers": [
    "list_size",
    "list_index_last",
    "list",
    "index_last"
   ],
   "async": false
  },
  "list_index_of": {
   "identifiers": [
    "error",
    "list_index_of",
    "list",
    "item",
    "index",
    "indexOf"
   ],
   "async": false
  },
  "list_index_of_delta": {
   "identifiers": [
    "list_index_of",
    "list_index_of_delta",
    "list",
    "item",
    "delta",
    "index",
    "index_next"
   ],
   "async": false
  },
  "list_index_of_next": {
   "identifiers": [
    "list_index_of_delta",
    "list_index_of",
    "list_index_of_next",
    "list",
    "item",
    "delta"
   ],
   "async": false
  },
  "list_index_of_previous": {
   "identifiers": [
    "list_index_of_delta",
    "list_index_of",
    "list_index_of_previous",
    "list",
    "item",
    "delta",
    "index_previous"
   ],
   "async": false
  },
  "list_insert": {
   "identifiers": [
    "list_insert_generic",
    "list_splice",
    "number_is",
    "assert",
    "list_insert",
    "list",
    "index",
    "value",
    "delete_count"
   ],
   "async": false
  },
  "list_insert_generic": {
   "identifiers": [
    "list_splice",
    "assert",
    "number_is",
    "list_insert_generic",
    "index",
    "list",
    "delete_count",
    "value",
    "b"
   ],
   "async": false
  },
  "list_intersect": {
   "identifiers": [
    "each",
    "list_adder",
    "list_includes",
    "list_intersect",
    "list",
    "other",
    "la",
    "l"
   ],
   "async": false
  },
  "list_is": {
   "identifiers": [
    "list_is",
    "value",
    "l",
    "Array",
    "isArray"
   ],
   "async": false
  },
  "list_is_assert": {
   "identifiers": [
    "assert_json",
    "list_is",
    "list_is_assert",
    "list",
    "result"
   ],
   "async": false
  },
  "list_join": {
   "identifiers": [
    "list_join",
    "list",
    "separator",
    "join"
   ],
   "async": false
  },
  "list_join_comma": {
   "identifiers": [
    "list_join",
    "list_join_comma",
    "names"
   ],
   "async": false
  },
  "list_join_comma_space": {
   "identifiers": [
    "list_join",
    "list_join_comma_space",
    "args"
   ],
   "async": false
  },
  "list_join_empty": {
   "identifiers": [
    "list_join",
    "string_empty",
    "list_join_empty",
    "letters",
    "e",
    "joined"
   ],
   "async": false
  },
  "list_join_space": {
   "identifiers": [
    "list_join",
    "list_join_space",
    "args",
    "result2"
   ],
   "async": false
  },
  "list_last": {
   "identifiers": [
    "list_empty_not_is_assert",
    "assert",
    "list_empty_not_is",
    "list_get",
    "list_get_end",
    "list_index_last",
    "list_last",
    "list",
    "last"
   ],
   "async": false
  },
  "list_last_is": {
   "identifiers": [
    "list_last",
    "list_last_is",
    "list",
    "item",
    "last"
   ],
   "async": false
  },
  "list_last_or_null": {
   "identifiers": [
    "list_last",
    "list_empty_is",
    "marker",
    "list_last_or_null",
    "list",
    "result",
    "v",
    "item"
   ],
   "async": false
  },
  "list_map": {
   "identifiers": [
    "list_map",
    "list",
    "lambda$item",
    "mapped",
    "map"
   ],
   "async": false
  },
  "list_map_index": {
   "identifiers": [
    "list_map",
    "list_map_index",
    "list",
    "mapper",
    "index",
    "item"
   ],
   "async": false
  },
  "list_map_name": {
   "identifiers": [
    "list_map_property",
    "list_map_name",
    "list",
    "property_name",
    "result"
   ],
   "async": false
  },
  "list_map_property": {
   "identifiers": [
    "object_property_get",
    "list_map",
    "list_map_property",
    "list",
    "property_name",
    "list_map_property_lambda",
    "item",
    "value",
    "mapped"
   ],
   "async": false
  },
  "list_map_property_to": {
   "identifiers": [
    "object_property_set",
    "list_map",
    "marker",
    "list_map_property_to",
    "list",
    "name",
    "lambda",
    "item",
    "o",
    "mapped"
   ],
   "async": false
  },
  "list_map_squash": {
   "identifiers": [
    "list_squash",
    "list_map",
    "list_map_squash",
    "properties",
    "fn",
    "mapped",
    "names"
   ],
   "async": false
  },
  "list_map_unordered_async": {
   "identifiers": [
    "list_wait",
    "js_unparse",
    "list_map",
    "list_map_unordered_async",
    "list",
    "lambda$item",
    "mapped",
    "waited"
   ],
   "async": true
  },
  "list_multiple_is": {
   "identifiers": [
    "list_size",
    "list_multiple_is",
    "list"
   ],
   "async": false
  },
  "list_next": {
   "identifiers": [
    "list_get",
    "list_index_of_next",
    "list_next",
    "list",
    "item",
    "index_next",
    "next"
   ],
   "async": false
  },
  "list_next_index": {
   "identifiers": [
    "list_next",
    "list_index_of",
    "list_next_index",
    "list",
    "item",
    "next",
    "index"
   ],
   "async": false
  },
  "list_not_is": {
   "identifiers": [
    "not",
    "list_is",
    "marker",
    "list_not_is",
    "value",
    "a",
    "l"
   ],
   "async": false
  },
  "list_pop": {
   "identifiers": [
    "list_pop",
    "list",
    "pop"
   ],
   "async": false
  },
  "list_previous": {
   "identifiers": [
    "list_get",
    "list_index_of_previous",
    "list_previous",
    "list",
    "item",
    "index_previous",
    "previous"
   ],
   "async": false
  },
  "list_range": {
   "identifiers": [
    "list_slice",
    "list_range",
    "list",
    "a",
    "b"
   ],
   "async": false
  },
  "list_remove": {
   "identifiers": [
    "list_remove_at",
    "error",
    "list_index_of",
    "list_remove",
    "list",
    "item",
    "index"
   ],
   "async": false
  },
  "list_remove_all": {
   "identifiers": [
    "list_remove",
    "list_includes",
    "list_remove_all",
    "list",
    "item"
   ],
   "async": false
  },
  "list_remove_at": {
   "identifiers": [
    "list_remove_at",
    "list",
    "index",
    "splice"
   ],
   "async": false
  },
  "list_remove_multiple": {
   "identifiers": [
    "list_remove",
    "each",
    "list_remove_multiple",
    "removals",
    "list",
    "r"
   ],
   "async": false
  },
  "list_replace": {
   "identifiers": [
    "list_insert_generic",
    "list_splice",
    "number_is",
    "assert",
    "list_replace",
    "list",
    "index",
    "value",
    "delete_count"
   ],
   "async": false
  },
  "list_reverse": {
   "identifiers": [
    "list_reverse",
    "list",
    "reverse"
   ],
   "async": false
  },
  "list_second": {
   "identifiers": [
    "list_get",
    "list_second",
    "list",
    "index",
    "second"
   ],
   "async": false
  },
  "list_single": {
   "identifiers": [
    "list_size_1_assert",
    "list_empty_is",
    "list_first",
    "error",
    "list_size_1",
    "list_single",
    "list",
    "first"
   ],
   "async": false
  },
  "list_size": {
   "identifiers": [
    "list_is",
    "list_is_assert",
    "list_size",
    "list",
    "size",
    "length"
   ],
   "async": false
  },
  "list_size_1": {
   "identifiers": [
    "list_size",
    "list_size_1",
    "list",
    "s1"
   ],
   "async": false
  },
  "list_size_1_assert": {
   "identifiers": [
    "list_size_1_assert_message",
    "log",
    "string_to",
    "error",
    "list_size",
    "list_size_1",
    "list_size_1_assert",
    "list",
    "message",
    "message2"
   ],
   "async": false
  },
  "list_size_1_assert_message": {
   "identifiers": [
    "log",
    "string_to",
    "error",
    "list_size",
    "list_size_1",
    "list_size_1_assert_message",
    "list",
    "message"
   ],
   "async": false
  },
  "list_skip": {
   "identifiers": [
    "list_slice",
    "list_size",
    "list_skip",
    "list",
    "skip_count",
    "b",
    "skipped"
   ],
   "async": false
  },
  "list_slice": {
   "identifiers": [
    "list_slice",
    "list",
    "a",
    "b",
    "slice"
   ],
   "async": false
  },
  "list_slice_end": {
   "identifiers": [
    "list_slice",
    "list_size",
    "list_slice_end",
    "prompts",
    "offset",
    "end",
    "start"
   ],
   "async": false
  },
  "list_sort_number_mapper": {
   "identifiers": [
    "list_sort_number_mapper",
    "list",
    "lambda$item",
    "lambda",
    "a",
    "b",
    "va",
    "vb",
    "sort"
   ],
   "async": false
  },
  "list_sort_string": {
   "identifiers": [
    "list_sort_string",
    "list",
    "sort"
   ],
   "async": false
  },
  "list_sort_string_size": {
   "identifiers": [
    "string_size",
    "list_sort_number_mapper",
    "list_sort_string_size",
    "list"
   ],
   "async": false
  },
  "list_splice": {
   "identifiers": [
    "list_splice",
    "list",
    "index",
    "delete_count",
    "value",
    "splice"
   ],
   "async": false
  },
  "list_squash": {
   "identifiers": [
    "list_is",
    "each",
    "list_adder",
    "list_squash",
    "list",
    "lambda2",
    "la",
    "list_process",
    "lambda",
    "item",
    "l",
    "fn",
    "squashed"
   ],
   "async": false
  },
  "list_swap": {
   "identifiers": [
    "list_index_of",
    "list_replace",
    "list_swap",
    "list",
    "a",
    "b",
    "ai",
    "bi"
   ],
   "async": false
  },
  "list_to": {
   "identifiers": [
    "marker",
    "list_to",
    "a",
    "v",
    "Array",
    "from"
   ],
   "async": false
  },
  "list_to_dictionary": {
   "identifiers": [
    "list_get",
    "object_property_set",
    "each",
    "list_to_dictionary",
    "list",
    "lambda$item",
    "dictionary",
    "lambda",
    "item",
    "value"
   ],
   "async": false
  },
  "list_unique": {
   "identifiers": [
    "each",
    "list_add",
    "list_includes",
    "list_unique",
    "list",
    "unique",
    "item"
   ],
   "async": false
  },
  "list_unique_reverse": {
   "identifiers": [
    "list_reverse",
    "list_unique",
    "list_copy_reverse",
    "list_unique_reverse",
    "previous",
    "reversed",
    "copy"
   ],
   "async": false
  },
  "list_wait": {
   "identifiers": [
    "list_wait",
    "list",
    "Promise",
    "all"
   ],
   "async": false
  },
  "log": {
   "identifiers": [
    "log_keep",
    "log",
    "message"
   ],
   "async": false
  },
  "log_json": {
   "identifiers": [
    "log",
    "json_to",
    "log_json",
    "right",
    "message"
   ],
   "async": false
  },
  "log_keep": {
   "identifiers": [
    "log",
    "log_keep",
    "message",
    "console"
   ],
   "async": false
  },
  "log_unparse": {
   "identifiers": [
    "log",
    "js_unparse",
    "log_unparse",
    "node",
    "code"
   ],
   "async": false
  },
  "log_unparse_try": {
   "identifiers": [
    "log_unparse",
    "list_is",
    "not",
    "js_node_types_is",
    "log_unparse_try",
    "right",
    "a",
    "match"
   ],
   "async": false
  },
  "marker": {
   "identifiers": [
    "noop",
    "marker",
    "marker_name"
   ],
   "async": false
  },
  "marker_above": {
   "identifiers": [
    "js_auto",
    "list_insert",
    "list_includes",
    "js_parse_statement",
    "object_property_get",
    "marker_index",
    "function_transform_marker_current",
    "marker",
    "marker_above",
    "code",
    "lambda",
    "a",
    "i",
    "index",
    "stack2",
    "statement",
    "ast",
    "v"
   ],
   "async": true
  },
  "marker_assign_replace": {
   "identifiers": [
    "js_declare_init_set",
    "js_parse_expression",
    "js_parse_statement",
    "js_parse",
    "list_single",
    "list_size_1",
    "assert",
    "marker_next_get",
    "js_unparse",
    "list_get",
    "list_adder_async",
    "log",
    "list_insert",
    "list_remove",
    "function_transform_marker",
    "data_function_current_get",
    "list_index_of",
    "js_node_type_is",
    "object_property_set",
    "marker_assign_replace",
    "init_code",
    "f_name",
    "la",
    "lambda",
    "a",
    "next",
    "init"
   ],
   "async": true
  },
  "marker_assign_replace_string": {
   "identifiers": [
    "js_code_string",
    "marker_assign_replace",
    "marker_assign_replace_string",
    "value",
    "code_string",
    "v"
   ],
   "async": true
  },
  "marker_bottom": {
   "identifiers": [
    "marker",
    "marker_down_generic",
    "list_add",
    "list_get",
    "marker_next_get",
    "js_stack_list_block_is",
    "integer_to",
    "log",
    "list_insert",
    "list_remove",
    "function_transform_marker",
    "data_function_current_get",
    "list_index_of",
    "js_visit",
    "list_get_end",
    "list_adder",
    "list_is",
    "js_node_type_is",
    "list_empty_is",
    "list_map_property",
    "assert",
    "list_index_last",
    "marker_bottom",
    "v2",
    "delta_get",
    "a",
    "choices",
    "index",
    "v"
   ],
   "async": true
  },
  "marker_call": {
   "identifiers": [
    "js_call_new",
    "js_return_name",
    "js_declaration_single_block_blody",
    "js_stack_declaration_asyncify",
    "js_code_call_args_await_maybe",
    "js_declaration_params_names",
    "js_declaration_param_add",
    "js_code_declaration",
    "list_slice",
    "list_size",
    "list_multiple_is",
    "string_split",
    "object_property_set",
    "list_last",
    "list_filter",
    "js_code_await",
    "js_identifier_unique",
    "js_imports_missing_add",
    "json_to",
    "log",
    "list_insert",
    "assert_not",
    "list_map",
    "js_identifiers_names",
    "list_map_property",
    "js_parse_statement",
    "marker",
    "js_code_call_args",
    "function_parse_declaration",
    "js_unparse",
    "marker_next_get",
    "function_transform_marker",
    "list_adder_async",
    "data_function_current_get",
    "marker_next_index",
    "object_property_get",
    "list_includes",
    "list_add",
    "js_node_is",
    "js_node_type_is",
    "list_first",
    "js_parse_statement_module",
    "each",
    "marker_call",
    "f_name_call",
    "f_name_current",
    "lambda2",
    "la",
    "lambda",
    "a",
    "stack",
    "stack2",
    "index",
    "ast",
    "declaration",
    "parsed",
    "output",
    "list"
   ],
   "async": true
  },
  "marker_call_atomize": {
   "identifiers": [
    "js_node_atomize",
    "js_visit_match",
    "js_identifiers",
    "marker_call_replace_generic",
    "list_multiple_is",
    "object_replace",
    "integer_to",
    "js_parse_expression",
    "js_parse_statement",
    "js_parse",
    "list_single",
    "list_size_1",
    "assert",
    "marker_next_get",
    "js_unparse",
    "list_get",
    "list_adder_async",
    "log",
    "list_insert",
    "list_remove",
    "function_transform_marker",
    "data_function_current_get",
    "list_index_of",
    "js_node_type_is",
    "object_property_set",
    "object_property_get",
    "js_imports_missing_add",
    "js_visit",
    "list_adder",
    "marker_call_atomize",
    "input",
    "lambda",
    "a",
    "replaced",
    "ast",
    "existing",
    "v_match"
   ],
   "async": true
  },
  "marker_call_replace": {
   "identifiers": [
    "marker_call_replace_generic",
    "list_multiple_is",
    "object_replace",
    "integer_to",
    "js_parse_expression",
    "js_parse_statement",
    "js_parse",
    "list_single",
    "list_size_1",
    "assert",
    "marker_next_get",
    "js_unparse",
    "list_get",
    "list_adder_async",
    "log",
    "list_insert",
    "list_remove",
    "function_transform_marker",
    "data_function_current_get",
    "list_index_of",
    "js_node_type_is",
    "object_property_set",
    "object_property_get",
    "js_imports_missing_add",
    "marker_call_replace",
    "input",
    "code_replacement",
    "lambda",
    "a",
    "replaced",
    "replacement"
   ],
   "async": true
  },
  "marker_call_replace_generic": {
   "identifiers": [
    "js_statement_call_get",
    "js_unparse",
    "js_imports_missing_add",
    "list_get",
    "object_property_get",
    "list_single",
    "list_multiple_is",
    "js_node_type_is",
    "marker_next_get",
    "function_transform_marker",
    "list_adder_async",
    "data_function_current_get",
    "integer_to",
    "object_merge",
    "marker_call_replace_generic",
    "input",
    "lambda$a",
    "arg_index",
    "f_name",
    "lambda2",
    "la",
    "lambda",
    "a",
    "next",
    "expression",
    "arguments",
    "arguments2",
    "replaced",
    "callee",
    "arg_index_at",
    "to",
    "ast",
    "output",
    "list"
   ],
   "async": true
  },
  "marker_current_set": {
   "identifiers": [
    "data_transform",
    "marker_current_set",
    "name_marker",
    "previous"
   ],
   "async": true
  },
  "marker_delete_above": {
   "identifiers": [
    "list_remove_at",
    "marker_previous_index",
    "list_insert",
    "list_includes",
    "js_parse_statement",
    "object_property_get",
    "marker_index",
    "function_transform_marker_current",
    "marker",
    "marker_delete_above",
    "lambda",
    "a",
    "p",
    "index",
    "stack2",
    "v"
   ],
   "async": true
  },
  "marker_down": {
   "identifiers": [
    "marker",
    "marker_down_generic",
    "integer_to",
    "marker_down",
    "delta",
    "v",
    "delta_get",
    "i"
   ],
   "async": true
  },
  "marker_down_choices": {
   "identifiers": [
    "list_map_unordered_async",
    "list_map",
    "marker",
    "marker_down_choices_lambda",
    "list_is_assert",
    "list_insert",
    "assert",
    "list_get_end",
    "list_add",
    "list_is",
    "list_get",
    "list_index_of",
    "list_map_property",
    "list_empty_is",
    "js_stack_list_block_is",
    "js_visit",
    "list_adder",
    "list_remove",
    "marker_next_get",
    "function_transform_marker",
    "data_function_current_get",
    "log",
    "js_unparse",
    "marker_down_choices",
    "f_name",
    "choices",
    "v",
    "lambda",
    "a",
    "vs",
    "nodes",
    "lambda2",
    "item",
    "l",
    "code"
   ],
   "async": true
  },
  "marker_down_choices_lambda": {
   "identifiers": [
    "list_map_property_to",
    "list_map_property",
    "list_includes",
    "js_declaration_to_block_body",
    "js_declaration_single",
    "js_declaration_single_block_blody",
    "list_adder",
    "js_visit",
    "js_stack_list_block_is",
    "list_remove",
    "marker",
    "marker_down_choices_lambda",
    "stack2",
    "stack1",
    "ast",
    "declaration",
    "body_block",
    "lambda3",
    "la",
    "lambda2",
    "v",
    "stack",
    "node",
    "includes",
    "choices"
   ],
   "async": false
  },
  "marker_down_generic": {
   "identifiers": [
    "function_transform_marker_current",
    "object_copy",
    "marker_down_choices_lambda",
    "list_is_assert",
    "list_insert",
    "assert",
    "list_get_end",
    "list_add",
    "list_is",
    "list_get",
    "list_index_of",
    "list_map_property",
    "list_empty_is",
    "js_stack_list_block_is",
    "js_visit",
    "list_adder",
    "list_remove",
    "marker_next_get",
    "function_transform_marker",
    "data_function_current_get",
    "log",
    "js_unparse",
    "marker_down_generic",
    "delta_get",
    "v",
    "lambda",
    "a",
    "stack2",
    "stack1",
    "index",
    "index_new",
    "choices"
   ],
   "async": true
  },
  "marker_enter": {
   "identifiers": [
    "js_declaration_to_block_body",
    "list_add_first",
    "list_remove",
    "object_property_get",
    "js_node_type_is",
    "log_unparse",
    "js_visit_type",
    "js_visit_types",
    "js_type",
    "marker_next_get",
    "list_map_unordered_async",
    "log",
    "js_node_type",
    "js_types_function_includes",
    "js_types_function",
    "list_includes",
    "list_filter",
    "list_index_of",
    "list_skip",
    "function_types",
    "function_transform_marker_current",
    "marker",
    "list_index_of_next",
    "js_unparse",
    "marker_enter",
    "lambda",
    "a",
    "n",
    "next",
    "stack1",
    "stack2",
    "nt",
    "body",
    "v"
   ],
   "async": true
  },
  "marker_expand": {
   "identifiers": [
    "todo",
    "js_declaration_name",
    "js_declare",
    "object_property_set",
    "js_return_on",
    "list_last",
    "each_reverse",
    "js_identifier_replace",
    "list_empty_not_is",
    "list_intersect",
    "js_identifiers_names",
    "each_pair",
    "list_concat",
    "lists_get",
    "each_index",
    "js_identifier_is",
    "list_all",
    "js_identifiers_to_names",
    "js_declaration_params_names",
    "js_declaration_to_block_body",
    "function_parse_declaration",
    "js_statement_call_get",
    "marker_next_get",
    "js_unparse",
    "list_get",
    "list_adder_async",
    "log",
    "list_insert",
    "list_remove",
    "function_transform_marker",
    "data_function_current_get",
    "list_index_of",
    "js_node_type_is",
    "function_parse",
    "assert",
    "list_map",
    "list_first",
    "error",
    "each",
    "noop",
    "list_add",
    "marker_expand",
    "f_name",
    "lambda2",
    "a",
    "next",
    "index",
    "expression",
    "declaration",
    "declaration_call",
    "callee",
    "arguments",
    "arguments2",
    "a_names",
    "name",
    "ast",
    "identifiers",
    "intesection",
    "params_names",
    "lambda3",
    "param_name",
    "a_name",
    "body_block",
    "last",
    "argument",
    "assign",
    "stack2",
    "lambda4",
    "item",
    "inserted"
   ],
   "async": true
  },
  "marker_first": {
   "identifiers": [
    "marker_first_index",
    "string_to",
    "marker_first",
    "index_value",
    "index"
   ],
   "async": false
  },
  "marker_first_index": {
   "identifiers": [
    "marker_first_index",
    "index"
   ],
   "async": false
  },
  "marker_functionize": {
   "identifiers": [
    "object_property_equals",
    "js_outside_move",
    "js_parse_statement",
    "js_code_call_args_await_maybe",
    "js_code_call_args",
    "list_remove_multiple",
    "js_parse_expression",
    "list_difference",
    "js_identifier_defineds",
    "list_adder_multiple",
    "js_identifiers_to_names",
    "list_map_property",
    "list_next_index",
    "each_range",
    "range",
    "list_index_of",
    "list_next",
    "js_stack_filtered",
    "list_add_multiple",
    "js_declaration_to_block_body",
    "js_node_types",
    "js_node_types_includes",
    "list_any",
    "js_parse_statement_module",
    "js_code_declaration",
    "list_range",
    "list_slice",
    "marker_previous_index",
    "js_marker_named_ast_arg",
    "marker_next_index",
    "marker_next_get",
    "function_transform_marker_arg",
    "js_marker_named_ast",
    "data_function_current_get",
    "list_single",
    "js_marker_named",
    "data_marker_current_get",
    "log",
    "each",
    "js_type",
    "error",
    "list_is",
    "marker",
    "js_node_type_is",
    "js_node_is",
    "list_get_end",
    "js_visit_type",
    "function_transform",
    "object_merge",
    "each_async",
    "list_size",
    "list_empty_is",
    "list_first",
    "list_filter",
    "list_insert",
    "list_remove",
    "assert",
    "list_map",
    "js_unparse",
    "list_add",
    "list_adder",
    "js_visit",
    "list_get",
    "object_property_get",
    "list_includes",
    "list_adder_unique",
    "list_index_of_next",
    "functions_names",
    "js_node_type",
    "marker_functionize",
    "m_name_from",
    "m_name_to",
    "f_name_new",
    "f_name",
    "lambda_marker",
    "ast",
    "a_from",
    "index",
    "index_from",
    "a_to",
    "index_to",
    "stack2",
    "stack2_from",
    "stack2_to",
    "async_is",
    "r",
    "code_declaration",
    "declaration",
    "body_block",
    "body",
    "missing",
    "la",
    "v",
    "defineds",
    "node",
    "stack",
    "stack1",
    "name",
    "other",
    "list",
    "items",
    "code",
    "parsed"
   ],
   "async": true
  },
  "marker_index": {
   "identifiers": [
    "marker",
    "list_index_of_previous",
    "list_index_of_next",
    "list_index_of",
    "object_merge",
    "marker_index",
    "a",
    "stack2",
    "stack1",
    "index",
    "i"
   ],
   "async": false
  },
  "marker_move": {
   "identifiers": [
    "js_marker_named_ast_arg",
    "marker_next_index",
    "marker_next_get",
    "data_function_current_get",
    "marker",
    "function_transform",
    "list_insert",
    "list_remove",
    "marker_move",
    "m_name_from",
    "m_name_to",
    "f_name",
    "lambda_marker",
    "ast",
    "a_from",
    "next",
    "stack2",
    "stack2_from",
    "a_to",
    "index",
    "stack2_to"
   ],
   "async": true
  },
  "marker_new": {
   "identifiers": [
    "marker_current_set",
    "js_marker_insert",
    "marker",
    "marker_next_index",
    "function_transform_marker",
    "data_function_current_get",
    "marker_new",
    "f_name",
    "v",
    "lambda",
    "a",
    "index",
    "stack2",
    "name"
   ],
   "async": true
  },
  "marker_next": {
   "identifiers": [
    "marker_next_get",
    "js_unparse",
    "list_get",
    "list_adder_async",
    "log",
    "list_insert",
    "list_remove",
    "function_transform_marker",
    "data_function_current_get",
    "list_index_of",
    "marker_next",
    "f_name",
    "la",
    "lambda",
    "a",
    "next"
   ],
   "async": true
  },
  "marker_next_delete": {
   "identifiers": [
    "list_remove_at",
    "marker_next_index",
    "object_replace",
    "integer_to",
    "js_parse_expression",
    "js_parse_statement",
    "js_parse",
    "list_single",
    "list_size_1",
    "assert",
    "marker_next_get",
    "js_unparse",
    "list_get",
    "list_adder_async",
    "log",
    "list_insert",
    "list_remove",
    "function_transform_marker",
    "data_function_current_get",
    "list_index_of",
    "js_node_type_is",
    "object_property_set",
    "object_property_get",
    "marker_next_delete",
    "f_name",
    "la",
    "lambda",
    "a",
    "index",
    "stack2"
   ],
   "async": true
  },
  "marker_next_get": {
   "identifiers": [
    "object_merge",
    "marker_next_index",
    "list_get",
    "list_index_of",
    "marker_next_get",
    "a",
    "ni",
    "index",
    "stack2",
    "next",
    "n",
    "to2"
   ],
   "async": false
  },
  "marker_next_index": {
   "identifiers": [
    "list_index_of_next",
    "list_index_of",
    "object_merge",
    "marker_next_index",
    "a",
    "stack2",
    "stack1",
    "index"
   ],
   "async": false
  },
  "marker_previous_index": {
   "identifiers": [
    "list_index_of_previous",
    "list_index_of_next",
    "list_index_of",
    "object_merge",
    "marker_previous_index",
    "a",
    "stack2",
    "stack1",
    "index",
    "p"
   ],
   "async": false
  },
  "marker_remove": {
   "identifiers": [
    "function_transform_marker_all",
    "function_transform_marker",
    "data_function_current_get",
    "list_remove",
    "log",
    "marker_remove",
    "f_name",
    "lambda",
    "a",
    "stack2",
    "stack1"
   ],
   "async": true
  },
  "marker_remove_marker_top": {
   "identifiers": [
    "marker_top",
    "marker_remove",
    "marker",
    "marker_remove_marker_top",
    "v"
   ],
   "async": true
  },
  "marker_top": {
   "identifiers": [
    "list_empty_not_is",
    "js_identifier_unique",
    "string_to",
    "marker_first_index",
    "marker_first",
    "js_marker_insert",
    "js_declaration_single_block_blody",
    "js_imports_missing_add",
    "function_imports_add",
    "js_imports_missing",
    "data_function_current_get",
    "object_property_get",
    "data_get",
    "function_transform",
    "list_add_first",
    "js_parse_statement",
    "js_code_call_statement",
    "marker",
    "js_code_call",
    "log",
    "js_declaration_single",
    "function_parse",
    "list_add",
    "js_markers",
    "list_map",
    "js_marker_name_get",
    "marker_top",
    "f_name",
    "v",
    "lambda",
    "ast",
    "markers",
    "ne",
    "names",
    "name_next",
    "body"
   ],
   "async": true
  },
  "newFunction": {
   "identifiers": [
    "newFunction"
   ],
   "async": true
  },
  "noop": {
   "identifiers": [
    "noop"
   ],
   "async": false
  },
  "not": {
   "identifiers": [
    "marker",
    "not",
    "a",
    "n"
   ],
   "async": false
  },
  "npm_install": {
   "identifiers": [
    "command_line",
    "npm_install",
    "package_name"
   ],
   "async": true
  },
  "null_is": {
   "identifiers": [
    "null_is",
    "value"
   ],
   "async": false
  },
  "null_not_is": {
   "identifiers": [
    "marker",
    "null_not_is",
    "value",
    "nn"
   ],
   "async": false
  },
  "number_is": {
   "identifiers": [
    "number_is",
    "value",
    "isFinite"
   ],
   "async": false
  },
  "object_copy": {
   "identifiers": [
    "object_merge",
    "object_copy",
    "from",
    "copy"
   ],
   "async": false
  },
  "object_invert": {
   "identifiers": [
    "object_property_initialize",
    "each_object",
    "each",
    "list_add",
    "object_properties",
    "object_property_get",
    "object_invert",
    "object",
    "inverted",
    "value",
    "key",
    "list"
   ],
   "async": false
  },
  "object_merge": {
   "identifiers": [
    "error",
    "each",
    "object_properties",
    "object_property_exists",
    "object_property_set",
    "object_property_get",
    "object_merge",
    "to",
    "from",
    "p",
    "value"
   ],
   "async": false
  },
  "object_properties": {
   "identifiers": [
    "object_properties",
    "obj",
    "properties",
    "Object",
    "getOwnPropertyNames"
   ],
   "async": false
  },
  "object_properties_delete": {
   "identifiers": [
    "object_property_delete",
    "each",
    "object_properties",
    "object_properties_delete",
    "obj",
    "p"
   ],
   "async": false
  },
  "object_property_delete": {
   "identifiers": [
    "json_to",
    "error",
    "undefined_is",
    "object_property_delete",
    "object",
    "property_name"
   ],
   "async": false
  },
  "object_property_equals": {
   "identifiers": [
    "object_property_get",
    "object_property_equals",
    "item",
    "property_name",
    "property_value"
   ],
   "async": false
  },
  "object_property_equals_lambda": {
   "identifiers": [
    "object_property_equals",
    "object_property_get",
    "object_property_equals_lambda",
    "property_name",
    "property_value",
    "item"
   ],
   "async": false
  },
  "object_property_exists": {
   "identifiers": [
    "object_property_exists",
    "object",
    "property_name",
    "Object",
    "hasOwn"
   ],
   "async": false
  },
  "object_property_exists_assert": {
   "identifiers": [
    "assert",
    "object_property_exists",
    "object_property_exists_assert",
    "object",
    "property_name",
    "result"
   ],
   "async": false
  },
  "object_property_exists_equals": {
   "identifiers": [
    "object_property_equals",
    "object_property_exists",
    "object_property_exists_equals",
    "path",
    "in_progress",
    "value"
   ],
   "async": false
  },
  "object_property_from": {
   "identifiers": [
    "object_property_get",
    "object_property_set",
    "object_property_from",
    "to",
    "property_name",
    "from"
   ],
   "async": false
  },
  "object_property_get": {
   "identifiers": [
    "undefined_not_is_assert_lambda",
    "json_to",
    "error",
    "undefined_is",
    "object_property_get",
    "object",
    "property_name",
    "value",
    "object_get",
    "v"
   ],
   "async": false
  },
  "object_property_initialize": {
   "identifiers": [
    "not",
    "object_property_set",
    "object_property_get",
    "object_property_exists",
    "object_property_initialize",
    "object",
    "property_name",
    "value",
    "exists"
   ],
   "async": false
  },
  "object_property_set": {
   "identifiers": [
    "object_property_set",
    "object",
    "property_name",
    "value"
   ],
   "async": false
  },
  "object_replace": {
   "identifiers": [
    "object_properties_delete",
    "object_merge",
    "object_replace",
    "to",
    "from"
   ],
   "async": false
  },
  "path_join": {
   "identifiers": [
    "path",
    "path_join",
    "list_of_segments",
    "join"
   ],
   "async": false
  },
  "path_name": {
   "identifiers": [
    "path",
    "path_name",
    "file_path",
    "name",
    "parse"
   ],
   "async": false
  },
  "path_resolve": {
   "identifiers": [
    "path_resolve",
    "paths",
    "path",
    "resolve"
   ],
   "async": true
  },
  "promise_is": {
   "identifiers": [
    "promise_is",
    "value",
    "then",
    "catch"
   ],
   "async": false
  },
  "promise_not_is": {
   "identifiers": [
    "promise_is",
    "promise_not_is",
    "ast"
   ],
   "async": false
  },
  "prompt_previous": {
   "identifiers": [
    "marker",
    "log_keep",
    "data_prompts",
    "function_aliases_inverted",
    "object_invert",
    "function_aliases",
    "function_run_line",
    "data_value",
    "data_transform",
    "function_run_prompt",
    "list_last",
    "list_filter",
    "list_difference",
    "list_concat",
    "object_property_get",
    "log",
    "prompt_previous",
    "inverted",
    "prompts",
    "b",
    "name",
    "other",
    "difference",
    "previous",
    "v"
   ],
   "async": true
  },
  "range": {
   "identifiers": [
    "list_add",
    "range",
    "count",
    "r",
    "i"
   ],
   "async": false
  },
  "sandbox": {
   "identifiers": [
    "marker",
    "sandbox",
    "test"
   ],
   "async": true
  },
  "schtasks_query": {
   "identifiers": [
    "command_line_schtasks",
    "throws_not_async",
    "command_line",
    "schtasks_query",
    "name",
    "lambda2",
    "command",
    "success"
   ],
   "async": true
  },
  "search_generic": {
   "identifiers": [
    "list_to_dictionary",
    "object_property_set",
    "each",
    "string_includes",
    "list_all",
    "list_filter",
    "string_split",
    "log",
    "search_generic",
    "search",
    "list",
    "value_get",
    "terms",
    "lambda2",
    "n",
    "lambda",
    "term",
    "v",
    "v2",
    "f_names_search",
    "result"
   ],
   "async": false
  },
  "server": {
   "identifiers": [
    "log_keep",
    "path_join",
    "express",
    "path",
    "fileURLToPath",
    "folder_public",
    "server",
    "app",
    "port",
    "__filename",
    "import",
    "meta",
    "url",
    "__dirname",
    "dirname",
    "result",
    "result2",
    "v",
    "static",
    "use",
    "listen"
   ],
   "async": false
  },
  "string_empty": {
   "identifiers": [
    "string_empty"
   ],
   "async": false
  },
  "string_empty_is": {
   "identifiers": [
    "string_empty_is",
    "s",
    "e"
   ],
   "async": false
  },
  "string_empty_not_is": {
   "identifiers": [
    "string_empty_is",
    "string_empty_not_is",
    "name",
    "ne"
   ],
   "async": false
  },
  "string_ends_with": {
   "identifiers": [
    "string_ends_with",
    "s",
    "suffix",
    "ew",
    "endsWith"
   ],
   "async": false
  },
  "string_includes": {
   "identifiers": [
    "string_is_assert_json",
    "string_is_assert_message",
    "assert_message",
    "json_to",
    "string_includes",
    "string",
    "item",
    "o",
    "v",
    "includes"
   ],
   "async": false
  },
  "string_is": {
   "identifiers": [
    "string_is",
    "value"
   ],
   "async": false
  },
  "string_is_assert": {
   "identifiers": [
    "assert",
    "string_is",
    "string_is_assert",
    "value",
    "b"
   ],
   "async": false
  },
  "string_is_assert_json": {
   "identifiers": [
    "string_is_assert_message",
    "json_to",
    "string_is_assert_json",
    "value",
    "o",
    "message"
   ],
   "async": false
  },
  "string_is_assert_message": {
   "identifiers": [
    "marker",
    "assert",
    "string_is",
    "assert_message",
    "string_is_assert_message",
    "value",
    "message",
    "b",
    "v"
   ],
   "async": false
  },
  "string_pad": {
   "identifiers": [
    "string_pad",
    "padding",
    "s",
    "padded"
   ],
   "async": false
  },
  "string_prefix_without": {
   "identifiers": [
    "string_skip",
    "string_starts_with",
    "string_ends_with",
    "error",
    "string_slice",
    "string_size",
    "string_prefix_without",
    "s",
    "prefix",
    "skipped"
   ],
   "async": false
  },
  "string_size": {
   "identifiers": [
    "string_size",
    "s",
    "length"
   ],
   "async": false
  },
  "string_skip": {
   "identifiers": [
    "string_slice",
    "string_size",
    "string_skip",
    "s",
    "skip_count",
    "b",
    "skipped"
   ],
   "async": false
  },
  "string_slice": {
   "identifiers": [
    "string_slice",
    "s",
    "a",
    "b",
    "slice"
   ],
   "async": false
  },
  "string_split": {
   "identifiers": [
    "string_split",
    "s",
    "separator",
    "split"
   ],
   "async": false
  },
  "string_split_comma": {
   "identifiers": [
    "string_split",
    "string_split_comma",
    "f_names"
   ],
   "async": false
  },
  "string_starts_with": {
   "identifiers": [
    "string_starts_with",
    "s",
    "prefix",
    "startsWith"
   ],
   "async": false
  },
  "string_suffix_change": {
   "identifiers": [
    "string_suffix_without",
    "string_suffix_change",
    "input",
    "ending_old",
    "ending_new",
    "without",
    "changed"
   ],
   "async": false
  },
  "string_to": {
   "identifiers": [
    "string_to",
    "input",
    "s",
    "toString"
   ],
   "async": false
  },
  "tasks_run": {
   "identifiers": [
    "string_pad",
    "function_name_separator",
    "function_run",
    "each_async",
    "object_properties",
    "task_function_name_part",
    "functions_search",
    "tasks_run",
    "result2",
    "separator",
    "search",
    "result",
    "properties",
    "lambda",
    "item",
    "result3"
   ],
   "async": true
  },
  "task_function_name_part": {
   "identifiers": [
    "task_function_name_part"
   ],
   "async": false
  },
  "task_new": {
   "identifiers": [
    "function_name_unalias",
    "function_current_set",
    "task_function_name_part",
    "function_name_combine_multiple",
    "js_code_string",
    "js_declaration_single_block_blody",
    "js_declaration_to_block_body",
    "js_call_insert",
    "error",
    "js_call_new",
    "function_transform",
    "function_new",
    "function_name_combine",
    "data_function_current_get",
    "todo",
    "task_new",
    "task_name",
    "f_name",
    "result2",
    "unaliased",
    "f_name_task",
    "f_name_current",
    "lambda",
    "ast",
    "body_block",
    "name",
    "result"
   ],
   "async": true
  },
  "task_new_simple": {
   "identifiers": [
    "task_new",
    "task_new_simple"
   ],
   "async": true
  },
  "tautology": {
   "identifiers": [
    "tautology"
   ],
   "async": false
  },
  "throws_not_async": {
   "identifiers": [
    "throws_not_async",
    "lambda",
    "success",
    "e"
   ],
   "async": true
  },
  "todo": {
   "identifiers": [
    "error",
    "todo"
   ],
   "async": false
  },
  "trinity_green": {
   "identifiers": [
    "chalk_green",
    "trinity_green",
    "s"
   ],
   "async": true
  },
  "undefined": {
   "identifiers": [
    "undefined"
   ],
   "async": false
  },
  "undefined_is": {
   "identifiers": [
    "undefined_is",
    "value"
   ],
   "async": false
  },
  "undefined_not_is_assert_lambda": {
   "identifiers": [
    "error",
    "json_to",
    "undefined_is",
    "undefined_not_is_assert_lambda",
    "value",
    "lambda",
    "object",
    "message"
   ],
   "async": false
  },
  "visit": {
   "identifiers": [
    "tautology",
    "visit_filter",
    "visit",
    "node",
    "children_get",
    "on_each"
   ],
   "async": false
  },
  "visit_async": {
   "identifiers": [
    "visit_filter_async",
    "tautology",
    "visit_async",
    "node",
    "children_get",
    "on_each"
   ],
   "async": true
  },
  "visit_filter": {
   "identifiers": [
    "visit_filter_recursive",
    "visit_filter",
    "node",
    "children_get",
    "filter",
    "on_each"
   ],
   "async": false
  },
  "visit_filter_async": {
   "identifiers": [
    "visit_filter_recursive_async",
    "visit_filter_async",
    "node",
    "children_get",
    "filter",
    "on_each"
   ],
   "async": true
  },
  "visit_filter_recursive": {
   "identifiers": [
    "each",
    "list_add",
    "list_pop",
    "list_copy",
    "error",
    "visit_filter_recursive",
    "node",
    "children_get",
    "filter",
    "on_each",
    "stack",
    "children",
    "c",
    "copy",
    "removed"
   ],
   "async": false
  },
  "visit_filter_recursive_async": {
   "identifiers": [
    "each_async",
    "each",
    "list_add",
    "list_pop",
    "list_copy",
    "error",
    "visit_filter_recursive_async",
    "node",
    "children_get",
    "filter",
    "on_each",
    "stack",
    "copy",
    "children",
    "c",
    "removed"
   ],
   "async": true
  },
  "visit_unique_async": {
   "identifiers": [
    "list_add_if_not_includes",
    "list_includes",
    "list_add",
    "list_difference",
    "visit_async",
    "visit_unique_async",
    "node",
    "children_get",
    "on_each",
    "found",
    "lambda",
    "children",
    "lambda2",
    "v"
   ],
   "async": true
  },
  "data_identifiers_search": {
   "identifiers": [
    "function_name_to_path",
    "list_to_dictionary",
    "object_property_get",
    "data_property_get",
    "marker",
    "data_identifiers_search",
    "s",
    "identifiers",
    "list",
    "result"
   ],
   "async": true
  },
  "js_imports_unused": {
   "identifiers": [
    "list_filter_property",
    "list_map",
    "js_imports_declarations",
    "js_identifiers_named_count",
    "log",
    "counter",
    "list_adder",
    "object_property_get",
    "js_visit_type",
    "js_visit",
    "each",
    "js_imports",
    "marker",
    "object_merge",
    "js_imports_unused",
    "ast",
    "imports",
    "lambda",
    "i",
    "name",
    "declaration",
    "count_import",
    "count_declaration",
    "to",
    "unused",
    "mapped",
    "unuseds"
   ],
   "async": false
  },
  "counter": {
   "identifiers": [
    "marker",
    "counter",
    "lambda$c",
    "i",
    "c"
   ],
   "async": false
  },
  "js_imports_declarations": {
   "identifiers": [
    "marker",
    "not",
    "js_imports_all",
    "js_visit_type",
    "list_size_1",
    "js_node_type_is",
    "string_starts_with",
    "list_single",
    "list_map_property",
    "list_unique",
    "list_adder_unique",
    "js_type",
    "each",
    "js_imports_declarations",
    "ast",
    "vs",
    "lambda2",
    "la",
    "lambda",
    "v",
    "node",
    "specifiers",
    "source",
    "a",
    "a2",
    "value",
    "a3",
    "specifier",
    "imported",
    "local",
    "both",
    "mapped",
    "unique",
    "name",
    "declaration",
    "imports"
   ],
   "async": false
  },
  "list_first_remaining": {
   "identifiers": [
    "list_first_second_generic",
    "list_skip_1",
    "marker",
    "list_multiple_is",
    "list_second",
    "list_first",
    "list_empty_not_is",
    "list_skip",
    "list_first_remaining",
    "list",
    "property_name",
    "value_get",
    "result"
   ],
   "async": false
  },
  "js_imports_unused_remove": {
   "identifiers": [
    "list_remove",
    "each",
    "object_property_get",
    "js_imports_unused",
    "marker",
    "js_imports_unused_remove",
    "ast",
    "unuseds",
    "body",
    "lambda",
    "unused",
    "declaration"
   ],
   "async": true
  },
  "function_imports_fix": {
   "identifiers": [
    "js_imports_unused_remove",
    "marker",
    "function_imports_add",
    "each",
    "function_imports_missing",
    "function_name_to_base",
    "js_parse_statement",
    "list_add_first",
    "file_js_unparse",
    "function_name_to_path",
    "function_imports_fix",
    "f_name",
    "parsed",
    "imports_missing",
    "ast"
   ],
   "async": true
  },
  "js_imports_fix": {
   "identifiers": [
    "list_remove",
    "object_property_get",
    "js_imports_missing_add",
    "js_imports_unused",
    "each",
    "js_imports_fix",
    "ast",
    "unuseds",
    "body",
    "lambda",
    "unused",
    "declaration",
    "v"
   ],
   "async": true
  },
  "data_set": {
   "identifiers": [
    "data_transform",
    "data_set",
    "lambda$previous",
    "property_name",
    "lambda",
    "previous",
    "v2"
   ],
   "async": true
  },
  "date_now_iso": {
   "identifiers": [
    "date_iso_to",
    "date_now",
    "date_now_iso",
    "now",
    "now_iso"
   ],
   "async": false
  },
  "date_now": {
   "identifiers": [
    "date_now",
    "now",
    "Date"
   ],
   "async": false
  },
  "lambda_get": {
   "identifiers": [
    "lambda_get",
    "value",
    "value_get"
   ],
   "async": false
  },
  "data_file_update_inner": {
   "identifiers": [
    "object_property_get",
    "js_declaration_single",
    "object_property_set",
    "object_property_delete",
    "list_empty_is",
    "list_remove_all",
    "list_difference",
    "each",
    "list_add_if_not_includes",
    "object_property_initialize",
    "js_identifiers_names",
    "function_path_to_name",
    "data_file_update_inner",
    "parsed",
    "d",
    "f_path",
    "f_name",
    "data",
    "ast",
    "f_identifiers_new",
    "property_name",
    "identifiers",
    "lambda2",
    "i_name",
    "list",
    "functions",
    "f_this",
    "declaration",
    "async_is",
    "f_identifiers_old",
    "removals",
    "lambda",
    "item",
    "e"
   ],
   "async": true
  },
  "date_diff_hours": {
   "async": false,
   "identifiers": [
    "date_ms_to_hours",
    "date_diff_ms",
    "date_diff_hours",
    "now",
    "before",
    "ms",
    "hours"
   ]
  },
  "date_diff_ms": {
   "async": false,
   "identifiers": [
    "date_diff_ms",
    "now",
    "before",
    "v",
    "Math",
    "abs"
   ]
  },
  "date_iso_to": {
   "async": false,
   "identifiers": [
    "date_iso_to",
    "d",
    "v",
    "toISOString"
   ]
  },
  "date_ms_to_hours": {
   "async": false,
   "identifiers": [
    "date_ms_to_hours",
    "ms",
    "v"
   ]
  },
  "date_to": {
   "async": false,
   "identifiers": [
    "date_to",
    "before_iso",
    "v",
    "Date"
   ]
  },
  "functions_paths": {
   "async": false,
   "identifiers": [
    "function_name_to_path",
    "list_map",
    "functions_names",
    "functions_paths",
    "f_names",
    "f_paths"
   ]
  },
  "js_identifiers_named_count": {
   "async": false,
   "identifiers": [
    "counter",
    "js_visit_type",
    "object_property_get",
    "js_identifiers_named_count",
    "ast",
    "i_name",
    "lambda3",
    "c",
    "lambda2",
    "v",
    "node",
    "name",
    "count_import"
   ]
  },
  "list_first_second_generic": {
   "async": false,
   "identifiers": [
    "list_multiple_is",
    "list_first",
    "list_empty_not_is",
    "list_first_second_generic",
    "list",
    "value_get",
    "property_name",
    "first",
    "second",
    "result"
   ]
  },
  "list_skip_1": {
   "async": false,
   "identifiers": [
    "list_skip",
    "list_skip_1",
    "list",
    "skipped"
   ]
  },
  "log_error": {
   "async": true,
   "identifiers": [
    "log_keep",
    "chalk_red",
    "log_error",
    "prompt",
    "colored"
   ]
  },
  "marker_leave": {
   "async": true,
   "identifiers": [
    "list_insert",
    "list_remove",
    "list_get_end_2",
    "list_get_end_1",
    "list_index_of",
    "list_is_assert",
    "list_get_end",
    "function_transform_marker_current",
    "marker",
    "marker_leave",
    "lambda",
    "a",
    "stack",
    "stack4",
    "stack5",
    "index",
    "stack1",
    "stack2",
    "v"
   ]
  },
  "marker_up": {
   "async": true,
   "identifiers": [
    "marker",
    "marker_down_generic",
    "integer_to",
    "marker_up",
    "delta",
    "v",
    "delta_get",
    "i"
   ]
  }
 },
 "git_push_when": "2025-08-21T17:02:42.805Z",
 "error_attention": null
}