{"aliases":{"a":"function_alias_add","c":"function_copy","n":"function_new","ts":"function_types","tf":"function_type_first","o":"function_open","s":"functions_search","ac":"function_alias_change","al":"function_aliases","ni":"npm_install","i":"function_imports_missing_add","fa":"functions_format","v":"server","m":"marker_top","mr":"marker_remove","md":"marker_down","ma":"marker_assign_replace","mc":"marker_call","u":"function_name_unalias","ft":"function_transform","fm":"function_format","f":"data_function_current_get","fs":"function_current_set","ai":"function_aliases_inverted","np":"noop","ps":"data_prompts","p":"prompt_previous","pn":"function_param_new","ad":"function_alias_delete","ar":"function_alias_replace","fd":"function_dependencies_code_copy","de":"function_delete","ir":"function_identifier_replace","au":"function_auto","fw":"function_wrap","sb":"sandbox","psn":"function_params_new","irs":"function_identifier_replace_suffix_add","ftc":"function_transform_command","mcr":"marker_call_replace","mnd":"marker_next_delete","fts":"function_transform_command_self","ire":"function_identifier_replace_ending_remove","mx":"marker_next","mn":"marker_new","mca":"marker_call_atomize","x":"marker_expand","ms":"marker_current_set","as":"function_aliases_search","mg":"data_marker_current_get","mm":"marker_move","mf":"marker_functionize","w":"watch","fws":"function_wrap_suffix_add","nj":"function_new_js","mb":"marker_bottom","na":"function_new_aliased","so":"functions_search_open","t":"task_new","tr":"tasks_run","op":"object_properties","ea":"each_async","tns":"task_new_simple","sei":"string_empty_is","lf":"list_first","ls":"list_second","or":"object_replace","st":"object_property_set","ntn":"js_node_type_not_is","oc":"object_copy","jpe":"js_parse_expression","lg":"list_get","fns":"functions_names","e":"each","l1":"list_get_end_1","lal":"list_all","l2":"list_get_end_2","fnu":"function_name_unalias","lin":"list_includes","li":"list_is","l":"log","at":"assert","ld":"list_adder","la":"list_add","ss":"string_split","ssc":"string_split_comma","fnt":"function_new_transform","jps":"js_parse_statement","fc":"functions_combine","lm":"list_map","lmu":"list_map_unordered_async","lmp":"list_map_property","fst":"function_current_set_task_new","fsp":"function_name_separator","atn":"function_acronym_to_names","cs":"function_copy_suffix_add","er":"error","fsts":"function_current_set_task_new_simple","nt":"js_node_type_is","nti":"js_node_type_is_if","fr":"function_read","":"oe","oe":"function_open_editor","fp":"function_parse_declaration_js_unparse"},"prompts":["f function_run_prompt","n function_run_line","a pr prompt_previous","n list_reverse","n list_copy_reverse","i list_copy_reverse","n list_unique_reverse","i list_unique_reverse","n function_current_set","i function_open","a fcs function_current_set","mc function_transform","n function_identifier_replace","c js_identifiers_names js_identifiers","fcs function_identifier_replace","mc js_identifiers","mc each","f function_identifier_replace","n js_identifiers_named","i js_identifiers_named","n object_replace","n object_properties_delete","i object_properties_delete","i object_replace","c","import {assert} from 'console';","i import {assert} from 'console';","i function_identifier_replace","fcs function_param_new","function_identifier_replace lambda ast=>{}","s format","f function_param_new","fc","ac f fm","ac fc f","ac fcs fs","mc js_declaration","o pr","n object_invert","c object_invert each_object","i each_object","i object_invert","n function_aliases_inverted","i function_aliases_inverted","a ai function_aliases_inverted","prompt_previous","ppr","ac p np","pr prompt_previous","f prompt_previous","fm prompt_previous","o fm","i file_js_unparse","pr","n data_prompts","i data_prompts","a ps data_prompts","ac pr p","fs function_param_new","mc js_declaration_single","function_param_new function_dependencies","a pn function_param_new","fs function_dependencies","a fd function_dependencies","fd fd","n function_imports","i function_imports","i fd","c visit visit_async","c visit_filter visit_filter_async","c visit_filter_recursive visit_filter_recursive_async","i visit_filter_recursive_async","i visit_filter_async","n visit_unique_async","u p","i visit_async","i visit_unique_async","i function_dependencies","function_dependencies function_dependencies","n function_dependencies_code","n list_wait","i functions_format","o function_dependencies_code","i function_dependencies_code","function_dependencies_code","i function_dependencies_code ","function_dependencies_code function_dependencies_code","ni clipboardy","n clipboard_copy","n function_dependencies_code_copy","s clipboard","i function_dependencies_code_copy","u ac","a ad function_alias_delete","c function_alias_change function_alias_replace","a ar function_alias_replace","a fd function_dependencies_code_copy","ar fd function_dependencies_code_copy","c noop noop2","fd function_copy","ifunction_name_to_path","function_name_to_path","c np noop2","s delete","c file_overwrite file_delete","c function_new function_delete","i function_delete","a de function_delete","o i","n function_auto","a ir function_identifier_replace","fs function_auto ","ir lambda ast=>{}","n js_outside_move","i function_auto","a au function_auto","fm js_outside_move","f js_outside_move","mc each_async","ir lambda fd=>{}","n js_code_export","n js_declaration_name","i js_declaration_name","i js_imports_missing","n function_new_declaration","js_code_export a","i function_new_declaration","function_auto function_auto","c list_map_property list_filter_property","i list_filter_property","s function_auto_test","au au","de function_auto_test","n string_split","n list_all","i list_all","i functions_search","s ht,n","n function_new_js","i function_new","i function_new_js","s slice","c string_slice list_slice","d param","au function_param_new","i mc","ir name f_name","o ir","n function_wrap","pn f_name","pn f_name_wrapped","au function_new_js","n function_name_combine","a fw function_wrap","u pn","i function_wrap","de function_params_new","fw function_param_new function_params_new","n sandbox","i sandbox","a sb sandbox","au sb","fw file_exists function_exists","i function_exists","au function_run_git","au function_run_line","c function_run_line function_run_line_git","s prompt","i function_run_prompt","i function_delete_if_exists","function_exists function_params_new","o function_params_new","i function_param_new","i function_params_new","a psn function_params_new","fs function_name_combine","psn left,right","fm function_name_combine","au function_name_combine","u ir","fw function_identifier_replace function_identifier_replace_suffix","de function_identifier_replace_suffix","fw function_identifier_replace function_identifier_replace_suffix_add","i function_identifier_replace_suffix_add","a irs function_identifier_replace_suffix_add","irs f_name unprefixed","au data_prompts","i ps","fm js_stack_declaration_asyncify","o ps","n js_return_name","au function_wrap","au mc","au ast","au js_return_name","fw function_transform function_transform_command","i function_transform_command","a ftc function_transform_command","fs js_return_name","s names","i js_return_name","ftc js_return_name js_return_name","i marker_call","mc function_name_combine","ir right f_name_unprefixed","ir left \"js\"","c marker_assign_replace marker_call_replace","tf AwaitExpression","marker_call_replace","s inte","marker_call_replace 1","a mr marker_call_replace","a mcr marker_call_replace","mcr 0","mcr 0 combined","c mcr marker_next_delete","ir body2 body","o mc","au list_remove","i marker_next_delete","a md marker_next_delete","u mr","a mnd marker_next_delete","mc n","mc ft","ir f_name combined","mnd","o irs","c function_identifier_replace_suffix_add","c function_identifier_replace_suffix_add function_identifier_replace_suffix_remove","de function_identifier_replace_suffix_remove","c function_identifier_replace_suffix_add function_identifier_replace_ending_remove","ir suffix_to_add ending_to_remove","n js_atomize","pn as","o pn","pn ast","ir ast2 ast","s filter","s ident","fw object_merge object_copy","au js_stack_declaration_asyncify","i function_run_line","au marker_next_index","au marker_call","i list_index_of","ftc js_atomize js_atomize","au marker_assign_replace","u ftc","fw function_transform_command function_transform_command_self","a fts function_transform_command_self","fts js_atomize","i au","ts CallExpression","tf CallExpression","au function_identifier_replace_ending_remove","integer_to a","fs function_identifier_replace_ending_remove","mcr c string_suffix_without","ir combined removed","a ire function_identifier_replace_ending_remove","ire lambda2 2","marker_down 0","fs function_new_js","cd 0","au marker_down","i md","md 0","s list,next","i marker_down","s g","o function_new_js","mc js_declaration_single_params_add","mcr 1 ['ast']","i js_atomize","au md","mc js_type","ir node_type 'Identifier'","md 4","ac mn mx","c marker_next marker_new","s call,ex","s code,call","a mn marker_new","s delim","c function_current_set marker_current_set","fs js_atomize","s arg","c marker_call_replace marker_call_atomize","i marker_call_replace","au marker_call_replace","o js_node_atomize","de js_node_tomize","au js_atomize","fm js_node_atomize","s marker,next","au marker_call_atomize","i marker_call_atomize","a mca marker_call_atomize","mca 1","c mx marker_expand","i js_node_atomize","de js_statement_call_get","au marker_call_replace_generic","s blody","au js_declaration_single_block_blody","au js_declaration_params_names","fw js_node_type_is js_identifier_is","i js_identifiers_to_names","fw each each_index","i each_pair","s identifier","s inter","s copy","o marker_expand","au marker_expand","a x marker_expand","i marker_expand","ni astring","o p","i prompt_previous","au marker_new","i marker_top","i marker_new","a ms marker_current_set","au marker_top","au data_function_current_get","mc","ms","o ms","o f","c data_function_current_get data_marker_get","de data_marker_get","c data_function_current_get data_marker_current_get","o data_marker_current_get","ali","ai","u al","fw function_aliases function_aliases_search","al","au function_aliases_search","au functions_search","au search_generic","i function_aliases_search","a as function_aliases_search","as marker","a mg data_marker_current_get","c function_transform_marker marker_move","a mm marker_move","o mx","i function_transform_marker","au function_transform_marker","i marker_move","mm 1 2","mm 2 1","c marker_move marker_functionize","au marker_move","o list_index_of_","o list_index_of_next","au list_index_of_next","c list_index_of_next list_index_of_previous","i marker_previous_index","c marker_next_index marker_previous_index","fw list_slice list_range","mf marker_functionize","a mf marker_functionize","s js,node,type","au function_types","fw js_node_types js_node_types_includes","i js_node_types_includes","s any","c list_all list_any","i list_any","fs marker_functionize","s declarat","c list_add list_add_multiple","mf 1 2","","au export function js_stack_last(stack, type) {","au js_stack_last","s range","n range","fm range","fw each each_range","i each_range","i list_next_index","o list_adder","au list_adder","c list_adder list_adder_multiple","fs html_new ","au marker_functionize","s declaration","i marker_functionize","fs html_new4","i function_current_set","c function_transform_marker function_transform_marker_all","i function_transform_marker_all","i marker_remove","o function_transform_marker","au function_transform_marker_all","i function_transform","i html_new","ms 1","s html","i js_outside_move","de export async function html_overwrite(name, body, file_path) {","de html_overwrite","u f","md 3","c function_params_new function_param_move","au function_params_new","i function_param_move","fw list_map list_map_index","fw list_filter list_find","fw list_find list_find_property","s property","au list_filter_property","i list_find_property","au function_param_swap","n list_swap","s insert","au list_insert","c list_insert list_replace","i list_swap","i js_declaration_param_named","function_param_swap body file_path","i function_param_swap","function_param_swap html_overwrite body file_path","au html_new","i html_overwrite","ni chokidar","n watch","n import_install","import_install chokidar","import_install chokdiar","u ni","i import_install","s src","s public","a w watch","fw fw function_wrap_suffix_add","fw fws function_wrap_suffix_add","a fws function_wrap_suffix_add","fw au path","de path","de au_path","o fws","i function_wrap_suffix_add","fws au path","s path,name","s path","i folder_read","i function_import","i function_name_to_path","n path_name","i function_auto_path","function_auto_path src/noop.mjs","au function_auto_path","i watch","o mn","n string_to","s push","au git_push","s ex","au marker_first","u nj","s js","s js,new","a nj function_new_js","nj return_atomize","s js,visit","c js_return_on js_return_on_async","ftc marker_first js_return_atomize","s expa","de js_declarator_init_set","s init","s uniqu","fs marker_top","mr","o mr","md 2","o md","u mb","c md marker_bottom","a mb marker_bottom","s last","n list_last_is","ms 2","mb","c log log_keep","o log","nj if_else_if_combine","o function_run","s swap","s json","c json_to json_format_to","s run,log","s s","nj calls_to_each","nj call_fill","np","o mf","nj dollar","tf ExpressionStatement","n equal_by","c assert assert_message","w","c catch_log catch_log_async","s eq","s prefix","s suffix","c string_suffix_without string_prefix_without","s start","si git_acp_call","fd git_acp_call","s catch","n identity","i catch_only_async","fd git_commit","fs marker_call","mf 1 2 js_call_new","sgit","fd git_acp","fd js_call_fill","s ignore","i js_unparse","s visit,async","n js_visit_type_each_async","o w","s dec,name","nj declare_assign_null","nj await_add","fd js_unparse","nj import_inside","o ftc","s import","ftc js_imports js_import_inside","o js_type","js_visit_filter n","ftd js_await_add","s function,trans","fts js_await_add","ftc js_await_add js_unparse_inner","n task_new","o m","s funct,new","u s","n function_new_aliased","u a","a na function_new_aliased","s search","na functions_search_open so","o so","so fill","u ft","s body","as v","as task_new","a t task_new","de js_call_fill_test","de","f_name_task","t test","s test","de js_call_fill_test_test","de js_call_fill_test_test_test","de js_call_fill_test_test_test_test","de js_call_fill_test_test_test_test_test","n function_name_combine_multiple","na tasks_run tr","o s","s task_","s prop","a op object_properties","a ea each_async","s function","s task","s _task_","fts js_declare_assign_null","fs function_param_swap","t simple","tr","nj let_add","u","fw t task_new_simple","fs js_let_add","a tns task_new_simple","tns","a nti js_node_type_is","a sei string_empty_is","a lf list_first","s empty","s seco","c list_first list_second","a ls list_second","s skip","de list_skip","c string_skip list_skip","s string","so dollar","a or object_replace","s define","u li","fs js_identifier_defineds","tf ArrowFunctionExpression","nj arrow_to_function","a st object_property_set","c js_arrow_to_function js_arrow_blockify","s js_node_type","a ntn js_node_type_not_is","u g","s get","s identi","a oc object_copy","o ts","ft FunctionDeclaration","c js_arrow_to_function js_function_id_add","fs js_function_id_add","ts","s atomi","c js_atomize js_atomize_function","s id,name","fs function_run_log","t duplicate_lines_to_each","a jpe js_parse_expression","fts js_atomize_function","de js_dollar_task_each_code_own_fn_task_if_else_to_generic","fs js_dollar","t each_code_own_fn","t if_else_to_generic","s current,get","s current,set","nj params_consolidate","n function_params_consolidate","de js_params_consolidate","as exist","s exist","s before","s previous","a lg list_get","u st","fs js_declaration_param_add","mn","mf 1 2 js_declaration_params_get","s js_dollar_g","ts js_dollar_g","fs js_dollar_g","tf FunctionDeclaration","tf Property","fs function_params_consolidate","s list,clear","s clear","s list","n list_empty","function_params_consolidate js_dollar_g","s transform","a fns function_names","a fns functions_names","ac fns functions_names","o ac","ac functions_names fns","ar fns functions_names","s functions_names","a e each","s each","a l1 list_get_end_1","c js_stack_filtered js_stack_filtered_multiple","a la list_adder","a lal list_all","s atomize","s atom","fw string_is","fw string_is string_is_assert","c js_stack_last js_stack_last_multiple","a l2 list_get_end_2","u l2","ftc js_declare_assign_null e","c data_function_current_get data_watch_get","c function_current_set data_watch_set","fs au","t arrow_to_function_should_add_return","s arrow","s au","de au_task_arrow_to_function_should_add_return","o t","a fnu function_name_unalias","fs data_watch_set","t add_return","o e","s next","a li list_is","ac li lin","a li list_includes","ar li list_is","a log l","s alias","as alias","ad log","a l log","o a","s sort","fw list_sort_string list_sort_string_mapper","de list_sort_string_mapper","c list_sort_string list_sort_number_mapper","o list_sort_string","a test t","a test ttt","ttt","ad ttt","fd list_sort_string_size","a test tt","tt","ad tt","a at assert","s remove","s nodes","s type,js","s name","ftc js_dollar export function js_identifier_defineds(v) {","ftc js_dollar js_identifier_defineds","as list","ac la ld","a la list_add","s invo","s lamb","n lambda_invoke","s stack","s function,type","s types","s assert","s param","fts js_let_add","n functions_combine","s split","a ss string_split","a ssc string_split_comma","s fun,new","sa function_new_transform ","as function_new_transform","a fnt function_new_transform","s join","s combine","s call","u jsp","s parse","a jps js_parse_statement","s block","u fc","a fc functions_combine","o fs","fc fs t","lm","a lm list_map","s list,map","a lmu list_map_unordered_async","s fill","u fnu","o fw","de function_current_set_task_new","fc fs,t","de fs_t","s fil","s let","s sand","o sb","lmp","a lmp list_map_property","s unalias","fst function_alias_add_generic unalias_from_acronyms","s find","sb","a fst function_current_set_task_new","n function_name_to_acronym","s separ","a fsp function_name_separator","s part","s first","function_name_to_acronym function_name_to_acronym","n function_names_to_acronyms","s lookup","s dict","s object","n list_to_dictionary","so doll","s ac","s invert","function_names_to_acronyms","n git_push_schedule","n path_resolve","jis","s acro","n function_acronym_to_names","s dollar","a atn function_acronym_to_names","atn ii","atn jis","path_resolve .","s folder","s git","a ii import_install","git_push_schedule","fw c function_copy_suffix_add","u cs","a cs function_copy_suffix_add","cs git_push_schedule check","f ","fs git_push_schedule_check","x","git_push_schedule_check","schtasks_query t","s schedule","as err","git_push_schedule_command","fd git_push_schedule_command","o fd","s unique","cs list_adder_unique async","fd git_push_schedule","o command_line_schtasks ","s end","n js_declaration_params_names","n js_declaration_params_names_node","nj dollar_s","s doll","s size,assert","n list_squash","a er error","s statement","nj dollar_f","s parent","s code,fn","s code,fun","s function,ke","s index,next","s assign","s null","fst function_params_consolidate simple","fw fst","s wrap","as wrap","fws fst simple","a fsts function_current_set_task_new_simple","fsts js_await_add","fsts function_param_swap","fsts js_import_inside","fsts js_calls_to_each","s else","s visit","s replace","as replace","o ire","fs js_if_else_if_combine","ir type 'IfStatement'","md 1","md -1","md -2","fws nti if","s return","o au","u nt","ac nti nt","u n","u t","a nti js_node_type_is_if","c js_node_type_is_if js_node_type_is_if_async ","s equal","u eb","o cs","de eb_async","cs eb async","o eb","s left","ftc js_if_else_if_combine marker_down_generic","s auto","i js_auto","mf html_overwrite","mf 1 2 html_overwrite","o html_overwrite","f","fs html_new","mf 1 2 html_update","s brace","i function_imports_add","s code,str","s current","au function_imports_add","ftc js_outside_move function_imports_add","i folder_current_join","s async","mt","u mt","fs js_await_add","o data_all","da","s data","u ds","o ds","s read","a function_read fr","o fr","s unal","fs","fr fr","s dec","fr fpd","add jesus christ","string_to jesus","js_parse 'a'","de data_property_new","n data_property_new","o n","fr o","u fo","fs file_open","m","fr file_open","s marker","js_parse 1","o file_open","s open","s await","s declar","fc function_parse_declaration,ju","cs function_open editor","s function_open_editor","a oe   await function_current_set(f_name);","ar oe function_open_editor","a oe function_open_editor","a fp function_parse_declaration_js_unparse","oe js_await_add","u fs","u fn","u fns","oe function_parse_declaration_js_unparse","oe mc","u ls","oe list_single","fs jaa","mg","u fr","p","ps","mc jvt","fr jaa","sa declar","as declar","fp jaa","ire ast2 2","s watch","oe dwg","c dwg data_editor_get","o o","oe o","s ext","de data_editor_get","c dwg data_terminal_get","u dws","oe dws","c dws data_terminal_set"],"marker_current":"1","function_current":"o"}