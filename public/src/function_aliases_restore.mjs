import { marker } from "./marker.mjs";
import { data_transform } from "./data_transform.mjs";
export async function function_aliases_restore() {
  marker("1");
  async function lambda(previous) {
    let v2 = {
      a: "function_alias_add",
      c: "function_copy",
      n: "function_new",
      ts: "function_types",
      tf: "function_type_first",
      o: "function_open",
      s: "functions_search",
      ac: "function_alias_change",
      al: "function_aliases",
      ni: "npm_install",
      fa: "functions_format",
      v: "server",
      m: "marker_top",
      mr: "marker_remove",
      md: "marker_down",
      ma: "marker_assign_replace",
      mc: "marker_call",
      u: "function_name_unalias",
      ft: "function_transform",
      fm: "function_format",
      f: "data_function_current_get",
      fs: "function_current_set",
      ai: "function_aliases_inverted",
      np: "noop",
      ps: "data_prompts",
      p: "prompt_previous",
      pn: "function_param_new",
      ad: "function_alias_delete",
      ar: "function_alias_replace",
      fd: "function_dependencies_code_copy",
      de: "function_delete",
      ir: "function_identifier_replace",
      au: "function_auto",
      fw: "function_wrap",
      sb: "sandbox",
      psn: "function_params_new",
      irs: "function_identifier_replace_suffix_add",
      ftc: "function_transform_command",
      mcr: "marker_call_replace",
      mnd: "marker_next_delete",
      fts: "function_transform_command_self",
      ire: "function_identifier_replace_ending_remove",
      mx: "marker_expand",
      mn: "marker_new",
      mca: "marker_call_atomize",
      ms: "marker_current_set",
      as: "function_aliases_search",
      mg: "data_marker_current_get",
      mm: "marker_move",
      mf: "marker_functionize",
      w: "watch",
      fws: "function_wrap_suffix_add",
      nj: "function_new_js",
      na: "function_new_aliased",
      so: "functions_search_open",
      t: "task_new",
      tr: "tasks_run",
      op: "object_properties",
      ea: "each_async",
      tns: "task_new_simple",
      sei: "string_empty_is",
      lf: "list_first",
      ls: "list_second",
      or: "object_replace",
      st: "object_property_set",
      ntn: "js_node_type_not_is",
      oc: "object_copy",
      jpe: "js_parse_expression",
      lg: "list_get",
      fns: "functions_names",
      e: "each",
      l1: "list_get_end_1",
      lal: "list_all",
      l2: "list_get_end_2",
      fnu: "function_name_unalias",
      lin: "list_includes",
      li: "list_is",
      l: "log",
      at: "assert",
      ld: "list_adder",
      la: "list_add",
      ss: "string_split",
      ssc: "string_split_comma",
      fnt: "function_new_transform",
      jps: "js_parse_statement",
      fc: "functions_combine",
      lm: "list_map",
      lmu: "list_map_unordered_async",
      lmp: "list_map_property",
      fst: "function_current_set_task_new",
      fsp: "function_name_separator",
      atn: "function_acronym_to_names",
      cs: "function_copy_suffix_add",
      er: "error",
      fsts: "function_current_set_task_new_simple",
      nt: "js_node_type_is",
      nti: "js_node_type_is_if",
      fr: "function_read",
      oe: "function_open_editor",
      fp: "function_parse_declaration_js_unparse",
      oec: "function_open_editor_current",
      cd: "function_current_declaration_code",
      ars: "marker_assign_replace_string",
      mdc: "marker_down_choices",
      lz: "list_size",
      mrt: "marker_remove_marker_top",
      fy: "function_types",
      lk: "list_skip",
      ll: "list_filter",
      jnt: "js_node_type",
      lx: "list_index_of",
      x: "exit",
      ini: "integer_is",
      lu: "log_unparse",
      ntsi: "js_node_types_is",
      jv: "js_visit",
      jvt: "js_visit_type",
      fcp: "function_copy",
      r: "function_rename",
      me: "marker_enter",
      lr: "list_remove",
      lis: "list_insert",
      mab: "marker_above",
      mda: "marker_above_delete",
      ja: "js_auto",
      lax: "list_add_if_not_includes",
      lj: "list_join",
      opd: "object_property_delete",
      fwc: "function_watch_ending_change",
      fntp: "function_name_to_path",
      d: "data_files_update",
      is: "data_identifiers_search",
      lfp: "list_filter_property",
      i: "function_imports_fix",
      ml: "marker_leave",
      mu: "marker_up",
      mb: "marker_below",
      mna: "marker_next_await",
      mpa: "marker_param_add",
      ox: "object_property_exists",
      mi: "marker_if_test_replace",
      mbt: "marker_bottom",
      rg: "range",
      mdm: "marker_next_delete_multiple",
      mdd: "marker_down_1",
      muu: "marker_up_1",
      for: "folder_read",
      fop: "folder_public",
      fpc: "folder_public_combine",
      oh: "app_html_open",
      an: "app_new",
    };
    return v2;
  }
  let v = await data_transform("aliases", {}, lambda);
  return v;
}
